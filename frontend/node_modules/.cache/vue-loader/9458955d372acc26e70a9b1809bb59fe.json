{"remainingRequest":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danielyanger/Documents/template/virtual-robot-app/frontend/src/components/HelloWebSockets.vue?vue&type=style&index=0&id=b47e9244&scoped=true&lang=css&","dependencies":[{"path":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/src/components/HelloWebSockets.vue","mtime":1602021789500},{"path":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMyB7CiAgbWFyZ2luOiA0MHB4IDAgMDsKfQp1bCB7CiAgbGlzdC1zdHlsZS10eXBlOiBub25lOwogIHBhZGRpbmc6IDA7Cn0KbGkgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDAgMTBweDsKfQphIHsKICBjb2xvcjogIzQyYjk4MzsKfQo="},{"version":3,"sources":["HelloWebSockets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWebSockets.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{msg}}</h1>\n    <md-button class=\"md-primary\" v-on:click=\"onClick\">Test</md-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TestWebSockets',\n  data: () => ({\n    msg: 'idle'\n  }),\n  sockets: {\n    connect: function () {\n      this.msg = 'connected'\n    },\n    disconnect: function () {\n      this.msg = 'disconnected'\n    },\n    counter: function (data) {\n      this.msg = 'Got: ' + data['counter']\n    },\n    testPong: function (data) {\n      this.msg = 'Pong: ' + data['msg']\n    }\n  },\n  methods: {\n    onClick: function () {\n      this.msg = 'clicked'\n      this.$socket.emit('testPing', {'msg': 'PING'})\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}