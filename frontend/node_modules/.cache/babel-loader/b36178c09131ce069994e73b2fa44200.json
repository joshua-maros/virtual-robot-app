{"remainingRequest":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/babel-loader/lib/index.js!/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/danielyanger/Documents/template/virtual-robot-app/frontend/src/components/ros.min.js?vue&type=script&lang=js&","dependencies":[{"path":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/src/components/ros.min.js","mtime":1602023926085},{"path":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/danielyanger/Documents/template/virtual-robot-app/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/danielyanger/Documents/template/virtual-robot-app/frontend/src/components/ros.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","global","undefined","POW_2_24","Math","pow","POW_2_32","POW_2_53","encode","value","data","ArrayBuffer","dataView","DataView","lastLength","offset","ensureSpace","newByteLength","byteLength","requiredLength","oldDataView","uint32count","setUint32","getUint32","write","writeFloat64","setFloat64","writeUint8","setUint8","writeUint8Array","writeUint16","setUint16","writeUint32","writeUint64","low","high","writeTypeAndLength","type","encodeItem","floor","utf8data","charCode","charCodeAt","push","Array","isArray","Uint8Array","keys","Object","key","slice","ret","retView","getUint8","decode","tagger","simpleValue","read","readArrayBuffer","readFloat16","tempArrayBuffer","tempDataView","readUint16","sign","exponent","fraction","getFloat32","readFloat32","readFloat64","getFloat64","readUint8","getUint16","readUint32","readUint64","readBreak","readLength","additionalInformation","readIndefiniteStringLength","majorType","initialByte","appendUtf16data","utf16data","decodeItem","elements","fullArrayLength","fullArray","fullArrayOffset","set","String","fromCharCode","apply","retArray","retObject","obj","define","amd","CBOR","process","_isArray","prototype","toString","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","_maxListeners","maxListeners","wildcard","newListener","verboseMemoryLeak","listenerTree","logPossibleMemoryLeak","count","eventName","errorMsg","emitWarning","name","emitter","console","error","trace","EventEmitter","EventEmitter2","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","hasOwnProperty","concat","growListenerTree","listener","split","shift","warned","setMaxListeners","event","once","fn","_once","prependOnceListener","prepend","_many","many","ttl","prependMany","self","off","arguments","_origin","_on","emit","al","args","l","j","handler","_all","ns","emitAsync","Promise","resolve","promises","reject","all","on","prependListener","onAny","_onAny","prependAny","addListener","unshift","leafs","iLeaf","position","splice","recursivelyGarbageCollect","root","Function","offAny","fns","removeListener","removeAllListeners","eventNames","listenerCount","listenersAny","window","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","val","TypeError","shouldUseNative","assign","test1","getOwnPropertyNames","test2","order2","map","join","test3","forEach","letter","err","target","source","from","to","symbols","s","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","run","nextTick","Item","array","title","browser","env","argv","version","versions","noop","binding","cwd","chdir","dir","umask","bundleFn","sources","cache","stringify","JSON","options","wkey","cacheKeys","exp","default","random","wcache","skey","scache","workerSources","resolveSources","depPath","depKey","src","URL","webkitURL","mozURL","msURL","blob","Blob","bare","workerUrl","createObjectURL","worker","Worker","objectURL","ROSLIB","REVISION","Topic","Message","ActionClient","that","ros","serverName","actionName","omitFeedback","omitStatus","omitResult","goals","receivedStatus","feedbackListener","messageType","statusListener","resultListener","goalTopic","cancelTopic","advertise","subscribe","statusMessage","status_list","status","goal","goal_id","id","feedbackMessage","feedback","resultMessage","result","__proto__","cancel","cancelMessage","publish","dispose","unadvertise","unsubscribe","ActionListener","goalListener","goalMessage","Goal","actionClient","isFinished","date","Date","goalID","getTime","stamp","secs","nsecs","send","SimpleActionServer","feedbackPublisher","statusPublisher","resultPublisher","cancelListener","header","frame_id","currentGoal","nextGoal","isEarlier","t1","t2","statusInterval","setInterval","currentTime","round","setSucceeded","result2","sendFeedback","feedback2","setPreempted","Ros","mixin","action","values","Service","ServiceRequest","Param","get","callback","paramClient","serviceType","request","callService","parse","delete","WebSocket","WorkerSocket","socketAdapter","socket","idCounter","isConnected","transportLibrary","transportOptions","groovyCompatibility","url","connect","io","onopen","onmessage","onclose","onerror","constructor","createDataChannel","readyState","CLOSED","sock","binaryType","close","authenticate","mac","client","dest","rand","level","end","auth","op","callOnConnection","message","messageJson","msg","setStatusLevel","levelMsg","getActionServers","failedCallback","action_servers","getTopics","topicsClient","getTopicsForType","topicType","topicsForTypeClient","topics","getServices","servicesClient","services","getServicesForType","servicesForTypeClient","getServiceRequestDetails","serviceTypeClient","getServiceResponseDetails","getNodes","nodesClient","nodes","getNodeDetails","node","subscribing","publishing","getParams","paramsClient","names","getTopicType","topic","topicTypeClient","getServiceType","service","getMessageDetails","messageDetailClient","typedefs","decodeTypeDefs","defs","decodeTypeDefsRec","theType","hints","typeDefDict","fieldnames","arrayLen","fieldarraylen","fieldName","fieldType","fieldtypes","indexOf","sub","subResult","getTopicsAndRawTypes","topicsAndRawTypesClient","ServiceResponse","isAdvertised","_serviceCallback","serviceCallId","_serviceResponse","bind","rosbridgeRequest","response","success","decompressPng","typedArrayTagger","BSON","bson","SocketAdapter","handleMessage","handlePng","decodeBSON","reader","FileReader","onload","uint8Array","deserialize","readAsArrayBuffer","onOpen","onClose","onError","onMessage","decoded","compression","throttle_rate","latch","queue_size","queue_length","reconnect_on_close","callForSubscribeAndAdvertise","waitForReconnect","reconnectFunc","_messageCallback","subscribeId","advertiseId","core","Vector3","Quaternion","Pose","orientation","applyTransform","tf","multiplyQuaternion","rotation","add","translation","tmp","clone","multiply","pose","getInverse","inverse","invert","x","y","z","w","conjugate","norm","sqrt","normalize","q","newX","newY","newZ","newW","Transform","v","subtract","ix","iy","iz","iw","classes","features","className","Class","TFClient","fixedFrame","angularThres","transThres","rate","updateDelay","seconds","topicTimeout","repubServiceName","currentTopic","frameInfos","republisherUpdateRequested","serviceClient","processTFArray","transforms","transform","frameID","child_frame_id","substring","info","cbs","cb","updateGoal","source_frames","target_frame","angular_thres","trans_thres","processResponse","topic_name","idx","UrdfTypes","UrdfBox","dimension","URDF_BOX","xyz","xml","getAttribute","parseFloat","UrdfColor","rgba","g","b","UrdfCylinder","URDF_CYLINDER","radius","UrdfJoint","parents","getElementsByTagName","parent","children","child","limits","minval","maxval","origins","origin","rpy","roll","pitch","yaw","phi","the","psi","sin","cos","UrdfVisual","UrdfLink","visuals","UrdfMaterial","textureFilename","color","textures","colors","isLink","UrdfMesh","scale","URDF_MESH","filename","DOMParser","XPATH_FIRST_ORDERED_NODE_TYPE","UrdfModel","xmlDoc","string","materials","links","joints","parser","parseFromString","robotXml","documentElement","childNodes","tagName","material","warn","link","mat","joint","UrdfSphere","URDF_SPHERE","geometry","geoms","geom","shape","nodeType","nodeName","UPPER32","warnedPrecision","warnPrecision","decodeUint64LE","bytes","byteLen","byteOffset","arrLen","buffer","uint32View","Uint32Array","arr","si","lo","hi","decodeInt64LE","int32View","Int32Array","decodeNativeArray","ArrayType","nativeArrayTypes","Uint16Array","Int8Array","Int16Array","Float32Array","Float64Array","conversionArrayTypes","cborTypedArrayTagger","tag","arrayType","Canvas","document","createElement","Image","image","canvas","context","getContext","width","height","imageSmoothingEnabled","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","drawImage","imageData","getImageData","jsonData","DOMImplementation","XMLSerializer","work","workerSocketImpl","uri","socket_","addEventListener","handleWorkerMessage_","postMessage","ev","handleSocketMessage","handleSocketControl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAC,YAAU;AAAC,WAASA,CAAT,CAAWC,CAAX,EAAaC,CAAb,EAAeC,CAAf,EAAiB;AAAC,aAASC,CAAT,CAAWC,CAAX,EAAaC,CAAb,EAAe;AAAC,UAAG,CAACJ,CAAC,CAACG,CAAD,CAAL,EAAS;AAAC,YAAG,CAACJ,CAAC,CAACI,CAAD,CAAL,EAAS;AAAC,cAAIE,CAAC,GAAC,cAAY,OAAOC,OAAnB,IAA4BA,OAAlC;AAA0C,cAAG,CAACF,CAAD,IAAIC,CAAP,EAAS,OAAOA,CAAC,CAACF,CAAD,EAAG,CAAC,CAAJ,CAAR;AAAe,cAAGI,CAAH,EAAK,OAAOA,CAAC,CAACJ,CAAD,EAAG,CAAC,CAAJ,CAAR;AAAe,cAAIK,CAAC,GAAC,IAAIC,KAAJ,CAAU,yBAAuBN,CAAvB,GAAyB,GAAnC,CAAN;AAA8C,gBAAMK,CAAC,CAACE,IAAF,GAAO,kBAAP,EAA0BF,CAAhC;AAAkC;;AAAA,YAAIG,CAAC,GAACX,CAAC,CAACG,CAAD,CAAD,GAAK;AAACS,UAAAA,OAAO,EAAC;AAAT,SAAX;AAAwBb,QAAAA,CAAC,CAACI,CAAD,CAAD,CAAK,CAAL,EAAQU,IAAR,CAAaF,CAAC,CAACC,OAAf,EAAuB,UAASd,CAAT,EAAW;AAAC,cAAIE,CAAC,GAACD,CAAC,CAACI,CAAD,CAAD,CAAK,CAAL,EAAQL,CAAR,CAAN;AAAiB,iBAAOI,CAAC,CAACF,CAAC,IAAEF,CAAJ,CAAR;AAAe,SAAnE,EAAoEa,CAApE,EAAsEA,CAAC,CAACC,OAAxE,EAAgFd,CAAhF,EAAkFC,CAAlF,EAAoFC,CAApF,EAAsFC,CAAtF;AAAyF;;AAAA,aAAOD,CAAC,CAACG,CAAD,CAAD,CAAKS,OAAZ;AAAoB;;AAAA,SAAI,IAAIL,CAAC,GAAC,cAAY,OAAOD,OAAnB,IAA4BA,OAAlC,EAA0CH,CAAC,GAAC,CAAhD,EAAkDA,CAAC,GAACF,CAAC,CAACa,MAAtD,EAA6DX,CAAC,EAA9D;AAAiED,MAAAA,CAAC,CAACD,CAAC,CAACE,CAAD,CAAF,CAAD;AAAjE;;AAAyE,WAAOD,CAAP;AAAS;;AAAA,SAAOJ,CAAP;AAAS,CAAxc,IAA4c;AAAC,KAAE,CAAC,UAASQ,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC5e;;;;;;;;;;;;;;;;;;;;;;;AAwBA,KAAC,UAASI,MAAT,EAAiBC,SAAjB,EAA4B;AAAE;;AAC/B,UAAIC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAC,EAAb,CAAf;AAAA,UACIC,QAAQ,GAAGF,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CADf;AAAA,UAEIE,QAAQ,GAAGH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAFf;;AAIA,eAASG,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,YAAIC,IAAI,GAAG,IAAIC,WAAJ,CAAgB,GAAhB,CAAX;AACA,YAAIC,QAAQ,GAAG,IAAIC,QAAJ,CAAaH,IAAb,CAAf;AACA,YAAII,UAAJ;AACA,YAAIC,MAAM,GAAG,CAAb;;AAEA,iBAASC,WAAT,CAAqBjB,MAArB,EAA6B;AAC3B,cAAIkB,aAAa,GAAGP,IAAI,CAACQ,UAAzB;AACA,cAAIC,cAAc,GAAGJ,MAAM,GAAGhB,MAA9B;;AACA,iBAAOkB,aAAa,GAAGE,cAAvB;AACEF,YAAAA,aAAa,IAAI,CAAjB;AADF;;AAEA,cAAIA,aAAa,KAAKP,IAAI,CAACQ,UAA3B,EAAuC;AACrC,gBAAIE,WAAW,GAAGR,QAAlB;AACAF,YAAAA,IAAI,GAAG,IAAIC,WAAJ,CAAgBM,aAAhB,CAAP;AACAL,YAAAA,QAAQ,GAAG,IAAIC,QAAJ,CAAaH,IAAb,CAAX;AACA,gBAAIW,WAAW,GAAIN,MAAM,GAAG,CAAV,IAAgB,CAAlC;;AACA,iBAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,WAApB,EAAiC,EAAEjC,CAAnC;AACEwB,cAAAA,QAAQ,CAACU,SAAT,CAAmBlC,CAAC,GAAG,CAAvB,EAA0BgC,WAAW,CAACG,SAAZ,CAAsBnC,CAAC,GAAG,CAA1B,CAA1B;AADF;AAED;;AAED0B,UAAAA,UAAU,GAAGf,MAAb;AACA,iBAAOa,QAAP;AACD;;AACD,iBAASY,KAAT,GAAiB;AACfT,UAAAA,MAAM,IAAID,UAAV;AACD;;AACD,iBAASW,YAAT,CAAsBhB,KAAtB,EAA6B;AAC3Be,UAAAA,KAAK,CAACR,WAAW,CAAC,CAAD,CAAX,CAAeU,UAAf,CAA0BX,MAA1B,EAAkCN,KAAlC,CAAD,CAAL;AACD;;AACD,iBAASkB,UAAT,CAAoBlB,KAApB,EAA2B;AACzBe,UAAAA,KAAK,CAACR,WAAW,CAAC,CAAD,CAAX,CAAeY,QAAf,CAAwBb,MAAxB,EAAgCN,KAAhC,CAAD,CAAL;AACD;;AACD,iBAASoB,eAAT,CAAyBpB,KAAzB,EAAgC;AAC9B,cAAIG,QAAQ,GAAGI,WAAW,CAACP,KAAK,CAACV,MAAP,CAA1B;;AACA,eAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,KAAK,CAACV,MAA1B,EAAkC,EAAEX,CAApC;AACEwB,YAAAA,QAAQ,CAACgB,QAAT,CAAkBb,MAAM,GAAG3B,CAA3B,EAA8BqB,KAAK,CAACrB,CAAD,CAAnC;AADF;;AAEAoC,UAAAA,KAAK;AACN;;AACD,iBAASM,WAAT,CAAqBrB,KAArB,EAA4B;AAC1Be,UAAAA,KAAK,CAACR,WAAW,CAAC,CAAD,CAAX,CAAee,SAAf,CAAyBhB,MAAzB,EAAiCN,KAAjC,CAAD,CAAL;AACD;;AACD,iBAASuB,WAAT,CAAqBvB,KAArB,EAA4B;AAC1Be,UAAAA,KAAK,CAACR,WAAW,CAAC,CAAD,CAAX,CAAeM,SAAf,CAAyBP,MAAzB,EAAiCN,KAAjC,CAAD,CAAL;AACD;;AACD,iBAASwB,WAAT,CAAqBxB,KAArB,EAA4B;AAC1B,cAAIyB,GAAG,GAAGzB,KAAK,GAAGH,QAAlB;AACA,cAAI6B,IAAI,GAAG,CAAC1B,KAAK,GAAGyB,GAAT,IAAgB5B,QAA3B;AACA,cAAIM,QAAQ,GAAGI,WAAW,CAAC,CAAD,CAA1B;AACAJ,UAAAA,QAAQ,CAACU,SAAT,CAAmBP,MAAnB,EAA2BoB,IAA3B;AACAvB,UAAAA,QAAQ,CAACU,SAAT,CAAmBP,MAAM,GAAG,CAA5B,EAA+BmB,GAA/B;AACAV,UAAAA,KAAK;AACN;;AACD,iBAASY,kBAAT,CAA4BC,IAA5B,EAAkCtC,MAAlC,EAA0C;AACxC,cAAIA,MAAM,GAAG,EAAb,EAAiB;AACf4B,YAAAA,UAAU,CAACU,IAAI,IAAI,CAAR,GAAYtC,MAAb,CAAV;AACD,WAFD,MAEO,IAAIA,MAAM,GAAG,KAAb,EAAoB;AACzB4B,YAAAA,UAAU,CAACU,IAAI,IAAI,CAAR,GAAY,EAAb,CAAV;AACAV,YAAAA,UAAU,CAAC5B,MAAD,CAAV;AACD,WAHM,MAGA,IAAIA,MAAM,GAAG,OAAb,EAAsB;AAC3B4B,YAAAA,UAAU,CAACU,IAAI,IAAI,CAAR,GAAY,EAAb,CAAV;AACAP,YAAAA,WAAW,CAAC/B,MAAD,CAAX;AACD,WAHM,MAGA,IAAIA,MAAM,GAAG,WAAb,EAA0B;AAC/B4B,YAAAA,UAAU,CAACU,IAAI,IAAI,CAAR,GAAY,EAAb,CAAV;AACAL,YAAAA,WAAW,CAACjC,MAAD,CAAX;AACD,WAHM,MAGA;AACL4B,YAAAA,UAAU,CAACU,IAAI,IAAI,CAAR,GAAY,EAAb,CAAV;AACAJ,YAAAA,WAAW,CAAClC,MAAD,CAAX;AACD;AACF;;AAED,iBAASuC,UAAT,CAAoB7B,KAApB,EAA2B;AACzB,cAAIrB,CAAJ;AAEA,cAAIqB,KAAK,KAAK,KAAd,EACE,OAAOkB,UAAU,CAAC,IAAD,CAAjB;AACF,cAAIlB,KAAK,KAAK,IAAd,EACE,OAAOkB,UAAU,CAAC,IAAD,CAAjB;AACF,cAAIlB,KAAK,KAAK,IAAd,EACE,OAAOkB,UAAU,CAAC,IAAD,CAAjB;AACF,cAAIlB,KAAK,KAAKP,SAAd,EACE,OAAOyB,UAAU,CAAC,IAAD,CAAjB;;AAEF,0BAAelB,KAAf;AACE,iBAAK,QAAL;AACE,kBAAIL,IAAI,CAACmC,KAAL,CAAW9B,KAAX,MAAsBA,KAA1B,EAAiC;AAC/B,oBAAI,KAAKA,KAAL,IAAcA,KAAK,IAAIF,QAA3B,EACE,OAAO6B,kBAAkB,CAAC,CAAD,EAAI3B,KAAJ,CAAzB;AACF,oBAAI,CAACF,QAAD,IAAaE,KAAb,IAAsBA,KAAK,GAAG,CAAlC,EACE,OAAO2B,kBAAkB,CAAC,CAAD,EAAI,EAAE3B,KAAK,GAAG,CAAV,CAAJ,CAAzB;AACH;;AACDkB,cAAAA,UAAU,CAAC,IAAD,CAAV;AACA,qBAAOF,YAAY,CAAChB,KAAD,CAAnB;;AAEF,iBAAK,QAAL;AACE,kBAAI+B,QAAQ,GAAG,EAAf;;AACA,mBAAKpD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqB,KAAK,CAACV,MAAtB,EAA8B,EAAEX,CAAhC,EAAmC;AACjC,oBAAIqD,QAAQ,GAAGhC,KAAK,CAACiC,UAAN,CAAiBtD,CAAjB,CAAf;;AACA,oBAAIqD,QAAQ,GAAG,IAAf,EAAqB;AACnBD,kBAAAA,QAAQ,CAACG,IAAT,CAAcF,QAAd;AACD,iBAFD,MAEO,IAAIA,QAAQ,GAAG,KAAf,EAAsB;AAC3BD,kBAAAA,QAAQ,CAACG,IAAT,CAAc,OAAOF,QAAQ,IAAI,CAAjC;AACAD,kBAAAA,QAAQ,CAACG,IAAT,CAAc,OAAOF,QAAQ,GAAG,IAAhC;AACD,iBAHM,MAGA,IAAIA,QAAQ,GAAG,MAAf,EAAuB;AAC5BD,kBAAAA,QAAQ,CAACG,IAAT,CAAc,OAAOF,QAAQ,IAAI,EAAjC;AACAD,kBAAAA,QAAQ,CAACG,IAAT,CAAc,OAAQF,QAAQ,IAAI,CAAb,GAAmB,IAAxC;AACAD,kBAAAA,QAAQ,CAACG,IAAT,CAAc,OAAOF,QAAQ,GAAG,IAAhC;AACD,iBAJM,MAIA;AACLA,kBAAAA,QAAQ,GAAG,CAACA,QAAQ,GAAG,KAAZ,KAAsB,EAAjC;AACAA,kBAAAA,QAAQ,IAAIhC,KAAK,CAACiC,UAAN,CAAiB,EAAEtD,CAAnB,IAAwB,KAApC;AACAqD,kBAAAA,QAAQ,IAAI,OAAZ;AAEAD,kBAAAA,QAAQ,CAACG,IAAT,CAAc,OAAOF,QAAQ,IAAI,EAAjC;AACAD,kBAAAA,QAAQ,CAACG,IAAT,CAAc,OAAQF,QAAQ,IAAI,EAAb,GAAoB,IAAzC;AACAD,kBAAAA,QAAQ,CAACG,IAAT,CAAc,OAAQF,QAAQ,IAAI,CAAb,GAAmB,IAAxC;AACAD,kBAAAA,QAAQ,CAACG,IAAT,CAAc,OAAOF,QAAQ,GAAG,IAAhC;AACD;AACF;;AAEDL,cAAAA,kBAAkB,CAAC,CAAD,EAAII,QAAQ,CAACzC,MAAb,CAAlB;AACA,qBAAO8B,eAAe,CAACW,QAAD,CAAtB;;AAEF;AACE,kBAAIzC,MAAJ;;AACA,kBAAI6C,KAAK,CAACC,OAAN,CAAcpC,KAAd,CAAJ,EAA0B;AACxBV,gBAAAA,MAAM,GAAGU,KAAK,CAACV,MAAf;AACAqC,gBAAAA,kBAAkB,CAAC,CAAD,EAAIrC,MAAJ,CAAlB;;AACA,qBAAKX,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGW,MAAhB,EAAwB,EAAEX,CAA1B;AACEkD,kBAAAA,UAAU,CAAC7B,KAAK,CAACrB,CAAD,CAAN,CAAV;AADF;AAED,eALD,MAKO,IAAIqB,KAAK,YAAYqC,UAArB,EAAiC;AACtCV,gBAAAA,kBAAkB,CAAC,CAAD,EAAI3B,KAAK,CAACV,MAAV,CAAlB;AACA8B,gBAAAA,eAAe,CAACpB,KAAD,CAAf;AACD,eAHM,MAGA;AACL,oBAAIsC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYtC,KAAZ,CAAX;AACAV,gBAAAA,MAAM,GAAGgD,IAAI,CAAChD,MAAd;AACAqC,gBAAAA,kBAAkB,CAAC,CAAD,EAAIrC,MAAJ,CAAlB;;AACA,qBAAKX,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGW,MAAhB,EAAwB,EAAEX,CAA1B,EAA6B;AAC3B,sBAAI6D,GAAG,GAAGF,IAAI,CAAC3D,CAAD,CAAd;AACAkD,kBAAAA,UAAU,CAACW,GAAD,CAAV;AACAX,kBAAAA,UAAU,CAAC7B,KAAK,CAACwC,GAAD,CAAN,CAAV;AACD;AACF;;AA1DL;AA4DD;;AAEDX,QAAAA,UAAU,CAAC7B,KAAD,CAAV;AAEA,YAAI,WAAWC,IAAf,EACE,OAAOA,IAAI,CAACwC,KAAL,CAAW,CAAX,EAAcnC,MAAd,CAAP;AAEF,YAAIoC,GAAG,GAAG,IAAIxC,WAAJ,CAAgBI,MAAhB,CAAV;AACA,YAAIqC,OAAO,GAAG,IAAIvC,QAAJ,CAAasC,GAAb,CAAd;;AACA,aAAK,IAAI/D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2B,MAApB,EAA4B,EAAE3B,CAA9B;AACEgE,UAAAA,OAAO,CAACxB,QAAR,CAAiBxC,CAAjB,EAAoBwB,QAAQ,CAACyC,QAAT,CAAkBjE,CAAlB,CAApB;AADF;;AAEA,eAAO+D,GAAP;AACD;;AAED,eAASG,MAAT,CAAgB5C,IAAhB,EAAsB6C,MAAtB,EAA8BC,WAA9B,EAA2C;AACzC,YAAI5C,QAAQ,GAAG,IAAIC,QAAJ,CAAaH,IAAb,CAAf;AACA,YAAIK,MAAM,GAAG,CAAb;AAEA,YAAI,OAAOwC,MAAP,KAAkB,UAAtB,EACEA,MAAM,GAAG,gBAAS9C,KAAT,EAAgB;AAAE,iBAAOA,KAAP;AAAe,SAA1C;AACF,YAAI,OAAO+C,WAAP,KAAuB,UAA3B,EACEA,WAAW,GAAG,uBAAW;AAAE,iBAAOtD,SAAP;AAAmB,SAA9C;;AAEF,iBAASuD,IAAT,CAAchD,KAAd,EAAqBV,MAArB,EAA6B;AAC3BgB,UAAAA,MAAM,IAAIhB,MAAV;AACA,iBAAOU,KAAP;AACD;;AACD,iBAASiD,eAAT,CAAyB3D,MAAzB,EAAiC;AAC/B,iBAAO0D,IAAI,CAAC,IAAIX,UAAJ,CAAepC,IAAf,EAAqBK,MAArB,EAA6BhB,MAA7B,CAAD,EAAuCA,MAAvC,CAAX;AACD;;AACD,iBAAS4D,WAAT,GAAuB;AACrB,cAAIC,eAAe,GAAG,IAAIjD,WAAJ,CAAgB,CAAhB,CAAtB;AACA,cAAIkD,YAAY,GAAG,IAAIhD,QAAJ,CAAa+C,eAAb,CAAnB;AACA,cAAInD,KAAK,GAAGqD,UAAU,EAAtB;AAEA,cAAIC,IAAI,GAAGtD,KAAK,GAAG,MAAnB;AACA,cAAIuD,QAAQ,GAAGvD,KAAK,GAAG,MAAvB;AACA,cAAIwD,QAAQ,GAAGxD,KAAK,GAAG,MAAvB;AAEA,cAAIuD,QAAQ,KAAK,MAAjB,EACEA,QAAQ,GAAG,QAAQ,EAAnB,CADF,KAEK,IAAIA,QAAQ,KAAK,CAAjB,EACHA,QAAQ,IAAK,MAAM,EAAP,IAAc,EAA1B,CADG,KAEA,IAAIC,QAAQ,KAAK,CAAjB,EACH,OAAOA,QAAQ,GAAG9D,QAAlB;AAEF0D,UAAAA,YAAY,CAACvC,SAAb,CAAuB,CAAvB,EAA0ByC,IAAI,IAAI,EAAR,GAAaC,QAAQ,IAAI,EAAzB,GAA8BC,QAAQ,IAAI,EAApE;AACA,iBAAOJ,YAAY,CAACK,UAAb,CAAwB,CAAxB,CAAP;AACD;;AACD,iBAASC,WAAT,GAAuB;AACrB,iBAAOV,IAAI,CAAC7C,QAAQ,CAACsD,UAAT,CAAoBnD,MAApB,CAAD,EAA8B,CAA9B,CAAX;AACD;;AACD,iBAASqD,WAAT,GAAuB;AACrB,iBAAOX,IAAI,CAAC7C,QAAQ,CAACyD,UAAT,CAAoBtD,MAApB,CAAD,EAA8B,CAA9B,CAAX;AACD;;AACD,iBAASuD,SAAT,GAAqB;AACnB,iBAAOb,IAAI,CAAC7C,QAAQ,CAACyC,QAAT,CAAkBtC,MAAlB,CAAD,EAA4B,CAA5B,CAAX;AACD;;AACD,iBAAS+C,UAAT,GAAsB;AACpB,iBAAOL,IAAI,CAAC7C,QAAQ,CAAC2D,SAAT,CAAmBxD,MAAnB,CAAD,EAA6B,CAA7B,CAAX;AACD;;AACD,iBAASyD,UAAT,GAAsB;AACpB,iBAAOf,IAAI,CAAC7C,QAAQ,CAACW,SAAT,CAAmBR,MAAnB,CAAD,EAA6B,CAA7B,CAAX;AACD;;AACD,iBAAS0D,UAAT,GAAsB;AACpB,iBAAOD,UAAU,KAAKlE,QAAf,GAA0BkE,UAAU,EAA3C;AACD;;AACD,iBAASE,SAAT,GAAqB;AACnB,cAAI9D,QAAQ,CAACyC,QAAT,CAAkBtC,MAAlB,MAA8B,IAAlC,EACE,OAAO,KAAP;AACFA,UAAAA,MAAM,IAAI,CAAV;AACA,iBAAO,IAAP;AACD;;AACD,iBAAS4D,UAAT,CAAoBC,qBAApB,EAA2C;AACzC,cAAIA,qBAAqB,GAAG,EAA5B,EACE,OAAOA,qBAAP;AACF,cAAIA,qBAAqB,KAAK,EAA9B,EACE,OAAON,SAAS,EAAhB;AACF,cAAIM,qBAAqB,KAAK,EAA9B,EACE,OAAOd,UAAU,EAAjB;AACF,cAAIc,qBAAqB,KAAK,EAA9B,EACE,OAAOJ,UAAU,EAAjB;AACF,cAAII,qBAAqB,KAAK,EAA9B,EACE,OAAOH,UAAU,EAAjB;AACF,cAAIG,qBAAqB,KAAK,EAA9B,EACE,OAAO,CAAC,CAAR;AACF,gBAAM,yBAAN;AACD;;AACD,iBAASC,0BAAT,CAAoCC,SAApC,EAA+C;AAC7C,cAAIC,WAAW,GAAGT,SAAS,EAA3B;AACA,cAAIS,WAAW,KAAK,IAApB,EACE,OAAO,CAAC,CAAR;AACF,cAAIhF,MAAM,GAAG4E,UAAU,CAACI,WAAW,GAAG,IAAf,CAAvB;AACA,cAAIhF,MAAM,GAAG,CAAT,IAAegF,WAAW,IAAI,CAAhB,KAAuBD,SAAzC,EACE,MAAM,mCAAN;AACF,iBAAO/E,MAAP;AACD;;AAED,iBAASiF,eAAT,CAAyBC,SAAzB,EAAoClF,MAApC,EAA4C;AAC1C,eAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGW,MAApB,EAA4B,EAAEX,CAA9B,EAAiC;AAC/B,gBAAIqB,KAAK,GAAG6D,SAAS,EAArB;;AACA,gBAAI7D,KAAK,GAAG,IAAZ,EAAkB;AAChB,kBAAIA,KAAK,GAAG,IAAZ,EAAkB;AAChBA,gBAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,IAAT,KAAmB,CAAnB,GACC6D,SAAS,KAAK,IADvB;AAEAvE,gBAAAA,MAAM,IAAI,CAAV;AACD,eAJD,MAIO,IAAIU,KAAK,GAAG,IAAZ,EAAkB;AACvBA,gBAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,IAAT,KAAkB,EAAlB,GACA,CAAC6D,SAAS,KAAK,IAAf,KAAwB,CADxB,GAECA,SAAS,KAAK,IAFvB;AAGAvE,gBAAAA,MAAM,IAAI,CAAV;AACD,eALM,MAKA;AACLU,gBAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,IAAT,KAAkB,EAAlB,GACA,CAAC6D,SAAS,KAAK,IAAf,KAAwB,EADxB,GAEA,CAACA,SAAS,KAAK,IAAf,KAAwB,CAFxB,GAGCA,SAAS,KAAK,IAHvB;AAIAvE,gBAAAA,MAAM,IAAI,CAAV;AACD;AACF;;AAED,gBAAIU,KAAK,GAAG,OAAZ,EAAqB;AACnBwE,cAAAA,SAAS,CAACtC,IAAV,CAAelC,KAAf;AACD,aAFD,MAEO;AACLA,cAAAA,KAAK,IAAI,OAAT;AACAwE,cAAAA,SAAS,CAACtC,IAAV,CAAe,SAAUlC,KAAK,IAAI,EAAlC;AACAwE,cAAAA,SAAS,CAACtC,IAAV,CAAe,SAAUlC,KAAK,GAAG,KAAjC;AACD;AACF;AACF;;AAED,iBAASyE,UAAT,GAAsB;AACpB,cAAIH,WAAW,GAAGT,SAAS,EAA3B;AACA,cAAIQ,SAAS,GAAGC,WAAW,IAAI,CAA/B;AACA,cAAIH,qBAAqB,GAAGG,WAAW,GAAG,IAA1C;AACA,cAAI3F,CAAJ;AACA,cAAIW,MAAJ;;AAEA,cAAI+E,SAAS,KAAK,CAAlB,EAAqB;AACnB,oBAAQF,qBAAR;AACE,mBAAK,EAAL;AACE,uBAAOjB,WAAW,EAAlB;;AACF,mBAAK,EAAL;AACE,uBAAOQ,WAAW,EAAlB;;AACF,mBAAK,EAAL;AACE,uBAAOC,WAAW,EAAlB;AANJ;AAQD;;AAEDrE,UAAAA,MAAM,GAAG4E,UAAU,CAACC,qBAAD,CAAnB;AACA,cAAI7E,MAAM,GAAG,CAAT,KAAe+E,SAAS,GAAG,CAAZ,IAAiB,IAAIA,SAApC,CAAJ,EACE,MAAM,gBAAN;;AAEF,kBAAQA,SAAR;AACE,iBAAK,CAAL;AACE,qBAAO/E,MAAP;;AACF,iBAAK,CAAL;AACE,qBAAO,CAAC,CAAD,GAAKA,MAAZ;;AACF,iBAAK,CAAL;AACE,kBAAIA,MAAM,GAAG,CAAb,EAAgB;AACd,oBAAIoF,QAAQ,GAAG,EAAf;AACA,oBAAIC,eAAe,GAAG,CAAtB;;AACA,uBAAO,CAACrF,MAAM,GAAG8E,0BAA0B,CAACC,SAAD,CAApC,KAAoD,CAA3D,EAA8D;AAC5DM,kBAAAA,eAAe,IAAIrF,MAAnB;AACAoF,kBAAAA,QAAQ,CAACxC,IAAT,CAAce,eAAe,CAAC3D,MAAD,CAA7B;AACD;;AACD,oBAAIsF,SAAS,GAAG,IAAIvC,UAAJ,CAAesC,eAAf,CAAhB;AACA,oBAAIE,eAAe,GAAG,CAAtB;;AACA,qBAAKlG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+F,QAAQ,CAACpF,MAAzB,EAAiC,EAAEX,CAAnC,EAAsC;AACpCiG,kBAAAA,SAAS,CAACE,GAAV,CAAcJ,QAAQ,CAAC/F,CAAD,CAAtB,EAA2BkG,eAA3B;AACAA,kBAAAA,eAAe,IAAIH,QAAQ,CAAC/F,CAAD,CAAR,CAAYW,MAA/B;AACD;;AACD,uBAAOsF,SAAP;AACD;;AACD,qBAAO3B,eAAe,CAAC3D,MAAD,CAAtB;;AACF,iBAAK,CAAL;AACE,kBAAIkF,SAAS,GAAG,EAAhB;;AACA,kBAAIlF,MAAM,GAAG,CAAb,EAAgB;AACd,uBAAO,CAACA,MAAM,GAAG8E,0BAA0B,CAACC,SAAD,CAApC,KAAoD,CAA3D;AACEE,kBAAAA,eAAe,CAACC,SAAD,EAAYlF,MAAZ,CAAf;AADF;AAED,eAHD,MAIEiF,eAAe,CAACC,SAAD,EAAYlF,MAAZ,CAAf;;AACF,qBAAOyF,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgCT,SAAhC,CAAP;;AACF,iBAAK,CAAL;AACE,kBAAIU,QAAJ;;AACA,kBAAI5F,MAAM,GAAG,CAAb,EAAgB;AACd4F,gBAAAA,QAAQ,GAAG,EAAX;;AACA,uBAAO,CAACjB,SAAS,EAAjB;AACEiB,kBAAAA,QAAQ,CAAChD,IAAT,CAAcuC,UAAU,EAAxB;AADF;AAED,eAJD,MAIO;AACLS,gBAAAA,QAAQ,GAAG,IAAI/C,KAAJ,CAAU7C,MAAV,CAAX;;AACA,qBAAKX,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGW,MAAhB,EAAwB,EAAEX,CAA1B;AACEuG,kBAAAA,QAAQ,CAACvG,CAAD,CAAR,GAAc8F,UAAU,EAAxB;AADF;AAED;;AACD,qBAAOS,QAAP;;AACF,iBAAK,CAAL;AACE,kBAAIC,SAAS,GAAG,EAAhB;;AACA,mBAAKxG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGW,MAAJ,IAAcA,MAAM,GAAG,CAAT,IAAc,CAAC2E,SAAS,EAAlD,EAAsD,EAAEtF,CAAxD,EAA2D;AACzD,oBAAI6D,GAAG,GAAGiC,UAAU,EAApB;AACAU,gBAAAA,SAAS,CAAC3C,GAAD,CAAT,GAAiBiC,UAAU,EAA3B;AACD;;AACD,qBAAOU,SAAP;;AACF,iBAAK,CAAL;AACE,qBAAOrC,MAAM,CAAC2B,UAAU,EAAX,EAAenF,MAAf,CAAb;;AACF,iBAAK,CAAL;AACE,sBAAQA,MAAR;AACE,qBAAK,EAAL;AACE,yBAAO,KAAP;;AACF,qBAAK,EAAL;AACE,yBAAO,IAAP;;AACF,qBAAK,EAAL;AACE,yBAAO,IAAP;;AACF,qBAAK,EAAL;AACE,yBAAOG,SAAP;;AACF;AACE,yBAAOsD,WAAW,CAACzD,MAAD,CAAlB;AAVJ;;AApDJ;AAiED;;AAED,YAAIoD,GAAG,GAAG+B,UAAU,EAApB;AACA,YAAInE,MAAM,KAAKL,IAAI,CAACQ,UAApB,EACE,MAAM,iBAAN;AACF,eAAOiC,GAAP;AACD;;AAED,UAAI0C,GAAG,GAAG;AAAErF,QAAAA,MAAM,EAAEA,MAAV;AAAkB8C,QAAAA,MAAM,EAAEA;AAA1B,OAAV;AAEA,UAAI,OAAOwC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EACED,MAAM,CAAC,WAAD,EAAcD,GAAd,CAAN,CADF,KAEK,IAAI,OAAO7F,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACH,OAA5C,EACHG,MAAM,CAACH,OAAP,GAAiBgG,GAAjB,CADG,KAEA,IAAI,CAAC5F,MAAM,CAAC+F,IAAZ,EACH/F,MAAM,CAAC+F,IAAP,GAAcH,GAAd;AAED,KA7XD,EA6XG,IA7XH;AA+XC,GAxZ0c,EAwZzc,EAxZyc,CAAH;AAwZlc,KAAE,CAAC,UAAStG,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACzC,KAAC,UAAUoG,OAAV,EAAkB;AACnB;;;;;;;AAOA;AAAC,OAAC,UAAS/F,SAAT,EAAoB;AAEpB,YAAI2C,OAAO,GAAGD,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAtB,GAAgC,SAASqD,QAAT,CAAkBL,GAAlB,EAAuB;AACnE,iBAAO7C,MAAM,CAACmD,SAAP,CAAiBC,QAAjB,CAA0BtG,IAA1B,CAA+B+F,GAA/B,MAAwC,gBAA/C;AACD,SAFD;AAGA,YAAIQ,mBAAmB,GAAG,EAA1B;;AAEA,iBAASC,IAAT,GAAgB;AACd,eAAKC,OAAL,GAAe,EAAf;;AACA,cAAI,KAAKC,KAAT,EAAgB;AACdC,YAAAA,SAAS,CAAC3G,IAAV,CAAe,IAAf,EAAqB,KAAK0G,KAA1B;AACD;AACF;;AAED,iBAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,cAAIA,IAAJ,EAAU;AACR,iBAAKF,KAAL,GAAaE,IAAb;AAEAA,YAAAA,IAAI,CAACC,SAAL,KAAmB,KAAKA,SAAL,GAAiBD,IAAI,CAACC,SAAzC;AACA,iBAAKC,aAAL,GAAqBF,IAAI,CAACG,YAAL,KAAsB3G,SAAtB,GAAkCwG,IAAI,CAACG,YAAvC,GAAsDR,mBAA3E;AAEAK,YAAAA,IAAI,CAACI,QAAL,KAAkB,KAAKA,QAAL,GAAgBJ,IAAI,CAACI,QAAvC;AACAJ,YAAAA,IAAI,CAACK,WAAL,KAAqB,KAAKA,WAAL,GAAmBL,IAAI,CAACK,WAA7C;AACAL,YAAAA,IAAI,CAACM,iBAAL,KAA2B,KAAKA,iBAAL,GAAyBN,IAAI,CAACM,iBAAzD;;AAEA,gBAAI,KAAKF,QAAT,EAAmB;AACjB,mBAAKG,YAAL,GAAoB,EAApB;AACD;AACF,WAbD,MAaO;AACL,iBAAKL,aAAL,GAAqBP,mBAArB;AACD;AACF;;AAED,iBAASa,qBAAT,CAA+BC,KAA/B,EAAsCC,SAAtC,EAAiD;AAC/C,cAAIC,QAAQ,GAAG,kDACX,iBADW,GACSF,KADT,GACiB,oBADjB,GAEX,kDAFJ;;AAIA,cAAG,KAAKH,iBAAR,EAA0B;AACxBK,YAAAA,QAAQ,IAAI,kBAAkBD,SAAlB,GAA8B,GAA1C;AACD;;AAED,cAAG,OAAOnB,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACqB,WAA7C,EAAyD;AACvD,gBAAItI,CAAC,GAAG,IAAIU,KAAJ,CAAU2H,QAAV,CAAR;AACArI,YAAAA,CAAC,CAACuI,IAAF,GAAS,6BAAT;AACAvI,YAAAA,CAAC,CAACwI,OAAF,GAAY,IAAZ;AACAxI,YAAAA,CAAC,CAACmI,KAAF,GAAUA,KAAV;AACAlB,YAAAA,OAAO,CAACqB,WAAR,CAAoBtI,CAApB;AACD,WAND,MAMO;AACLyI,YAAAA,OAAO,CAACC,KAAR,CAAcL,QAAd;;AAEA,gBAAII,OAAO,CAACE,KAAZ,EAAkB;AAChBF,cAAAA,OAAO,CAACE,KAAR;AACD;AACF;AACF;;AAED,iBAASC,YAAT,CAAsBlB,IAAtB,EAA4B;AAC1B,eAAKH,OAAL,GAAe,EAAf;AACA,eAAKQ,WAAL,GAAmB,KAAnB;AACA,eAAKC,iBAAL,GAAyB,KAAzB;AACAP,UAAAA,SAAS,CAAC3G,IAAV,CAAe,IAAf,EAAqB4G,IAArB;AACD;;AACDkB,QAAAA,YAAY,CAACC,aAAb,GAA6BD,YAA7B,CA/DoB,CA+DuB;AAE3C;AACA;AACA;AACA;AACA;;AACA,iBAASE,kBAAT,CAA4BC,QAA5B,EAAsC1F,IAAtC,EAA4C2F,IAA5C,EAAkD5I,CAAlD,EAAqD;AACnD,cAAI,CAAC4I,IAAL,EAAW;AACT,mBAAO,EAAP;AACD;;AACD,cAAIC,SAAS,GAAC,EAAd;AAAA,cAAkBC,IAAlB;AAAA,cAAwBC,GAAxB;AAAA,cAA6BC,MAA7B;AAAA,cAAqCC,KAArC;AAAA,cAA4CC,MAA5C;AAAA,cAAoDC,cAApD;AAAA,cAAoEC,UAApE;AAAA,cACIC,UAAU,GAAGpG,IAAI,CAACtC,MADtB;AAAA,cAC8B2I,WAAW,GAAGrG,IAAI,CAACjD,CAAD,CADhD;AAAA,cACqDuJ,QAAQ,GAAGtG,IAAI,CAACjD,CAAC,GAAC,CAAH,CADpE;;AAEA,cAAIA,CAAC,KAAKqJ,UAAN,IAAoBT,IAAI,CAACY,UAA7B,EAAyC;AACvC;AACA;AACA;AACA;AACA,gBAAI,OAAOZ,IAAI,CAACY,UAAZ,KAA2B,UAA/B,EAA2C;AACzCb,cAAAA,QAAQ,IAAIA,QAAQ,CAACpF,IAAT,CAAcqF,IAAI,CAACY,UAAnB,CAAZ;AACA,qBAAO,CAACZ,IAAD,CAAP;AACD,aAHD,MAGO;AACL,mBAAKE,IAAI,GAAG,CAAP,EAAUC,GAAG,GAAGH,IAAI,CAACY,UAAL,CAAgB7I,MAArC,EAA6CmI,IAAI,GAAGC,GAApD,EAAyDD,IAAI,EAA7D,EAAiE;AAC/DH,gBAAAA,QAAQ,IAAIA,QAAQ,CAACpF,IAAT,CAAcqF,IAAI,CAACY,UAAL,CAAgBV,IAAhB,CAAd,CAAZ;AACD;;AACD,qBAAO,CAACF,IAAD,CAAP;AACD;AACF;;AAED,cAAKU,WAAW,KAAK,GAAhB,IAAuBA,WAAW,KAAK,IAAxC,IAAiDV,IAAI,CAACU,WAAD,CAAzD,EAAwE;AACtE;AACA;AACA;AACA;AACA,gBAAIA,WAAW,KAAK,GAApB,EAAyB;AACvB,mBAAKN,MAAL,IAAeJ,IAAf,EAAqB;AACnB,oBAAII,MAAM,KAAK,YAAX,IAA2BJ,IAAI,CAACa,cAAL,CAAoBT,MAApB,CAA/B,EAA4D;AAC1DH,kBAAAA,SAAS,GAAGA,SAAS,CAACa,MAAV,CAAiBhB,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiB2F,IAAI,CAACI,MAAD,CAArB,EAA+BhJ,CAAC,GAAC,CAAjC,CAAnC,CAAZ;AACD;AACF;;AACD,qBAAO6I,SAAP;AACD,aAPD,MAOO,IAAGS,WAAW,KAAK,IAAnB,EAAyB;AAC9BF,cAAAA,UAAU,GAAIpJ,CAAC,GAAC,CAAF,KAAQqJ,UAAR,IAAuBrJ,CAAC,GAAC,CAAF,KAAQqJ,UAAR,IAAsBE,QAAQ,KAAK,GAAxE;;AACA,kBAAGH,UAAU,IAAIR,IAAI,CAACY,UAAtB,EAAkC;AAChC;AACAX,gBAAAA,SAAS,GAAGA,SAAS,CAACa,MAAV,CAAiBhB,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiB2F,IAAjB,EAAuBS,UAAvB,CAAnC,CAAZ;AACD;;AAED,mBAAKL,MAAL,IAAeJ,IAAf,EAAqB;AACnB,oBAAII,MAAM,KAAK,YAAX,IAA2BJ,IAAI,CAACa,cAAL,CAAoBT,MAApB,CAA/B,EAA4D;AAC1D,sBAAGA,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,IAAhC,EAAsC;AACpC,wBAAGJ,IAAI,CAACI,MAAD,CAAJ,CAAaQ,UAAb,IAA2B,CAACJ,UAA/B,EAA2C;AACzCP,sBAAAA,SAAS,GAAGA,SAAS,CAACa,MAAV,CAAiBhB,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiB2F,IAAI,CAACI,MAAD,CAArB,EAA+BK,UAA/B,CAAnC,CAAZ;AACD;;AACDR,oBAAAA,SAAS,GAAGA,SAAS,CAACa,MAAV,CAAiBhB,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiB2F,IAAI,CAACI,MAAD,CAArB,EAA+BhJ,CAA/B,CAAnC,CAAZ;AACD,mBALD,MAKO,IAAGgJ,MAAM,KAAKO,QAAd,EAAwB;AAC7BV,oBAAAA,SAAS,GAAGA,SAAS,CAACa,MAAV,CAAiBhB,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiB2F,IAAI,CAACI,MAAD,CAArB,EAA+BhJ,CAAC,GAAC,CAAjC,CAAnC,CAAZ;AACD,mBAFM,MAEA;AACL;AACA6I,oBAAAA,SAAS,GAAGA,SAAS,CAACa,MAAV,CAAiBhB,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiB2F,IAAI,CAACI,MAAD,CAArB,EAA+BhJ,CAA/B,CAAnC,CAAZ;AACD;AACF;AACF;;AACD,qBAAO6I,SAAP;AACD;;AAEDA,YAAAA,SAAS,GAAGA,SAAS,CAACa,MAAV,CAAiBhB,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiB2F,IAAI,CAACU,WAAD,CAArB,EAAoCtJ,CAAC,GAAC,CAAtC,CAAnC,CAAZ;AACD;;AAEDiJ,UAAAA,KAAK,GAAGL,IAAI,CAAC,GAAD,CAAZ;;AACA,cAAIK,KAAJ,EAAW;AACT;AACA;AACA;AACA;AACAP,YAAAA,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiBgG,KAAjB,EAAwBjJ,CAAC,GAAC,CAA1B,CAAlB;AACD;;AAEDkJ,UAAAA,MAAM,GAAGN,IAAI,CAAC,IAAD,CAAb;;AACA,cAAGM,MAAH,EAAW;AACT,gBAAGlJ,CAAC,GAAGqJ,UAAP,EAAmB;AACjB,kBAAGH,MAAM,CAACM,UAAV,EAAsB;AACpB;AACAd,gBAAAA,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiBiG,MAAjB,EAAyBG,UAAzB,CAAlB;AACD,eAJgB,CAMjB;;;AACA,mBAAIL,MAAJ,IAAcE,MAAd,EAAsB;AACpB,oBAAGF,MAAM,KAAK,YAAX,IAA2BE,MAAM,CAACO,cAAP,CAAsBT,MAAtB,CAA9B,EAA6D;AAC3D,sBAAGA,MAAM,KAAKO,QAAd,EAAwB;AACtB;AACAb,oBAAAA,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiBiG,MAAM,CAACF,MAAD,CAAvB,EAAiChJ,CAAC,GAAC,CAAnC,CAAlB;AACD,mBAHD,MAGO,IAAGgJ,MAAM,KAAKM,WAAd,EAA2B;AAChC;AACAZ,oBAAAA,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiBiG,MAAM,CAACF,MAAD,CAAvB,EAAiChJ,CAAC,GAAC,CAAnC,CAAlB;AACD,mBAHM,MAGA;AACLmJ,oBAAAA,cAAc,GAAG,EAAjB;AACAA,oBAAAA,cAAc,CAACH,MAAD,CAAd,GAAyBE,MAAM,CAACF,MAAD,CAA/B;AACAN,oBAAAA,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiB;AAAE,4BAAMkG;AAAR,qBAAjB,EAA2CnJ,CAAC,GAAC,CAA7C,CAAlB;AACD;AACF;AACF;AACF,aAtBD,MAsBO,IAAGkJ,MAAM,CAACM,UAAV,EAAsB;AAC3B;AACAd,cAAAA,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiBiG,MAAjB,EAAyBG,UAAzB,CAAlB;AACD,aAHM,MAGA,IAAGH,MAAM,CAAC,GAAD,CAAN,IAAeA,MAAM,CAAC,GAAD,CAAN,CAAYM,UAA9B,EAA0C;AAC/Cd,cAAAA,kBAAkB,CAACC,QAAD,EAAW1F,IAAX,EAAiBiG,MAAM,CAAC,GAAD,CAAvB,EAA8BG,UAA9B,CAAlB;AACD;AACF;;AAED,iBAAOR,SAAP;AACD;;AAED,iBAASc,gBAAT,CAA0B1G,IAA1B,EAAgC2G,QAAhC,EAA0C;AAExC3G,UAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAAI,CAAC4G,KAAL,CAAW,KAAKtC,SAAhB,CAA3B,GAAwDtE,IAAI,CAACa,KAAL,EAA/D,CAFwC,CAIxC;AACA;AACA;;AACA,eAAI,IAAI9D,CAAC,GAAG,CAAR,EAAW+I,GAAG,GAAG9F,IAAI,CAACtC,MAA1B,EAAkCX,CAAC,GAAC,CAAF,GAAM+I,GAAxC,EAA6C/I,CAAC,EAA9C,EAAkD;AAChD,gBAAGiD,IAAI,CAACjD,CAAD,CAAJ,KAAY,IAAZ,IAAoBiD,IAAI,CAACjD,CAAC,GAAC,CAAH,CAAJ,KAAc,IAArC,EAA2C;AACzC;AACD;AACF;;AAED,cAAI4I,IAAI,GAAG,KAAKf,YAAhB;AACA,cAAIM,IAAI,GAAGlF,IAAI,CAAC6G,KAAL,EAAX;;AAEA,iBAAO3B,IAAI,KAAKrH,SAAhB,EAA2B;AAEzB,gBAAI,CAAC8H,IAAI,CAACT,IAAD,CAAT,EAAiB;AACfS,cAAAA,IAAI,CAACT,IAAD,CAAJ,GAAa,EAAb;AACD;;AAEDS,YAAAA,IAAI,GAAGA,IAAI,CAACT,IAAD,CAAX;;AAEA,gBAAIlF,IAAI,CAACtC,MAAL,KAAgB,CAApB,EAAuB;AAErB,kBAAI,CAACiI,IAAI,CAACY,UAAV,EAAsB;AACpBZ,gBAAAA,IAAI,CAACY,UAAL,GAAkBI,QAAlB;AACD,eAFD,MAGK;AACH,oBAAI,OAAOhB,IAAI,CAACY,UAAZ,KAA2B,UAA/B,EAA2C;AACzCZ,kBAAAA,IAAI,CAACY,UAAL,GAAkB,CAACZ,IAAI,CAACY,UAAN,CAAlB;AACD;;AAEDZ,gBAAAA,IAAI,CAACY,UAAL,CAAgBjG,IAAhB,CAAqBqG,QAArB;;AAEA,oBACE,CAAChB,IAAI,CAACY,UAAL,CAAgBO,MAAjB,IACA,KAAKvC,aAAL,GAAqB,CADrB,IAEAoB,IAAI,CAACY,UAAL,CAAgB7I,MAAhB,GAAyB,KAAK6G,aAHhC,EAIE;AACAoB,kBAAAA,IAAI,CAACY,UAAL,CAAgBO,MAAhB,GAAyB,IAAzB;AACAjC,kBAAAA,qBAAqB,CAACpH,IAAtB,CAA2B,IAA3B,EAAiCkI,IAAI,CAACY,UAAL,CAAgB7I,MAAjD,EAAyDwH,IAAzD;AACD;AACF;;AACD,qBAAO,IAAP;AACD;;AACDA,YAAAA,IAAI,GAAGlF,IAAI,CAAC6G,KAAL,EAAP;AACD;;AACD,iBAAO,IAAP;AACD,SAlOmB,CAoOpB;AACA;AACA;AACA;AACA;AACA;;;AAEAtB,QAAAA,YAAY,CAACzB,SAAb,CAAuBQ,SAAvB,GAAmC,GAAnC;;AAEAiB,QAAAA,YAAY,CAACzB,SAAb,CAAuBiD,eAAvB,GAAyC,UAASnK,CAAT,EAAY;AACnD,cAAIA,CAAC,KAAKiB,SAAV,EAAqB;AACnB,iBAAK0G,aAAL,GAAqB3H,CAArB;AACA,gBAAI,CAAC,KAAKuH,KAAV,EAAiB,KAAKA,KAAL,GAAa,EAAb;AACjB,iBAAKA,KAAL,CAAWK,YAAX,GAA0B5H,CAA1B;AACD;AACF,SAND;;AAQA2I,QAAAA,YAAY,CAACzB,SAAb,CAAuBkD,KAAvB,GAA+B,EAA/B;;AAGAzB,QAAAA,YAAY,CAACzB,SAAb,CAAuBmD,IAAvB,GAA8B,UAASD,KAAT,EAAgBE,EAAhB,EAAoB;AAChD,iBAAO,KAAKC,KAAL,CAAWH,KAAX,EAAkBE,EAAlB,EAAsB,KAAtB,CAAP;AACD,SAFD;;AAIA3B,QAAAA,YAAY,CAACzB,SAAb,CAAuBsD,mBAAvB,GAA6C,UAASJ,KAAT,EAAgBE,EAAhB,EAAoB;AAC/D,iBAAO,KAAKC,KAAL,CAAWH,KAAX,EAAkBE,EAAlB,EAAsB,IAAtB,CAAP;AACD,SAFD;;AAIA3B,QAAAA,YAAY,CAACzB,SAAb,CAAuBqD,KAAvB,GAA+B,UAASH,KAAT,EAAgBE,EAAhB,EAAoBG,OAApB,EAA6B;AAC1D,eAAKC,KAAL,CAAWN,KAAX,EAAkB,CAAlB,EAAqBE,EAArB,EAAyBG,OAAzB;;AACA,iBAAO,IAAP;AACD,SAHD;;AAKA9B,QAAAA,YAAY,CAACzB,SAAb,CAAuByD,IAAvB,GAA8B,UAASP,KAAT,EAAgBQ,GAAhB,EAAqBN,EAArB,EAAyB;AACrD,iBAAO,KAAKI,KAAL,CAAWN,KAAX,EAAkBQ,GAAlB,EAAuBN,EAAvB,EAA2B,KAA3B,CAAP;AACD,SAFD;;AAIA3B,QAAAA,YAAY,CAACzB,SAAb,CAAuB2D,WAAvB,GAAqC,UAAST,KAAT,EAAgBQ,GAAhB,EAAqBN,EAArB,EAAyB;AAC5D,iBAAO,KAAKI,KAAL,CAAWN,KAAX,EAAkBQ,GAAlB,EAAuBN,EAAvB,EAA2B,IAA3B,CAAP;AACD,SAFD;;AAIA3B,QAAAA,YAAY,CAACzB,SAAb,CAAuBwD,KAAvB,GAA+B,UAASN,KAAT,EAAgBQ,GAAhB,EAAqBN,EAArB,EAAyBG,OAAzB,EAAkC;AAC/D,cAAIK,IAAI,GAAG,IAAX;;AAEA,cAAI,OAAOR,EAAP,KAAc,UAAlB,EAA8B;AAC5B,kBAAM,IAAI7J,KAAJ,CAAU,yCAAV,CAAN;AACD;;AAED,mBAASsJ,QAAT,GAAoB;AAClB,gBAAI,EAAEa,GAAF,KAAU,CAAd,EAAiB;AACfE,cAAAA,IAAI,CAACC,GAAL,CAASX,KAAT,EAAgBL,QAAhB;AACD;;AACD,mBAAOO,EAAE,CAAC7D,KAAH,CAAS,IAAT,EAAeuE,SAAf,CAAP;AACD;;AAEDjB,UAAAA,QAAQ,CAACkB,OAAT,GAAmBX,EAAnB;;AAEA,eAAKY,GAAL,CAASd,KAAT,EAAgBL,QAAhB,EAA0BU,OAA1B;;AAEA,iBAAOK,IAAP;AACD,SAnBD;;AAqBAnC,QAAAA,YAAY,CAACzB,SAAb,CAAuBiE,IAAvB,GAA8B,YAAW;AAEvC,eAAK7D,OAAL,IAAgBD,IAAI,CAACxG,IAAL,CAAU,IAAV,CAAhB;AAEA,cAAIuC,IAAI,GAAG4H,SAAS,CAAC,CAAD,CAApB;;AAEA,cAAI5H,IAAI,KAAK,aAAT,IAA0B,CAAC,KAAK0E,WAApC,EAAiD;AAC/C,gBAAI,CAAC,KAAKR,OAAL,CAAaQ,WAAlB,EAA+B;AAC7B,qBAAO,KAAP;AACD;AACF;;AAED,cAAIsD,EAAE,GAAGJ,SAAS,CAAClK,MAAnB;AACA,cAAIuK,IAAJ,EAASC,CAAT,EAAWnL,CAAX,EAAaoL,CAAb;AACA,cAAIC,OAAJ;;AAEA,cAAI,KAAKC,IAAL,IAAa,KAAKA,IAAL,CAAU3K,MAA3B,EAAmC;AACjC0K,YAAAA,OAAO,GAAG,KAAKC,IAAL,CAAUxH,KAAV,EAAV;;AACA,gBAAImH,EAAE,GAAG,CAAT,EAAY;AACVC,cAAAA,IAAI,GAAG,IAAI1H,KAAJ,CAAUyH,EAAV,CAAP;;AACA,mBAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,EAAhB,EAAoBG,CAAC,EAArB;AAAyBF,gBAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUP,SAAS,CAACO,CAAD,CAAnB;AAAzB;AACD;;AAED,iBAAKpL,CAAC,GAAG,CAAJ,EAAOmL,CAAC,GAAGE,OAAO,CAAC1K,MAAxB,EAAgCX,CAAC,GAAGmL,CAApC,EAAuCnL,CAAC,EAAxC,EAA4C;AAC1C,mBAAKiK,KAAL,GAAahH,IAAb;;AACA,sBAAQgI,EAAR;AACA,qBAAK,CAAL;AACEI,kBAAAA,OAAO,CAACrL,CAAD,CAAP,CAAWU,IAAX,CAAgB,IAAhB,EAAsBuC,IAAtB;AACA;;AACF,qBAAK,CAAL;AACEoI,kBAAAA,OAAO,CAACrL,CAAD,CAAP,CAAWU,IAAX,CAAgB,IAAhB,EAAsBuC,IAAtB,EAA4B4H,SAAS,CAAC,CAAD,CAArC;AACA;;AACF,qBAAK,CAAL;AACEQ,kBAAAA,OAAO,CAACrL,CAAD,CAAP,CAAWU,IAAX,CAAgB,IAAhB,EAAsBuC,IAAtB,EAA4B4H,SAAS,CAAC,CAAD,CAArC,EAA0CA,SAAS,CAAC,CAAD,CAAnD;AACA;;AACF;AACEQ,kBAAAA,OAAO,CAACrL,CAAD,CAAP,CAAWsG,KAAX,CAAiB,IAAjB,EAAuB4E,IAAvB;AAXF;AAaD;AACF;;AAED,cAAI,KAAKxD,QAAT,EAAmB;AACjB2D,YAAAA,OAAO,GAAG,EAAV;AACA,gBAAIE,EAAE,GAAG,OAAOtI,IAAP,KAAgB,QAAhB,GAA2BA,IAAI,CAAC4G,KAAL,CAAW,KAAKtC,SAAhB,CAA3B,GAAwDtE,IAAI,CAACa,KAAL,EAAjE;AACA4E,YAAAA,kBAAkB,CAAChI,IAAnB,CAAwB,IAAxB,EAA8B2K,OAA9B,EAAuCE,EAAvC,EAA2C,KAAK1D,YAAhD,EAA8D,CAA9D;AACD,WAJD,MAIO;AACLwD,YAAAA,OAAO,GAAG,KAAKlE,OAAL,CAAalE,IAAb,CAAV;;AACA,gBAAI,OAAOoI,OAAP,KAAmB,UAAvB,EAAmC;AACjC,mBAAKpB,KAAL,GAAahH,IAAb;;AACA,sBAAQgI,EAAR;AACA,qBAAK,CAAL;AACEI,kBAAAA,OAAO,CAAC3K,IAAR,CAAa,IAAb;AACA;;AACF,qBAAK,CAAL;AACE2K,kBAAAA,OAAO,CAAC3K,IAAR,CAAa,IAAb,EAAmBmK,SAAS,CAAC,CAAD,CAA5B;AACA;;AACF,qBAAK,CAAL;AACEQ,kBAAAA,OAAO,CAAC3K,IAAR,CAAa,IAAb,EAAmBmK,SAAS,CAAC,CAAD,CAA5B,EAAiCA,SAAS,CAAC,CAAD,CAA1C;AACA;;AACF;AACEK,kBAAAA,IAAI,GAAG,IAAI1H,KAAJ,CAAUyH,EAAE,GAAG,CAAf,CAAP;;AACA,uBAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,EAAhB,EAAoBG,CAAC,EAArB;AAAyBF,oBAAAA,IAAI,CAACE,CAAC,GAAG,CAAL,CAAJ,GAAcP,SAAS,CAACO,CAAD,CAAvB;AAAzB;;AACAC,kBAAAA,OAAO,CAAC/E,KAAR,CAAc,IAAd,EAAoB4E,IAApB;AAbF;;AAeA,qBAAO,IAAP;AACD,aAlBD,MAkBO,IAAIG,OAAJ,EAAa;AAClB;AACA;AACAA,cAAAA,OAAO,GAAGA,OAAO,CAACvH,KAAR,EAAV;AACD;AACF;;AAED,cAAIuH,OAAO,IAAIA,OAAO,CAAC1K,MAAvB,EAA+B;AAC7B,gBAAIsK,EAAE,GAAG,CAAT,EAAY;AACVC,cAAAA,IAAI,GAAG,IAAI1H,KAAJ,CAAUyH,EAAE,GAAG,CAAf,CAAP;;AACA,mBAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,EAAhB,EAAoBG,CAAC,EAArB;AAAyBF,gBAAAA,IAAI,CAACE,CAAC,GAAG,CAAL,CAAJ,GAAcP,SAAS,CAACO,CAAD,CAAvB;AAAzB;AACD;;AACD,iBAAKpL,CAAC,GAAG,CAAJ,EAAOmL,CAAC,GAAGE,OAAO,CAAC1K,MAAxB,EAAgCX,CAAC,GAAGmL,CAApC,EAAuCnL,CAAC,EAAxC,EAA4C;AAC1C,mBAAKiK,KAAL,GAAahH,IAAb;;AACA,sBAAQgI,EAAR;AACA,qBAAK,CAAL;AACEI,kBAAAA,OAAO,CAACrL,CAAD,CAAP,CAAWU,IAAX,CAAgB,IAAhB;AACA;;AACF,qBAAK,CAAL;AACE2K,kBAAAA,OAAO,CAACrL,CAAD,CAAP,CAAWU,IAAX,CAAgB,IAAhB,EAAsBmK,SAAS,CAAC,CAAD,CAA/B;AACA;;AACF,qBAAK,CAAL;AACEQ,kBAAAA,OAAO,CAACrL,CAAD,CAAP,CAAWU,IAAX,CAAgB,IAAhB,EAAsBmK,SAAS,CAAC,CAAD,CAA/B,EAAoCA,SAAS,CAAC,CAAD,CAA7C;AACA;;AACF;AACEQ,kBAAAA,OAAO,CAACrL,CAAD,CAAP,CAAWsG,KAAX,CAAiB,IAAjB,EAAuB4E,IAAvB;AAXF;AAaD;;AACD,mBAAO,IAAP;AACD,WAtBD,MAsBO,IAAI,CAAC,KAAKI,IAAN,IAAcrI,IAAI,KAAK,OAA3B,EAAoC;AACzC,gBAAI4H,SAAS,CAAC,CAAD,CAAT,YAAwBvK,KAA5B,EAAmC;AACjC,oBAAMuK,SAAS,CAAC,CAAD,CAAf,CADiC,CACb;AACrB,aAFD,MAEO;AACL,oBAAM,IAAIvK,KAAJ,CAAU,sCAAV,CAAN;AACD;;AACD,mBAAO,KAAP;AACD;;AAED,iBAAO,CAAC,CAAC,KAAKgL,IAAd;AACD,SAxGD;;AA0GA9C,QAAAA,YAAY,CAACzB,SAAb,CAAuByE,SAAvB,GAAmC,YAAW;AAE5C,eAAKrE,OAAL,IAAgBD,IAAI,CAACxG,IAAL,CAAU,IAAV,CAAhB;AAEA,cAAIuC,IAAI,GAAG4H,SAAS,CAAC,CAAD,CAApB;;AAEA,cAAI5H,IAAI,KAAK,aAAT,IAA0B,CAAC,KAAK0E,WAApC,EAAiD;AAC7C,gBAAI,CAAC,KAAKR,OAAL,CAAaQ,WAAlB,EAA+B;AAAE,qBAAO8D,OAAO,CAACC,OAAR,CAAgB,CAAC,KAAD,CAAhB,CAAP;AAAkC;AACtE;;AAED,cAAIC,QAAQ,GAAE,EAAd;AAEA,cAAIV,EAAE,GAAGJ,SAAS,CAAClK,MAAnB;AACA,cAAIuK,IAAJ,EAASC,CAAT,EAAWnL,CAAX,EAAaoL,CAAb;AACA,cAAIC,OAAJ;;AAEA,cAAI,KAAKC,IAAT,EAAe;AACb,gBAAIL,EAAE,GAAG,CAAT,EAAY;AACVC,cAAAA,IAAI,GAAG,IAAI1H,KAAJ,CAAUyH,EAAV,CAAP;;AACA,mBAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,EAAhB,EAAoBG,CAAC,EAArB;AAAyBF,gBAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUP,SAAS,CAACO,CAAD,CAAnB;AAAzB;AACD;;AACD,iBAAKpL,CAAC,GAAG,CAAJ,EAAOmL,CAAC,GAAG,KAAKG,IAAL,CAAU3K,MAA1B,EAAkCX,CAAC,GAAGmL,CAAtC,EAAyCnL,CAAC,EAA1C,EAA8C;AAC5C,mBAAKiK,KAAL,GAAahH,IAAb;;AACA,sBAAQgI,EAAR;AACA,qBAAK,CAAL;AACEU,kBAAAA,QAAQ,CAACpI,IAAT,CAAc,KAAK+H,IAAL,CAAUtL,CAAV,EAAaU,IAAb,CAAkB,IAAlB,EAAwBuC,IAAxB,CAAd;AACA;;AACF,qBAAK,CAAL;AACE0I,kBAAAA,QAAQ,CAACpI,IAAT,CAAc,KAAK+H,IAAL,CAAUtL,CAAV,EAAaU,IAAb,CAAkB,IAAlB,EAAwBuC,IAAxB,EAA8B4H,SAAS,CAAC,CAAD,CAAvC,CAAd;AACA;;AACF,qBAAK,CAAL;AACEc,kBAAAA,QAAQ,CAACpI,IAAT,CAAc,KAAK+H,IAAL,CAAUtL,CAAV,EAAaU,IAAb,CAAkB,IAAlB,EAAwBuC,IAAxB,EAA8B4H,SAAS,CAAC,CAAD,CAAvC,EAA4CA,SAAS,CAAC,CAAD,CAArD,CAAd;AACA;;AACF;AACEc,kBAAAA,QAAQ,CAACpI,IAAT,CAAc,KAAK+H,IAAL,CAAUtL,CAAV,EAAasG,KAAb,CAAmB,IAAnB,EAAyB4E,IAAzB,CAAd;AAXF;AAaD;AACF;;AAED,cAAI,KAAKxD,QAAT,EAAmB;AACjB2D,YAAAA,OAAO,GAAG,EAAV;AACA,gBAAIE,EAAE,GAAG,OAAOtI,IAAP,KAAgB,QAAhB,GAA2BA,IAAI,CAAC4G,KAAL,CAAW,KAAKtC,SAAhB,CAA3B,GAAwDtE,IAAI,CAACa,KAAL,EAAjE;AACA4E,YAAAA,kBAAkB,CAAChI,IAAnB,CAAwB,IAAxB,EAA8B2K,OAA9B,EAAuCE,EAAvC,EAA2C,KAAK1D,YAAhD,EAA8D,CAA9D;AACD,WAJD,MAIO;AACLwD,YAAAA,OAAO,GAAG,KAAKlE,OAAL,CAAalE,IAAb,CAAV;AACD;;AAED,cAAI,OAAOoI,OAAP,KAAmB,UAAvB,EAAmC;AACjC,iBAAKpB,KAAL,GAAahH,IAAb;;AACA,oBAAQgI,EAAR;AACA,mBAAK,CAAL;AACEU,gBAAAA,QAAQ,CAACpI,IAAT,CAAc8H,OAAO,CAAC3K,IAAR,CAAa,IAAb,CAAd;AACA;;AACF,mBAAK,CAAL;AACEiL,gBAAAA,QAAQ,CAACpI,IAAT,CAAc8H,OAAO,CAAC3K,IAAR,CAAa,IAAb,EAAmBmK,SAAS,CAAC,CAAD,CAA5B,CAAd;AACA;;AACF,mBAAK,CAAL;AACEc,gBAAAA,QAAQ,CAACpI,IAAT,CAAc8H,OAAO,CAAC3K,IAAR,CAAa,IAAb,EAAmBmK,SAAS,CAAC,CAAD,CAA5B,EAAiCA,SAAS,CAAC,CAAD,CAA1C,CAAd;AACA;;AACF;AACEK,gBAAAA,IAAI,GAAG,IAAI1H,KAAJ,CAAUyH,EAAE,GAAG,CAAf,CAAP;;AACA,qBAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,EAAhB,EAAoBG,CAAC,EAArB;AAAyBF,kBAAAA,IAAI,CAACE,CAAC,GAAG,CAAL,CAAJ,GAAcP,SAAS,CAACO,CAAD,CAAvB;AAAzB;;AACAO,gBAAAA,QAAQ,CAACpI,IAAT,CAAc8H,OAAO,CAAC/E,KAAR,CAAc,IAAd,EAAoB4E,IAApB,CAAd;AAbF;AAeD,WAjBD,MAiBO,IAAIG,OAAO,IAAIA,OAAO,CAAC1K,MAAvB,EAA+B;AACpC0K,YAAAA,OAAO,GAAGA,OAAO,CAACvH,KAAR,EAAV;;AACA,gBAAImH,EAAE,GAAG,CAAT,EAAY;AACVC,cAAAA,IAAI,GAAG,IAAI1H,KAAJ,CAAUyH,EAAE,GAAG,CAAf,CAAP;;AACA,mBAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,EAAhB,EAAoBG,CAAC,EAArB;AAAyBF,gBAAAA,IAAI,CAACE,CAAC,GAAG,CAAL,CAAJ,GAAcP,SAAS,CAACO,CAAD,CAAvB;AAAzB;AACD;;AACD,iBAAKpL,CAAC,GAAG,CAAJ,EAAOmL,CAAC,GAAGE,OAAO,CAAC1K,MAAxB,EAAgCX,CAAC,GAAGmL,CAApC,EAAuCnL,CAAC,EAAxC,EAA4C;AAC1C,mBAAKiK,KAAL,GAAahH,IAAb;;AACA,sBAAQgI,EAAR;AACA,qBAAK,CAAL;AACEU,kBAAAA,QAAQ,CAACpI,IAAT,CAAc8H,OAAO,CAACrL,CAAD,CAAP,CAAWU,IAAX,CAAgB,IAAhB,CAAd;AACA;;AACF,qBAAK,CAAL;AACEiL,kBAAAA,QAAQ,CAACpI,IAAT,CAAc8H,OAAO,CAACrL,CAAD,CAAP,CAAWU,IAAX,CAAgB,IAAhB,EAAsBmK,SAAS,CAAC,CAAD,CAA/B,CAAd;AACA;;AACF,qBAAK,CAAL;AACEc,kBAAAA,QAAQ,CAACpI,IAAT,CAAc8H,OAAO,CAACrL,CAAD,CAAP,CAAWU,IAAX,CAAgB,IAAhB,EAAsBmK,SAAS,CAAC,CAAD,CAA/B,EAAoCA,SAAS,CAAC,CAAD,CAA7C,CAAd;AACA;;AACF;AACEc,kBAAAA,QAAQ,CAACpI,IAAT,CAAc8H,OAAO,CAACrL,CAAD,CAAP,CAAWsG,KAAX,CAAiB,IAAjB,EAAuB4E,IAAvB,CAAd;AAXF;AAaD;AACF,WAtBM,MAsBA,IAAI,CAAC,KAAKI,IAAN,IAAcrI,IAAI,KAAK,OAA3B,EAAoC;AACzC,gBAAI4H,SAAS,CAAC,CAAD,CAAT,YAAwBvK,KAA5B,EAAmC;AACjC,qBAAOmL,OAAO,CAACG,MAAR,CAAef,SAAS,CAAC,CAAD,CAAxB,CAAP,CADiC,CACI;AACtC,aAFD,MAEO;AACL,qBAAOY,OAAO,CAACG,MAAR,CAAe,sCAAf,CAAP;AACD;AACF;;AAED,iBAAOH,OAAO,CAACI,GAAR,CAAYF,QAAZ,CAAP;AACD,SA/FD;;AAiGAnD,QAAAA,YAAY,CAACzB,SAAb,CAAuB+E,EAAvB,GAA4B,UAAS7I,IAAT,EAAe2G,QAAf,EAAyB;AACnD,iBAAO,KAAKmB,GAAL,CAAS9H,IAAT,EAAe2G,QAAf,EAAyB,KAAzB,CAAP;AACD,SAFD;;AAIApB,QAAAA,YAAY,CAACzB,SAAb,CAAuBgF,eAAvB,GAAyC,UAAS9I,IAAT,EAAe2G,QAAf,EAAyB;AAChE,iBAAO,KAAKmB,GAAL,CAAS9H,IAAT,EAAe2G,QAAf,EAAyB,IAAzB,CAAP;AACD,SAFD;;AAIApB,QAAAA,YAAY,CAACzB,SAAb,CAAuBiF,KAAvB,GAA+B,UAAS7B,EAAT,EAAa;AAC1C,iBAAO,KAAK8B,MAAL,CAAY9B,EAAZ,EAAgB,KAAhB,CAAP;AACD,SAFD;;AAIA3B,QAAAA,YAAY,CAACzB,SAAb,CAAuBmF,UAAvB,GAAoC,UAAS/B,EAAT,EAAa;AAC/C,iBAAO,KAAK8B,MAAL,CAAY9B,EAAZ,EAAgB,IAAhB,CAAP;AACD,SAFD;;AAIA3B,QAAAA,YAAY,CAACzB,SAAb,CAAuBoF,WAAvB,GAAqC3D,YAAY,CAACzB,SAAb,CAAuB+E,EAA5D;;AAEAtD,QAAAA,YAAY,CAACzB,SAAb,CAAuBkF,MAAvB,GAAgC,UAAS9B,EAAT,EAAaG,OAAb,EAAqB;AACnD,cAAI,OAAOH,EAAP,KAAc,UAAlB,EAA8B;AAC5B,kBAAM,IAAI7J,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,cAAI,CAAC,KAAKgL,IAAV,EAAgB;AACd,iBAAKA,IAAL,GAAY,EAAZ;AACD,WAPkD,CASnD;;;AACA,cAAGhB,OAAH,EAAW;AACT,iBAAKgB,IAAL,CAAUc,OAAV,CAAkBjC,EAAlB;AACD,WAFD,MAEK;AACH,iBAAKmB,IAAL,CAAU/H,IAAV,CAAe4G,EAAf;AACD;;AAED,iBAAO,IAAP;AACD,SAjBD;;AAmBA3B,QAAAA,YAAY,CAACzB,SAAb,CAAuBgE,GAAvB,GAA6B,UAAS9H,IAAT,EAAe2G,QAAf,EAAyBU,OAAzB,EAAkC;AAC7D,cAAI,OAAOrH,IAAP,KAAgB,UAApB,EAAgC;AAC9B,iBAAKgJ,MAAL,CAAYhJ,IAAZ,EAAkB2G,QAAlB;;AACA,mBAAO,IAAP;AACD;;AAED,cAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,kBAAM,IAAItJ,KAAJ,CAAU,uCAAV,CAAN;AACD;;AACD,eAAK6G,OAAL,IAAgBD,IAAI,CAACxG,IAAL,CAAU,IAAV,CAAhB,CAT6D,CAW7D;AACA;;AACA,eAAKsK,IAAL,CAAU,aAAV,EAAyB/H,IAAzB,EAA+B2G,QAA/B;;AAEA,cAAI,KAAKlC,QAAT,EAAmB;AACjBiC,YAAAA,gBAAgB,CAACjJ,IAAjB,CAAsB,IAAtB,EAA4BuC,IAA5B,EAAkC2G,QAAlC;AACA,mBAAO,IAAP;AACD;;AAED,cAAI,CAAC,KAAKzC,OAAL,CAAalE,IAAb,CAAL,EAAyB;AACvB;AACA,iBAAKkE,OAAL,CAAalE,IAAb,IAAqB2G,QAArB;AACD,WAHD,MAIK;AACH,gBAAI,OAAO,KAAKzC,OAAL,CAAalE,IAAb,CAAP,KAA8B,UAAlC,EAA8C;AAC5C;AACA,mBAAKkE,OAAL,CAAalE,IAAb,IAAqB,CAAC,KAAKkE,OAAL,CAAalE,IAAb,CAAD,CAArB;AACD,aAJE,CAMH;;;AACA,gBAAGqH,OAAH,EAAW;AACT,mBAAKnD,OAAL,CAAalE,IAAb,EAAmBmJ,OAAnB,CAA2BxC,QAA3B;AACD,aAFD,MAEK;AACH,mBAAKzC,OAAL,CAAalE,IAAb,EAAmBM,IAAnB,CAAwBqG,QAAxB;AACD,aAXE,CAaH;;;AACA,gBACE,CAAC,KAAKzC,OAAL,CAAalE,IAAb,EAAmB8G,MAApB,IACA,KAAKvC,aAAL,GAAqB,CADrB,IAEA,KAAKL,OAAL,CAAalE,IAAb,EAAmBtC,MAAnB,GAA4B,KAAK6G,aAHnC,EAIE;AACA,mBAAKL,OAAL,CAAalE,IAAb,EAAmB8G,MAAnB,GAA4B,IAA5B;AACAjC,cAAAA,qBAAqB,CAACpH,IAAtB,CAA2B,IAA3B,EAAiC,KAAKyG,OAAL,CAAalE,IAAb,EAAmBtC,MAApD,EAA4DsC,IAA5D;AACD;AACF;;AAED,iBAAO,IAAP;AACD,SAjDD;;AAmDAuF,QAAAA,YAAY,CAACzB,SAAb,CAAuB6D,GAAvB,GAA6B,UAAS3H,IAAT,EAAe2G,QAAf,EAAyB;AACpD,cAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,kBAAM,IAAItJ,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAED,cAAIqI,QAAJ;AAAA,cAAa0D,KAAK,GAAC,EAAnB;;AAEA,cAAG,KAAK3E,QAAR,EAAkB;AAChB,gBAAI6D,EAAE,GAAG,OAAOtI,IAAP,KAAgB,QAAhB,GAA2BA,IAAI,CAAC4G,KAAL,CAAW,KAAKtC,SAAhB,CAA3B,GAAwDtE,IAAI,CAACa,KAAL,EAAjE;AACAuI,YAAAA,KAAK,GAAG3D,kBAAkB,CAAChI,IAAnB,CAAwB,IAAxB,EAA8B,IAA9B,EAAoC6K,EAApC,EAAwC,KAAK1D,YAA7C,EAA2D,CAA3D,CAAR;AACD,WAHD,MAIK;AACH;AACA,gBAAI,CAAC,KAAKV,OAAL,CAAalE,IAAb,CAAL,EAAyB,OAAO,IAAP;AACzB0F,YAAAA,QAAQ,GAAG,KAAKxB,OAAL,CAAalE,IAAb,CAAX;AACAoJ,YAAAA,KAAK,CAAC9I,IAAN,CAAW;AAACiG,cAAAA,UAAU,EAACb;AAAZ,aAAX;AACD;;AAED,eAAK,IAAI2D,KAAK,GAAC,CAAf,EAAkBA,KAAK,GAACD,KAAK,CAAC1L,MAA9B,EAAsC2L,KAAK,EAA3C,EAA+C;AAC7C,gBAAIxD,IAAI,GAAGuD,KAAK,CAACC,KAAD,CAAhB;AACA3D,YAAAA,QAAQ,GAAGG,IAAI,CAACU,UAAhB;;AACA,gBAAI/F,OAAO,CAACkF,QAAD,CAAX,EAAuB;AAErB,kBAAI4D,QAAQ,GAAG,CAAC,CAAhB;;AAEA,mBAAK,IAAIvM,CAAC,GAAG,CAAR,EAAWW,MAAM,GAAGgI,QAAQ,CAAChI,MAAlC,EAA0CX,CAAC,GAAGW,MAA9C,EAAsDX,CAAC,EAAvD,EAA2D;AACzD,oBAAI2I,QAAQ,CAAC3I,CAAD,CAAR,KAAgB4J,QAAhB,IACDjB,QAAQ,CAAC3I,CAAD,CAAR,CAAY4J,QAAZ,IAAwBjB,QAAQ,CAAC3I,CAAD,CAAR,CAAY4J,QAAZ,KAAyBA,QADhD,IAEDjB,QAAQ,CAAC3I,CAAD,CAAR,CAAY8K,OAAZ,IAAuBnC,QAAQ,CAAC3I,CAAD,CAAR,CAAY8K,OAAZ,KAAwBlB,QAFlD,EAE6D;AAC3D2C,kBAAAA,QAAQ,GAAGvM,CAAX;AACA;AACD;AACF;;AAED,kBAAIuM,QAAQ,GAAG,CAAf,EAAkB;AAChB;AACD;;AAED,kBAAG,KAAK7E,QAAR,EAAkB;AAChBoB,gBAAAA,IAAI,CAACU,UAAL,CAAgBgD,MAAhB,CAAuBD,QAAvB,EAAiC,CAAjC;AACD,eAFD,MAGK;AACH,qBAAKpF,OAAL,CAAalE,IAAb,EAAmBuJ,MAAnB,CAA0BD,QAA1B,EAAoC,CAApC;AACD;;AAED,kBAAI5D,QAAQ,CAAChI,MAAT,KAAoB,CAAxB,EAA2B;AACzB,oBAAG,KAAK+G,QAAR,EAAkB;AAChB,yBAAOoB,IAAI,CAACU,UAAZ;AACD,iBAFD,MAGK;AACH,yBAAO,KAAKrC,OAAL,CAAalE,IAAb,CAAP;AACD;AACF;;AAED,mBAAK+H,IAAL,CAAU,gBAAV,EAA4B/H,IAA5B,EAAkC2G,QAAlC;AAEA,qBAAO,IAAP;AACD,aApCD,MAqCK,IAAIjB,QAAQ,KAAKiB,QAAb,IACNjB,QAAQ,CAACiB,QAAT,IAAqBjB,QAAQ,CAACiB,QAAT,KAAsBA,QADrC,IAENjB,QAAQ,CAACmC,OAAT,IAAoBnC,QAAQ,CAACmC,OAAT,KAAqBlB,QAFvC,EAEkD;AACrD,kBAAG,KAAKlC,QAAR,EAAkB;AAChB,uBAAOoB,IAAI,CAACU,UAAZ;AACD,eAFD,MAGK;AACH,uBAAO,KAAKrC,OAAL,CAAalE,IAAb,CAAP;AACD;;AAED,mBAAK+H,IAAL,CAAU,gBAAV,EAA4B/H,IAA5B,EAAkC2G,QAAlC;AACD;AACF;;AAED,mBAAS6C,yBAAT,CAAmCC,IAAnC,EAAyC;AACvC,gBAAIA,IAAI,KAAK5L,SAAb,EAAwB;AACtB;AACD;;AACD,gBAAI6C,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY+I,IAAZ,CAAX;;AACA,iBAAK,IAAI1M,CAAT,IAAc2D,IAAd,EAAoB;AAClB,kBAAIE,GAAG,GAAGF,IAAI,CAAC3D,CAAD,CAAd;AACA,kBAAIyG,GAAG,GAAGiG,IAAI,CAAC7I,GAAD,CAAd;AACA,kBAAK4C,GAAG,YAAYkG,QAAhB,IAA8B,QAAOlG,GAAP,MAAe,QAA7C,IAA2DA,GAAG,KAAK,IAAvE,EACE;;AACF,kBAAI7C,MAAM,CAACD,IAAP,CAAY8C,GAAZ,EAAiB9F,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B8L,gBAAAA,yBAAyB,CAACC,IAAI,CAAC7I,GAAD,CAAL,CAAzB;AACD;;AACD,kBAAID,MAAM,CAACD,IAAP,CAAY8C,GAAZ,EAAiB9F,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,uBAAO+L,IAAI,CAAC7I,GAAD,CAAX;AACD;AACF;AACF;;AACD4I,UAAAA,yBAAyB,CAAC,KAAK5E,YAAN,CAAzB;AAEA,iBAAO,IAAP;AACD,SA7FD;;AA+FAW,QAAAA,YAAY,CAACzB,SAAb,CAAuB6F,MAAvB,GAAgC,UAASzC,EAAT,EAAa;AAC3C,cAAInK,CAAC,GAAG,CAAR;AAAA,cAAWmL,CAAC,GAAG,CAAf;AAAA,cAAkB0B,GAAlB;;AACA,cAAI1C,EAAE,IAAI,KAAKmB,IAAX,IAAmB,KAAKA,IAAL,CAAU3K,MAAV,GAAmB,CAA1C,EAA6C;AAC3CkM,YAAAA,GAAG,GAAG,KAAKvB,IAAX;;AACA,iBAAItL,CAAC,GAAG,CAAJ,EAAOmL,CAAC,GAAG0B,GAAG,CAAClM,MAAnB,EAA2BX,CAAC,GAAGmL,CAA/B,EAAkCnL,CAAC,EAAnC,EAAuC;AACrC,kBAAGmK,EAAE,KAAK0C,GAAG,CAAC7M,CAAD,CAAb,EAAkB;AAChB6M,gBAAAA,GAAG,CAACL,MAAJ,CAAWxM,CAAX,EAAc,CAAd;AACA,qBAAKgL,IAAL,CAAU,mBAAV,EAA+Bb,EAA/B;AACA,uBAAO,IAAP;AACD;AACF;AACF,WATD,MASO;AACL0C,YAAAA,GAAG,GAAG,KAAKvB,IAAX;;AACA,iBAAItL,CAAC,GAAG,CAAJ,EAAOmL,CAAC,GAAG0B,GAAG,CAAClM,MAAnB,EAA2BX,CAAC,GAAGmL,CAA/B,EAAkCnL,CAAC,EAAnC;AACE,mBAAKgL,IAAL,CAAU,mBAAV,EAA+B6B,GAAG,CAAC7M,CAAD,CAAlC;AADF;;AAEA,iBAAKsL,IAAL,GAAY,EAAZ;AACD;;AACD,iBAAO,IAAP;AACD,SAlBD;;AAoBA9C,QAAAA,YAAY,CAACzB,SAAb,CAAuB+F,cAAvB,GAAwCtE,YAAY,CAACzB,SAAb,CAAuB6D,GAA/D;;AAEApC,QAAAA,YAAY,CAACzB,SAAb,CAAuBgG,kBAAvB,GAA4C,UAAS9J,IAAT,EAAe;AACzD,cAAI4H,SAAS,CAAClK,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,aAAC,KAAKwG,OAAN,IAAiBD,IAAI,CAACxG,IAAL,CAAU,IAAV,CAAjB;AACA,mBAAO,IAAP;AACD;;AAED,cAAI,KAAKgH,QAAT,EAAmB;AACjB,gBAAI6D,EAAE,GAAG,OAAOtI,IAAP,KAAgB,QAAhB,GAA2BA,IAAI,CAAC4G,KAAL,CAAW,KAAKtC,SAAhB,CAA3B,GAAwDtE,IAAI,CAACa,KAAL,EAAjE;AACA,gBAAIuI,KAAK,GAAG3D,kBAAkB,CAAChI,IAAnB,CAAwB,IAAxB,EAA8B,IAA9B,EAAoC6K,EAApC,EAAwC,KAAK1D,YAA7C,EAA2D,CAA3D,CAAZ;;AAEA,iBAAK,IAAIyE,KAAK,GAAC,CAAf,EAAkBA,KAAK,GAACD,KAAK,CAAC1L,MAA9B,EAAsC2L,KAAK,EAA3C,EAA+C;AAC7C,kBAAIxD,IAAI,GAAGuD,KAAK,CAACC,KAAD,CAAhB;AACAxD,cAAAA,IAAI,CAACU,UAAL,GAAkB,IAAlB;AACD;AACF,WARD,MASK,IAAI,KAAKrC,OAAT,EAAkB;AACrB,iBAAKA,OAAL,CAAalE,IAAb,IAAqB,IAArB;AACD;;AACD,iBAAO,IAAP;AACD,SAnBD;;AAqBAuF,QAAAA,YAAY,CAACzB,SAAb,CAAuB8B,SAAvB,GAAmC,UAAS5F,IAAT,EAAe;AAChD,cAAI,KAAKyE,QAAT,EAAmB;AACjB,gBAAIiB,QAAQ,GAAG,EAAf;AACA,gBAAI4C,EAAE,GAAG,OAAOtI,IAAP,KAAgB,QAAhB,GAA2BA,IAAI,CAAC4G,KAAL,CAAW,KAAKtC,SAAhB,CAA3B,GAAwDtE,IAAI,CAACa,KAAL,EAAjE;AACA4E,YAAAA,kBAAkB,CAAChI,IAAnB,CAAwB,IAAxB,EAA8BiI,QAA9B,EAAwC4C,EAAxC,EAA4C,KAAK1D,YAAjD,EAA+D,CAA/D;AACA,mBAAOc,QAAP;AACD;;AAED,eAAKxB,OAAL,IAAgBD,IAAI,CAACxG,IAAL,CAAU,IAAV,CAAhB;AAEA,cAAI,CAAC,KAAKyG,OAAL,CAAalE,IAAb,CAAL,EAAyB,KAAKkE,OAAL,CAAalE,IAAb,IAAqB,EAArB;;AACzB,cAAI,CAACQ,OAAO,CAAC,KAAK0D,OAAL,CAAalE,IAAb,CAAD,CAAZ,EAAkC;AAChC,iBAAKkE,OAAL,CAAalE,IAAb,IAAqB,CAAC,KAAKkE,OAAL,CAAalE,IAAb,CAAD,CAArB;AACD;;AACD,iBAAO,KAAKkE,OAAL,CAAalE,IAAb,CAAP;AACD,SAfD;;AAiBAuF,QAAAA,YAAY,CAACzB,SAAb,CAAuBiG,UAAvB,GAAoC,YAAU;AAC5C,iBAAOpJ,MAAM,CAACD,IAAP,CAAY,KAAKwD,OAAjB,CAAP;AACD,SAFD;;AAIAqB,QAAAA,YAAY,CAACzB,SAAb,CAAuBkG,aAAvB,GAAuC,UAAShK,IAAT,EAAe;AACpD,iBAAO,KAAK4F,SAAL,CAAe5F,IAAf,EAAqBtC,MAA5B;AACD,SAFD;;AAIA6H,QAAAA,YAAY,CAACzB,SAAb,CAAuBmG,YAAvB,GAAsC,YAAW;AAE/C,cAAG,KAAK5B,IAAR,EAAc;AACZ,mBAAO,KAAKA,IAAZ;AACD,WAFD,MAGK;AACH,mBAAO,EAAP;AACD;AAEF,SATD;;AAWA,YAAI,OAAO5E,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC7C;AACDD,UAAAA,MAAM,CAAC,YAAW;AAChB,mBAAO8B,YAAP;AACD,WAFK,CAAN;AAGD,SALD,MAKO,IAAI,QAAO/H,OAAP,MAAmB,QAAvB,EAAiC;AACtC;AACAG,UAAAA,MAAM,CAACH,OAAP,GAAiB+H,YAAjB;AACD,SAHM,MAIF;AACH;AACA2E,UAAAA,MAAM,CAAC1E,aAAP,GAAuBD,YAAvB;AACD;AACF,OAhwBC,EAAD;AAkwBA,KA1wBD,EA0wBG9H,IA1wBH,CA0wBQ,IA1wBR,EA0wBaP,OAAO,CAAC,UAAD,CA1wBpB;AA2wBC,GA5wBO,EA4wBN;AAAC,gBAAW;AAAZ,GA5wBM,CAxZgc;AAoqCtb,KAAE,CAAC,UAASA,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACrD;;;;;AAMA;AACA;;AACA,QAAI2M,qBAAqB,GAAGxJ,MAAM,CAACwJ,qBAAnC;AACA,QAAI3D,cAAc,GAAG7F,MAAM,CAACmD,SAAP,CAAiB0C,cAAtC;AACA,QAAI4D,gBAAgB,GAAGzJ,MAAM,CAACmD,SAAP,CAAiBuG,oBAAxC;;AAEA,aAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,UAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK1M,SAA5B,EAAuC;AACnC,cAAM,IAAI2M,SAAJ,CAAc,uDAAd,CAAN;AACH;;AAED,aAAO7J,MAAM,CAAC4J,GAAD,CAAb;AACH;;AAED,aAASE,eAAT,GAA2B;AACvB,UAAI;AACA,YAAI,CAAC9J,MAAM,CAAC+J,MAAZ,EAAoB;AAChB,iBAAO,KAAP;AACH,SAHD,CAKA;AAEA;;;AACA,YAAIC,KAAK,GAAG,IAAIxH,MAAJ,CAAW,KAAX,CAAZ,CARA,CAQgC;;AAChCwH,QAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX;;AACA,YAAIhK,MAAM,CAACiK,mBAAP,CAA2BD,KAA3B,EAAkC,CAAlC,MAAyC,GAA7C,EAAkD;AAC9C,iBAAO,KAAP;AACH,SAZD,CAcA;;;AACA,YAAIE,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAI9N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB8N,UAAAA,KAAK,CAAC,MAAM1H,MAAM,CAACC,YAAP,CAAoBrG,CAApB,CAAP,CAAL,GAAsCA,CAAtC;AACH;;AACD,YAAI+N,MAAM,GAAGnK,MAAM,CAACiK,mBAAP,CAA2BC,KAA3B,EAAkCE,GAAlC,CAAsC,UAAUnO,CAAV,EAAa;AAC5D,iBAAOiO,KAAK,CAACjO,CAAD,CAAZ;AACH,SAFY,CAAb;;AAGA,YAAIkO,MAAM,CAACE,IAAP,CAAY,EAAZ,MAAoB,YAAxB,EAAsC;AAClC,iBAAO,KAAP;AACH,SAxBD,CA0BA;;;AACA,YAAIC,KAAK,GAAG,EAAZ;AACA,+BAAuBrE,KAAvB,CAA6B,EAA7B,EAAiCsE,OAAjC,CAAyC,UAAUC,MAAV,EAAkB;AACvDF,UAAAA,KAAK,CAACE,MAAD,CAAL,GAAgBA,MAAhB;AACH,SAFD;;AAGA,YAAIxK,MAAM,CAACD,IAAP,CAAYC,MAAM,CAAC+J,MAAP,CAAc,EAAd,EAAkBO,KAAlB,CAAZ,EAAsCD,IAAtC,CAA2C,EAA3C,MACI,sBADR,EACgC;AAC5B,iBAAO,KAAP;AACH;;AAED,eAAO,IAAP;AACH,OArCD,CAqCE,OAAOI,GAAP,EAAY;AACV;AACA,eAAO,KAAP;AACH;AACJ;;AAEDzN,IAAAA,MAAM,CAACH,OAAP,GAAiBiN,eAAe,KAAK9J,MAAM,CAAC+J,MAAZ,GAAqB,UAAUW,MAAV,EAAkBC,MAAlB,EAA0B;AAC3E,UAAIC,IAAJ;AACA,UAAIC,EAAE,GAAGlB,QAAQ,CAACe,MAAD,CAAjB;AACA,UAAII,OAAJ;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9D,SAAS,CAAClK,MAA9B,EAAsCgO,CAAC,EAAvC,EAA2C;AACvCH,QAAAA,IAAI,GAAG5K,MAAM,CAACiH,SAAS,CAAC8D,CAAD,CAAV,CAAb;;AAEA,aAAK,IAAI9K,GAAT,IAAgB2K,IAAhB,EAAsB;AAClB,cAAI/E,cAAc,CAAC/I,IAAf,CAAoB8N,IAApB,EAA0B3K,GAA1B,CAAJ,EAAoC;AAChC4K,YAAAA,EAAE,CAAC5K,GAAD,CAAF,GAAU2K,IAAI,CAAC3K,GAAD,CAAd;AACH;AACJ;;AAED,YAAIuJ,qBAAJ,EAA2B;AACvBsB,UAAAA,OAAO,GAAGtB,qBAAqB,CAACoB,IAAD,CAA/B;;AACA,eAAK,IAAIxO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0O,OAAO,CAAC/N,MAA5B,EAAoCX,CAAC,EAArC,EAAyC;AACrC,gBAAIqN,gBAAgB,CAAC3M,IAAjB,CAAsB8N,IAAtB,EAA4BE,OAAO,CAAC1O,CAAD,CAAnC,CAAJ,EAA6C;AACzCyO,cAAAA,EAAE,CAACC,OAAO,CAAC1O,CAAD,CAAR,CAAF,GAAiBwO,IAAI,CAACE,OAAO,CAAC1O,CAAD,CAAR,CAArB;AACH;AACJ;AACJ;AACJ;;AAED,aAAOyO,EAAP;AACH,KAzBD;AA2BC,GA5FmB,EA4FlB,EA5FkB,CApqCob;AAgwClc,KAAE,CAAC,UAAStO,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACzC;AACA,QAAIoG,OAAO,GAAGjG,MAAM,CAACH,OAAP,GAAiB,EAA/B,CAFyC,CAIzC;AACA;AACA;AACA;;AAEA,QAAImO,gBAAJ;AACA,QAAIC,kBAAJ;;AAEA,aAASC,gBAAT,GAA4B;AACxB,YAAM,IAAIxO,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,aAASyO,mBAAT,GAAgC;AAC5B,YAAM,IAAIzO,KAAJ,CAAU,mCAAV,CAAN;AACH;;AACA,iBAAY;AACT,UAAI;AACA,YAAI,OAAO0O,UAAP,KAAsB,UAA1B,EAAsC;AAClCJ,UAAAA,gBAAgB,GAAGI,UAAnB;AACH,SAFD,MAEO;AACHJ,UAAAA,gBAAgB,GAAGE,gBAAnB;AACH;AACJ,OAND,CAME,OAAOlP,CAAP,EAAU;AACRgP,QAAAA,gBAAgB,GAAGE,gBAAnB;AACH;;AACD,UAAI;AACA,YAAI,OAAOG,YAAP,KAAwB,UAA5B,EAAwC;AACpCJ,UAAAA,kBAAkB,GAAGI,YAArB;AACH,SAFD,MAEO;AACHJ,UAAAA,kBAAkB,GAAGE,mBAArB;AACH;AACJ,OAND,CAME,OAAOnP,CAAP,EAAU;AACRiP,QAAAA,kBAAkB,GAAGE,mBAArB;AACH;AACJ,KAnBA,GAAD;;AAoBA,aAASG,UAAT,CAAoBC,GAApB,EAAyB;AACrB,UAAIP,gBAAgB,KAAKI,UAAzB,EAAqC;AACjC;AACA,eAAOA,UAAU,CAACG,GAAD,EAAM,CAAN,CAAjB;AACH,OAJoB,CAKrB;;;AACA,UAAI,CAACP,gBAAgB,KAAKE,gBAArB,IAAyC,CAACF,gBAA3C,KAAgEI,UAApE,EAAgF;AAC5EJ,QAAAA,gBAAgB,GAAGI,UAAnB;AACA,eAAOA,UAAU,CAACG,GAAD,EAAM,CAAN,CAAjB;AACH;;AACD,UAAI;AACA;AACA,eAAOP,gBAAgB,CAACO,GAAD,EAAM,CAAN,CAAvB;AACH,OAHD,CAGE,OAAMvP,CAAN,EAAQ;AACN,YAAI;AACA;AACA,iBAAOgP,gBAAgB,CAAClO,IAAjB,CAAsB,IAAtB,EAA4ByO,GAA5B,EAAiC,CAAjC,CAAP;AACH,SAHD,CAGE,OAAMvP,CAAN,EAAQ;AACN;AACA,iBAAOgP,gBAAgB,CAAClO,IAAjB,CAAsB,IAAtB,EAA4ByO,GAA5B,EAAiC,CAAjC,CAAP;AACH;AACJ;AAGJ;;AACD,aAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,UAAIR,kBAAkB,KAAKI,YAA3B,EAAyC;AACrC;AACA,eAAOA,YAAY,CAACI,MAAD,CAAnB;AACH,OAJ4B,CAK7B;;;AACA,UAAI,CAACR,kBAAkB,KAAKE,mBAAvB,IAA8C,CAACF,kBAAhD,KAAuEI,YAA3E,EAAyF;AACrFJ,QAAAA,kBAAkB,GAAGI,YAArB;AACA,eAAOA,YAAY,CAACI,MAAD,CAAnB;AACH;;AACD,UAAI;AACA;AACA,eAAOR,kBAAkB,CAACQ,MAAD,CAAzB;AACH,OAHD,CAGE,OAAOzP,CAAP,EAAS;AACP,YAAI;AACA;AACA,iBAAOiP,kBAAkB,CAACnO,IAAnB,CAAwB,IAAxB,EAA8B2O,MAA9B,CAAP;AACH,SAHD,CAGE,OAAOzP,CAAP,EAAS;AACP;AACA;AACA,iBAAOiP,kBAAkB,CAACnO,IAAnB,CAAwB,IAAxB,EAA8B2O,MAA9B,CAAP;AACH;AACJ;AAIJ;;AACD,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIC,YAAJ;AACA,QAAIC,UAAU,GAAG,CAAC,CAAlB;;AAEA,aAASC,eAAT,GAA2B;AACvB,UAAI,CAACH,QAAD,IAAa,CAACC,YAAlB,EAAgC;AAC5B;AACH;;AACDD,MAAAA,QAAQ,GAAG,KAAX;;AACA,UAAIC,YAAY,CAAC7O,MAAjB,EAAyB;AACrB2O,QAAAA,KAAK,GAAGE,YAAY,CAAC9F,MAAb,CAAoB4F,KAApB,CAAR;AACH,OAFD,MAEO;AACHG,QAAAA,UAAU,GAAG,CAAC,CAAd;AACH;;AACD,UAAIH,KAAK,CAAC3O,MAAV,EAAkB;AACdgP,QAAAA,UAAU;AACb;AACJ;;AAED,aAASA,UAAT,GAAsB;AAClB,UAAIJ,QAAJ,EAAc;AACV;AACH;;AACD,UAAIK,OAAO,GAAGV,UAAU,CAACQ,eAAD,CAAxB;AACAH,MAAAA,QAAQ,GAAG,IAAX;AAEA,UAAIxG,GAAG,GAAGuG,KAAK,CAAC3O,MAAhB;;AACA,aAAMoI,GAAN,EAAW;AACPyG,QAAAA,YAAY,GAAGF,KAAf;AACAA,QAAAA,KAAK,GAAG,EAAR;;AACA,eAAO,EAAEG,UAAF,GAAe1G,GAAtB,EAA2B;AACvB,cAAIyG,YAAJ,EAAkB;AACdA,YAAAA,YAAY,CAACC,UAAD,CAAZ,CAAyBI,GAAzB;AACH;AACJ;;AACDJ,QAAAA,UAAU,GAAG,CAAC,CAAd;AACA1G,QAAAA,GAAG,GAAGuG,KAAK,CAAC3O,MAAZ;AACH;;AACD6O,MAAAA,YAAY,GAAG,IAAf;AACAD,MAAAA,QAAQ,GAAG,KAAX;AACAH,MAAAA,eAAe,CAACQ,OAAD,CAAf;AACH;;AAED/I,IAAAA,OAAO,CAACiJ,QAAR,GAAmB,UAAUX,GAAV,EAAe;AAC9B,UAAIjE,IAAI,GAAG,IAAI1H,KAAJ,CAAUqH,SAAS,CAAClK,MAAV,GAAmB,CAA7B,CAAX;;AACA,UAAIkK,SAAS,CAAClK,MAAV,GAAmB,CAAvB,EAA0B;AACtB,aAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6K,SAAS,CAAClK,MAA9B,EAAsCX,CAAC,EAAvC,EAA2C;AACvCkL,UAAAA,IAAI,CAAClL,CAAC,GAAG,CAAL,CAAJ,GAAc6K,SAAS,CAAC7K,CAAD,CAAvB;AACH;AACJ;;AACDsP,MAAAA,KAAK,CAAC/L,IAAN,CAAW,IAAIwM,IAAJ,CAASZ,GAAT,EAAcjE,IAAd,CAAX;;AACA,UAAIoE,KAAK,CAAC3O,MAAN,KAAiB,CAAjB,IAAsB,CAAC4O,QAA3B,EAAqC;AACjCL,QAAAA,UAAU,CAACS,UAAD,CAAV;AACH;AACJ,KAXD,CAtIyC,CAmJzC;;;AACA,aAASI,IAAT,CAAcZ,GAAd,EAAmBa,KAAnB,EAA0B;AACtB,WAAKb,GAAL,GAAWA,GAAX;AACA,WAAKa,KAAL,GAAaA,KAAb;AACH;;AACDD,IAAAA,IAAI,CAAChJ,SAAL,CAAe8I,GAAf,GAAqB,YAAY;AAC7B,WAAKV,GAAL,CAAS7I,KAAT,CAAe,IAAf,EAAqB,KAAK0J,KAA1B;AACH,KAFD;;AAGAnJ,IAAAA,OAAO,CAACoJ,KAAR,GAAgB,SAAhB;AACApJ,IAAAA,OAAO,CAACqJ,OAAR,GAAkB,IAAlB;AACArJ,IAAAA,OAAO,CAACsJ,GAAR,GAAc,EAAd;AACAtJ,IAAAA,OAAO,CAACuJ,IAAR,GAAe,EAAf;AACAvJ,IAAAA,OAAO,CAACwJ,OAAR,GAAkB,EAAlB,CA/JyC,CA+JnB;;AACtBxJ,IAAAA,OAAO,CAACyJ,QAAR,GAAmB,EAAnB;;AAEA,aAASC,IAAT,GAAgB,CAAE;;AAElB1J,IAAAA,OAAO,CAACiF,EAAR,GAAayE,IAAb;AACA1J,IAAAA,OAAO,CAACsF,WAAR,GAAsBoE,IAAtB;AACA1J,IAAAA,OAAO,CAACqD,IAAR,GAAeqG,IAAf;AACA1J,IAAAA,OAAO,CAAC+D,GAAR,GAAc2F,IAAd;AACA1J,IAAAA,OAAO,CAACiG,cAAR,GAAyByD,IAAzB;AACA1J,IAAAA,OAAO,CAACkG,kBAAR,GAA6BwD,IAA7B;AACA1J,IAAAA,OAAO,CAACmE,IAAR,GAAeuF,IAAf;AACA1J,IAAAA,OAAO,CAACkF,eAAR,GAA0BwE,IAA1B;AACA1J,IAAAA,OAAO,CAACwD,mBAAR,GAA8BkG,IAA9B;;AAEA1J,IAAAA,OAAO,CAACgC,SAAR,GAAoB,UAAUV,IAAV,EAAgB;AAAE,aAAO,EAAP;AAAW,KAAjD;;AAEAtB,IAAAA,OAAO,CAAC2J,OAAR,GAAkB,UAAUrI,IAAV,EAAgB;AAC9B,YAAM,IAAI7H,KAAJ,CAAU,kCAAV,CAAN;AACH,KAFD;;AAIAuG,IAAAA,OAAO,CAAC4J,GAAR,GAAc,YAAY;AAAE,aAAO,GAAP;AAAY,KAAxC;;AACA5J,IAAAA,OAAO,CAAC6J,KAAR,GAAgB,UAAUC,GAAV,EAAe;AAC3B,YAAM,IAAIrQ,KAAJ,CAAU,gCAAV,CAAN;AACH,KAFD;;AAGAuG,IAAAA,OAAO,CAAC+J,KAAR,GAAgB,YAAW;AAAE,aAAO,CAAP;AAAW,KAAxC;AAEC,GA1LO,EA0LN,EA1LM,CAhwCgc;AA07Clc,KAAE,CAAC,UAASzQ,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACzC,QAAIoQ,QAAQ,GAAGhG,SAAS,CAAC,CAAD,CAAxB;AACA,QAAIiG,OAAO,GAAGjG,SAAS,CAAC,CAAD,CAAvB;AACA,QAAIkG,KAAK,GAAGlG,SAAS,CAAC,CAAD,CAArB;AAEA,QAAImG,SAAS,GAAGC,IAAI,CAACD,SAArB;;AAEApQ,IAAAA,MAAM,CAACH,OAAP,GAAiB,UAAU0J,EAAV,EAAc+G,OAAd,EAAuB;AACpC,UAAIC,IAAJ;AACA,UAAIC,SAAS,GAAGxN,MAAM,CAACD,IAAP,CAAYoN,KAAZ,CAAhB;;AAEA,WAAK,IAAI/Q,CAAC,GAAG,CAAR,EAAWmL,CAAC,GAAGiG,SAAS,CAACzQ,MAA9B,EAAsCX,CAAC,GAAGmL,CAA1C,EAA6CnL,CAAC,EAA9C,EAAkD;AAC9C,YAAI6D,GAAG,GAAGuN,SAAS,CAACpR,CAAD,CAAnB;AACA,YAAIqR,GAAG,GAAGN,KAAK,CAAClN,GAAD,CAAL,CAAWpD,OAArB,CAF8C,CAG9C;AACA;AACA;AACA;;AACA,YAAI4Q,GAAG,KAAKlH,EAAR,IAAckH,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgBnH,EAAzC,EAA6C;AACzCgH,UAAAA,IAAI,GAAGtN,GAAP;AACA;AACH;AACJ;;AAED,UAAI,CAACsN,IAAL,EAAW;AACPA,QAAAA,IAAI,GAAGnQ,IAAI,CAACmC,KAAL,CAAWnC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,CAAb,IAAkBD,IAAI,CAACuQ,MAAL,EAA7B,EAA4CvK,QAA5C,CAAqD,EAArD,CAAP;AACA,YAAIwK,MAAM,GAAG,EAAb;;AACA,aAAK,IAAIxR,CAAC,GAAG,CAAR,EAAWmL,CAAC,GAAGiG,SAAS,CAACzQ,MAA9B,EAAsCX,CAAC,GAAGmL,CAA1C,EAA6CnL,CAAC,EAA9C,EAAkD;AAC9C,cAAI6D,GAAG,GAAGuN,SAAS,CAACpR,CAAD,CAAnB;AACAwR,UAAAA,MAAM,CAAC3N,GAAD,CAAN,GAAcA,GAAd;AACH;;AACDiN,QAAAA,OAAO,CAACK,IAAD,CAAP,GAAgB,CACZ,sCAAsChH,EAAtC,GAA2C,WAD/B,EAEZqH,MAFY,CAAhB;AAIH;;AACD,UAAIC,IAAI,GAAGzQ,IAAI,CAACmC,KAAL,CAAWnC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,CAAb,IAAkBD,IAAI,CAACuQ,MAAL,EAA7B,EAA4CvK,QAA5C,CAAqD,EAArD,CAAX;AAEA,UAAI0K,MAAM,GAAG,EAAb;AAAiBA,MAAAA,MAAM,CAACP,IAAD,CAAN,GAAeA,IAAf;AACjBL,MAAAA,OAAO,CAACW,IAAD,CAAP,GAAgB,CACZ,sCACI;AACA,wBAFJ,GAEyBT,SAAS,CAACG,IAAD,CAFlC,GAE2C,IAF3C,GAGI,oCAHJ,GAIA,GALY,EAMZO,MANY,CAAhB;AASA,UAAIC,aAAa,GAAG,EAApB;AACAC,MAAAA,cAAc,CAACH,IAAD,CAAd;;AAEA,eAASG,cAAT,CAAwB/N,GAAxB,EAA6B;AACzB8N,QAAAA,aAAa,CAAC9N,GAAD,CAAb,GAAqB,IAArB;;AAEA,aAAK,IAAIgO,OAAT,IAAoBf,OAAO,CAACjN,GAAD,CAAP,CAAa,CAAb,CAApB,EAAqC;AACjC,cAAIiO,MAAM,GAAGhB,OAAO,CAACjN,GAAD,CAAP,CAAa,CAAb,EAAgBgO,OAAhB,CAAb;;AACA,cAAI,CAACF,aAAa,CAACG,MAAD,CAAlB,EAA4B;AACxBF,YAAAA,cAAc,CAACE,MAAD,CAAd;AACH;AACJ;AACJ;;AAED,UAAIC,GAAG,GAAG,MAAMlB,QAAN,GAAiB,KAAjB,GACJjN,MAAM,CAACD,IAAP,CAAYgO,aAAZ,EAA2B3D,GAA3B,CAA+B,UAAUnK,GAAV,EAAe;AAC5C,eAAOmN,SAAS,CAACnN,GAAD,CAAT,GAAiB,IAAjB,GACDiN,OAAO,CAACjN,GAAD,CAAP,CAAa,CAAb,CADC,GAED,GAFC,GAEKmN,SAAS,CAACF,OAAO,CAACjN,GAAD,CAAP,CAAa,CAAb,CAAD,CAFd,GAEkC,GAFzC;AAIH,OALC,EAKCoK,IALD,CAKM,GALN,CADI,GAOJ,QAPI,GAOO+C,SAAS,CAACS,IAAD,CAPhB,GAOyB,IAPnC;AAUA,UAAIO,GAAG,GAAG7E,MAAM,CAAC6E,GAAP,IAAc7E,MAAM,CAAC8E,SAArB,IAAkC9E,MAAM,CAAC+E,MAAzC,IAAmD/E,MAAM,CAACgF,KAApE;AAEA,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACN,GAAD,CAAT,EAAgB;AAAE9O,QAAAA,IAAI,EAAE;AAAR,OAAhB,CAAX;;AACA,UAAIiO,OAAO,IAAIA,OAAO,CAACoB,IAAvB,EAA6B;AAAE,eAAOF,IAAP;AAAc;;AAC7C,UAAIG,SAAS,GAAGP,GAAG,CAACQ,eAAJ,CAAoBJ,IAApB,CAAhB;AACA,UAAIK,MAAM,GAAG,IAAIC,MAAJ,CAAWH,SAAX,CAAb;AACAE,MAAAA,MAAM,CAACE,SAAP,GAAmBJ,SAAnB;AACA,aAAOE,MAAP;AACH,KAzED;AA2EC,GAlFO,EAkFN,EAlFM,CA17Cgc;AA4gDlc,KAAE,CAAC,UAAStS,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACzC;;;;;AAKA;;;;;AAKA,QAAImS,MAAM,GAAG,KAAKA,MAAL,IAAe;AAC1BC,MAAAA,QAAQ,EAAG;AADe,KAA5B;;AAIA,QAAIlF,MAAM,GAAGxN,OAAO,CAAC,eAAD,CAApB,CAfyC,CAiBzC;;;AACAwN,IAAAA,MAAM,CAACiF,MAAD,EAASzS,OAAO,CAAC,QAAD,CAAhB,CAAN;AAEAwN,IAAAA,MAAM,CAACiF,MAAD,EAASzS,OAAO,CAAC,aAAD,CAAhB,CAAN;AAEAwN,IAAAA,MAAM,CAACiF,MAAD,EAASzS,OAAO,CAAC,QAAD,CAAhB,CAAN;AAEAwN,IAAAA,MAAM,CAACiF,MAAD,EAASzS,OAAO,CAAC,MAAD,CAAhB,CAAN;AAEAwN,IAAAA,MAAM,CAACiF,MAAD,EAASzS,OAAO,CAAC,QAAD,CAAhB,CAAN;AAEAS,IAAAA,MAAM,CAACH,OAAP,GAAiBmS,MAAjB;AAEC,GA9BO,EA8BN;AAAC,mBAAc,EAAf;AAAkB,cAAS,EAA3B;AAA8B,cAAS,EAAvC;AAA0C,YAAO,EAAjD;AAAoD,cAAS,EAA7D;AAAgE,qBAAgB;AAAhF,GA9BM,CA5gDgc;AA0iDlX,KAAE,CAAC,UAASzS,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACzH,KAAC,UAAUI,MAAV,EAAiB;AAClBA,MAAAA,MAAM,CAAC+R,MAAP,GAAgBzS,OAAO,CAAC,UAAD,CAAvB;AACC,KAFD,EAEGO,IAFH,CAEQ,IAFR,EAEa,OAAOG,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,OAAO8J,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqC,OAAOwC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,EAFpI;AAGC,GAJuF,EAItF;AAAC,gBAAW;AAAZ,GAJsF,CA1iDgX;AA8iDtb,KAAE,CAAC,UAAShN,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACrD;;;;AAKA,QAAIqS,KAAK,GAAG3S,OAAO,CAAC,eAAD,CAAnB;;AACA,QAAI4S,OAAO,GAAG5S,OAAO,CAAC,iBAAD,CAArB;;AACA,QAAIsI,aAAa,GAAGtI,OAAO,CAAC,eAAD,CAAP,CAAyBsI,aAA7C;AAEA;;;;;;;;;;;;;;;;;;AAgBA,aAASuK,YAAT,CAAsB9B,OAAtB,EAA+B;AAC7B,UAAI+B,IAAI,GAAG,IAAX;AACA/B,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAKgC,GAAL,GAAWhC,OAAO,CAACgC,GAAnB;AACA,WAAKC,UAAL,GAAkBjC,OAAO,CAACiC,UAA1B;AACA,WAAKC,UAAL,GAAkBlC,OAAO,CAACkC,UAA1B;AACA,WAAKxD,OAAL,GAAesB,OAAO,CAACtB,OAAvB;AACA,WAAKyD,YAAL,GAAoBnC,OAAO,CAACmC,YAA5B;AACA,WAAKC,UAAL,GAAkBpC,OAAO,CAACoC,UAA1B;AACA,WAAKC,UAAL,GAAkBrC,OAAO,CAACqC,UAA1B;AACA,WAAKC,KAAL,GAAa,EAAb,CAV6B,CAY7B;;AACA,UAAIC,cAAc,GAAG,KAArB,CAb6B,CAe7B;;AACA,WAAKC,gBAAL,GAAwB,IAAIZ,KAAJ,CAAU;AAChCI,QAAAA,GAAG,EAAG,KAAKA,GADqB;AAEhC/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,WAFO;AAGhCQ,QAAAA,WAAW,EAAG,KAAKP,UAAL,GAAkB;AAHA,OAAV,CAAxB;AAMA,WAAKQ,cAAL,GAAsB,IAAId,KAAJ,CAAU;AAC9BI,QAAAA,GAAG,EAAG,KAAKA,GADmB;AAE9B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,SAFK;AAG9BQ,QAAAA,WAAW,EAAG;AAHgB,OAAV,CAAtB;AAMA,WAAKE,cAAL,GAAsB,IAAIf,KAAJ,CAAU;AAC9BI,QAAAA,GAAG,EAAG,KAAKA,GADmB;AAE9B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,SAFK;AAG9BQ,QAAAA,WAAW,EAAG,KAAKP,UAAL,GAAkB;AAHF,OAAV,CAAtB;AAMA,WAAKU,SAAL,GAAiB,IAAIhB,KAAJ,CAAU;AACzBI,QAAAA,GAAG,EAAG,KAAKA,GADc;AAEzB/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,OAFA;AAGzBQ,QAAAA,WAAW,EAAG,KAAKP,UAAL,GAAkB;AAHP,OAAV,CAAjB;AAMA,WAAKW,WAAL,GAAmB,IAAIjB,KAAJ,CAAU;AAC3BI,QAAAA,GAAG,EAAG,KAAKA,GADgB;AAE3B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,SAFE;AAG3BQ,QAAAA,WAAW,EAAG;AAHa,OAAV,CAAnB,CAxC6B,CA8C7B;;AACA,WAAKG,SAAL,CAAeE,SAAf;AACA,WAAKD,WAAL,CAAiBC,SAAjB,GAhD6B,CAkD7B;;AACA,UAAI,CAAC,KAAKV,UAAV,EAAsB;AACpB,aAAKM,cAAL,CAAoBK,SAApB,CAA8B,UAASC,aAAT,EAAwB;AACpDT,UAAAA,cAAc,GAAG,IAAjB;AACAS,UAAAA,aAAa,CAACC,WAAd,CAA0BhG,OAA1B,CAAkC,UAASiG,MAAT,EAAiB;AACjD,gBAAIC,IAAI,GAAGpB,IAAI,CAACO,KAAL,CAAWY,MAAM,CAACE,OAAP,CAAeC,EAA1B,CAAX;;AACA,gBAAIF,IAAJ,EAAU;AACRA,cAAAA,IAAI,CAACrJ,IAAL,CAAU,QAAV,EAAoBoJ,MAApB;AACD;AACF,WALD;AAMD,SARD;AASD,OA7D4B,CA+D7B;;;AACA,UAAI,CAAC,KAAKf,YAAV,EAAwB;AACtB,aAAKK,gBAAL,CAAsBO,SAAtB,CAAgC,UAASO,eAAT,EAA0B;AACxD,cAAIH,IAAI,GAAGpB,IAAI,CAACO,KAAL,CAAWgB,eAAe,CAACJ,MAAhB,CAAuBE,OAAvB,CAA+BC,EAA1C,CAAX;;AACA,cAAIF,IAAJ,EAAU;AACRA,YAAAA,IAAI,CAACrJ,IAAL,CAAU,QAAV,EAAoBwJ,eAAe,CAACJ,MAApC;AACAC,YAAAA,IAAI,CAACrJ,IAAL,CAAU,UAAV,EAAsBwJ,eAAe,CAACC,QAAtC;AACD;AACF,SAND;AAOD,OAxE4B,CA0E7B;;;AACA,UAAI,CAAC,KAAKlB,UAAV,EAAsB;AACpB,aAAKM,cAAL,CAAoBI,SAApB,CAA8B,UAASS,aAAT,EAAwB;AACpD,cAAIL,IAAI,GAAGpB,IAAI,CAACO,KAAL,CAAWkB,aAAa,CAACN,MAAd,CAAqBE,OAArB,CAA6BC,EAAxC,CAAX;;AAEA,cAAIF,IAAJ,EAAU;AACRA,YAAAA,IAAI,CAACrJ,IAAL,CAAU,QAAV,EAAoB0J,aAAa,CAACN,MAAlC;AACAC,YAAAA,IAAI,CAACrJ,IAAL,CAAU,QAAV,EAAoB0J,aAAa,CAACC,MAAlC;AACD;AACF,SAPD;AAQD,OApF4B,CAsF7B;;;AACA,UAAI,KAAK/E,OAAT,EAAkB;AAChBZ,QAAAA,UAAU,CAAC,YAAW;AACpB,cAAI,CAACyE,cAAL,EAAqB;AACnBR,YAAAA,IAAI,CAACjI,IAAL,CAAU,SAAV;AACD;AACF,SAJS,EAIP,KAAK4E,OAJE,CAAV;AAKD;AACF;;AAEDoD,IAAAA,YAAY,CAACjM,SAAb,CAAuB6N,SAAvB,GAAmCnM,aAAa,CAAC1B,SAAjD;AAEA;;;;AAGAiM,IAAAA,YAAY,CAACjM,SAAb,CAAuB8N,MAAvB,GAAgC,YAAW;AACzC,UAAIC,aAAa,GAAG,IAAI/B,OAAJ,EAApB;AACA,WAAKgB,WAAL,CAAiBgB,OAAjB,CAAyBD,aAAzB;AACD,KAHD;AAKA;;;;;AAGA9B,IAAAA,YAAY,CAACjM,SAAb,CAAuBiO,OAAvB,GAAiC,YAAW;AAC1C,WAAKlB,SAAL,CAAemB,WAAf;AACA,WAAKlB,WAAL,CAAiBkB,WAAjB;;AACA,UAAI,CAAC,KAAK3B,UAAV,EAAsB;AAAC,aAAKM,cAAL,CAAoBsB,WAApB;AAAmC;;AAC1D,UAAI,CAAC,KAAK7B,YAAV,EAAwB;AAAC,aAAKK,gBAAL,CAAsBwB,WAAtB;AAAqC;;AAC9D,UAAI,CAAC,KAAK3B,UAAV,EAAsB;AAAC,aAAKM,cAAL,CAAoBqB,WAApB;AAAmC;AAC3D,KAND;;AAQAtU,IAAAA,MAAM,CAACH,OAAP,GAAiBuS,YAAjB;AAEC,GAjJmB,EAiJlB;AAAC,uBAAkB,EAAnB;AAAsB,qBAAgB,EAAtC;AAAyC,qBAAgB;AAAzD,GAjJkB,CA9iDob;AA+rDzY,KAAE,CAAC,UAAS7S,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAClG;;;;;AAMA,QAAIqS,KAAK,GAAG3S,OAAO,CAAC,eAAD,CAAnB;;AACA,QAAI4S,OAAO,GAAG5S,OAAO,CAAC,iBAAD,CAArB;;AACA,QAAIsI,aAAa,GAAGtI,OAAO,CAAC,eAAD,CAAP,CAAyBsI,aAA7C;AAEA;;;;;;;;;;;;;;;;AAcA,aAAS0M,cAAT,CAAwBjE,OAAxB,EAAiC;AAC/B,UAAI+B,IAAI,GAAG,IAAX;AACA/B,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAKgC,GAAL,GAAWhC,OAAO,CAACgC,GAAnB;AACA,WAAKC,UAAL,GAAkBjC,OAAO,CAACiC,UAA1B;AACA,WAAKC,UAAL,GAAkBlC,OAAO,CAACkC,UAA1B;AACA,WAAKxD,OAAL,GAAesB,OAAO,CAACtB,OAAvB;AACA,WAAKyD,YAAL,GAAoBnC,OAAO,CAACmC,YAA5B;AACA,WAAKC,UAAL,GAAkBpC,OAAO,CAACoC,UAA1B;AACA,WAAKC,UAAL,GAAkBrC,OAAO,CAACqC,UAA1B,CAT+B,CAY/B;;AACA,UAAI6B,YAAY,GAAG,IAAItC,KAAJ,CAAU;AAC3BI,QAAAA,GAAG,EAAG,KAAKA,GADgB;AAE3B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,OAFE;AAG3BQ,QAAAA,WAAW,EAAG,KAAKP,UAAL,GAAkB;AAHL,OAAV,CAAnB;AAMA,UAAIM,gBAAgB,GAAG,IAAIZ,KAAJ,CAAU;AAC/BI,QAAAA,GAAG,EAAG,KAAKA,GADoB;AAE/B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,WAFM;AAG/BQ,QAAAA,WAAW,EAAG,KAAKP,UAAL,GAAkB;AAHD,OAAV,CAAvB;AAMA,UAAIQ,cAAc,GAAG,IAAId,KAAJ,CAAU;AAC7BI,QAAAA,GAAG,EAAG,KAAKA,GADkB;AAE7B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,SAFI;AAG7BQ,QAAAA,WAAW,EAAG;AAHe,OAAV,CAArB;AAMA,UAAIE,cAAc,GAAG,IAAIf,KAAJ,CAAU;AAC7BI,QAAAA,GAAG,EAAG,KAAKA,GADkB;AAE7B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,SAFI;AAG7BQ,QAAAA,WAAW,EAAG,KAAKP,UAAL,GAAkB;AAHH,OAAV,CAArB;AAMAgC,MAAAA,YAAY,CAACnB,SAAb,CAAuB,UAASoB,WAAT,EAAsB;AACzCpC,QAAAA,IAAI,CAACjI,IAAL,CAAU,MAAV,EAAkBqK,WAAlB;AACH,OAFD;AAIAzB,MAAAA,cAAc,CAACK,SAAf,CAAyB,UAASC,aAAT,EAAwB;AAC7CA,QAAAA,aAAa,CAACC,WAAd,CAA0BhG,OAA1B,CAAkC,UAASiG,MAAT,EAAiB;AAC/CnB,UAAAA,IAAI,CAACjI,IAAL,CAAU,QAAV,EAAoBoJ,MAApB;AACH,SAFD;AAGH,OAJD;AAMAV,MAAAA,gBAAgB,CAACO,SAAjB,CAA2B,UAASO,eAAT,EAA0B;AACjDvB,QAAAA,IAAI,CAACjI,IAAL,CAAU,QAAV,EAAoBwJ,eAAe,CAACJ,MAApC;AACAnB,QAAAA,IAAI,CAACjI,IAAL,CAAU,UAAV,EAAsBwJ,eAAe,CAACC,QAAtC;AACH,OAHD,EA/C+B,CAoD/B;;AACAZ,MAAAA,cAAc,CAACI,SAAf,CAAyB,UAASS,aAAT,EAAwB;AAC7CzB,QAAAA,IAAI,CAACjI,IAAL,CAAU,QAAV,EAAoB0J,aAAa,CAACN,MAAlC;AACAnB,QAAAA,IAAI,CAACjI,IAAL,CAAU,QAAV,EAAoB0J,aAAa,CAACC,MAAlC;AACH,OAHD;AAKD;;AAEDQ,IAAAA,cAAc,CAACpO,SAAf,CAAyB6N,SAAzB,GAAqCnM,aAAa,CAAC1B,SAAnD;AAEAnG,IAAAA,MAAM,CAACH,OAAP,GAAiB0U,cAAjB;AAEC,GAzFgE,EAyF/D;AAAC,uBAAkB,EAAnB;AAAsB,qBAAgB,EAAtC;AAAyC,qBAAgB;AAAzD,GAzF+D,CA/rDuY;AAwxDzY,MAAG,CAAC,UAAShV,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACnG;;;;AAKA,QAAIsS,OAAO,GAAG5S,OAAO,CAAC,iBAAD,CAArB;;AACA,QAAIsI,aAAa,GAAGtI,OAAO,CAAC,eAAD,CAAP,CAAyBsI,aAA7C;AAEA;;;;;;;;;;;;;AAWA,aAAS6M,IAAT,CAAcpE,OAAd,EAAuB;AACrB,UAAI+B,IAAI,GAAG,IAAX;AACA,WAAKsC,YAAL,GAAoBrE,OAAO,CAACqE,YAA5B;AACA,WAAKF,WAAL,GAAmBnE,OAAO,CAACmE,WAA3B;AACA,WAAKG,UAAL,GAAkB,KAAlB,CAJqB,CAMrB;;AACA,UAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX,CAPqB,CASrB;;AACA,WAAKC,MAAL,GAAc,UAAU3U,IAAI,CAACuQ,MAAL,EAAV,GAA0B,GAA1B,GAAgCkE,IAAI,CAACG,OAAL,EAA9C,CAVqB,CAWrB;;AACA,WAAKP,WAAL,GAAmB,IAAItC,OAAJ,CAAY;AAC7BuB,QAAAA,OAAO,EAAG;AACRuB,UAAAA,KAAK,EAAG;AACNC,YAAAA,IAAI,EAAG,CADD;AAENC,YAAAA,KAAK,EAAG;AAFF,WADA;AAKRxB,UAAAA,EAAE,EAAG,KAAKoB;AALF,SADmB;AAQ7BtB,QAAAA,IAAI,EAAG,KAAKgB;AARiB,OAAZ,CAAnB;AAWA,WAAKvJ,EAAL,CAAQ,QAAR,EAAkB,UAASsI,MAAT,EAAiB;AACjCnB,QAAAA,IAAI,CAACmB,MAAL,GAAcA,MAAd;AACD,OAFD;AAIA,WAAKtI,EAAL,CAAQ,QAAR,EAAkB,UAAS6I,MAAT,EAAiB;AACjC1B,QAAAA,IAAI,CAACuC,UAAL,GAAkB,IAAlB;AACAvC,QAAAA,IAAI,CAAC0B,MAAL,GAAcA,MAAd;AACD,OAHD;AAKA,WAAK7I,EAAL,CAAQ,UAAR,EAAoB,UAAS2I,QAAT,EAAmB;AACrCxB,QAAAA,IAAI,CAACwB,QAAL,GAAgBA,QAAhB;AACD,OAFD,EAhCqB,CAoCrB;;AACA,WAAKc,YAAL,CAAkB/B,KAAlB,CAAwB,KAAKmC,MAA7B,IAAuC,IAAvC;AACD;;AAEDL,IAAAA,IAAI,CAACvO,SAAL,CAAe6N,SAAf,GAA2BnM,aAAa,CAAC1B,SAAzC;AAEA;;;;;;AAKAuO,IAAAA,IAAI,CAACvO,SAAL,CAAeiP,IAAf,GAAsB,UAASpG,OAAT,EAAkB;AACtC,UAAIqD,IAAI,GAAG,IAAX;AACAA,MAAAA,IAAI,CAACsC,YAAL,CAAkBzB,SAAlB,CAA4BiB,OAA5B,CAAoC9B,IAAI,CAACoC,WAAzC;;AACA,UAAIzF,OAAJ,EAAa;AACXZ,QAAAA,UAAU,CAAC,YAAW;AACpB,cAAI,CAACiE,IAAI,CAACuC,UAAV,EAAsB;AACpBvC,YAAAA,IAAI,CAACjI,IAAL,CAAU,SAAV;AACD;AACF,SAJS,EAIP4E,OAJO,CAAV;AAKD;AACF,KAVD;AAYA;;;;;AAGA0F,IAAAA,IAAI,CAACvO,SAAL,CAAe8N,MAAf,GAAwB,YAAW;AACjC,UAAIC,aAAa,GAAG,IAAI/B,OAAJ,CAAY;AAC9BwB,QAAAA,EAAE,EAAG,KAAKoB;AADoB,OAAZ,CAApB;AAGA,WAAKJ,YAAL,CAAkBxB,WAAlB,CAA8BgB,OAA9B,CAAsCD,aAAtC;AACD,KALD;;AAOAlU,IAAAA,MAAM,CAACH,OAAP,GAAiB6U,IAAjB;AACC,GA1FiE,EA0FhE;AAAC,uBAAkB,EAAnB;AAAsB,qBAAgB;AAAtC,GA1FgE,CAxxDsY;AAk3D5Z,MAAG,CAAC,UAASnV,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAChF;;;;AAKA,QAAIqS,KAAK,GAAG3S,OAAO,CAAC,eAAD,CAAnB;;AACA,QAAI4S,OAAO,GAAG5S,OAAO,CAAC,iBAAD,CAArB;;AACA,QAAIsI,aAAa,GAAGtI,OAAO,CAAC,eAAD,CAAP,CAAyBsI,aAA7C;AAEA;;;;;;;;;;;;;;;AAcA,aAASwN,kBAAT,CAA4B/E,OAA5B,EAAqC;AACjC,UAAI+B,IAAI,GAAG,IAAX;AACA/B,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAKgC,GAAL,GAAWhC,OAAO,CAACgC,GAAnB;AACA,WAAKC,UAAL,GAAkBjC,OAAO,CAACiC,UAA1B;AACA,WAAKC,UAAL,GAAkBlC,OAAO,CAACkC,UAA1B,CALiC,CAOjC;;AACA,WAAK8C,iBAAL,GAAyB,IAAIpD,KAAJ,CAAU;AAC/BI,QAAAA,GAAG,EAAG,KAAKA,GADoB;AAE/B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,WAFM;AAG/BQ,QAAAA,WAAW,EAAG,KAAKP,UAAL,GAAkB;AAHD,OAAV,CAAzB;AAKA,WAAK8C,iBAAL,CAAuBlC,SAAvB;AAEA,UAAImC,eAAe,GAAG,IAAIrD,KAAJ,CAAU;AAC5BI,QAAAA,GAAG,EAAG,KAAKA,GADiB;AAE5B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,SAFG;AAG5BQ,QAAAA,WAAW,EAAG;AAHc,OAAV,CAAtB;AAKAwC,MAAAA,eAAe,CAACnC,SAAhB;AAEA,WAAKoC,eAAL,GAAuB,IAAItD,KAAJ,CAAU;AAC7BI,QAAAA,GAAG,EAAG,KAAKA,GADkB;AAE7B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,SAFI;AAG7BQ,QAAAA,WAAW,EAAG,KAAKP,UAAL,GAAkB;AAHH,OAAV,CAAvB;AAKA,WAAKgD,eAAL,CAAqBpC,SAArB,GA3BiC,CA6BjC;;AACA,UAAIoB,YAAY,GAAG,IAAItC,KAAJ,CAAU;AACzBI,QAAAA,GAAG,EAAG,KAAKA,GADc;AAEzB/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,OAFA;AAGzBQ,QAAAA,WAAW,EAAG,KAAKP,UAAL,GAAkB;AAHP,OAAV,CAAnB;AAMA,UAAIiD,cAAc,GAAG,IAAIvD,KAAJ,CAAU;AAC3BI,QAAAA,GAAG,EAAG,KAAKA,GADgB;AAE3B/K,QAAAA,IAAI,EAAG,KAAKgL,UAAL,GAAkB,SAFE;AAG3BQ,QAAAA,WAAW,EAAG;AAHa,OAAV,CAArB,CApCiC,CA0CjC;;AACA,WAAKO,aAAL,GAAqB,IAAInB,OAAJ,CAAY;AAC7BuD,QAAAA,MAAM,EAAG;AACLT,UAAAA,KAAK,EAAG;AAACC,YAAAA,IAAI,EAAG,CAAR;AAAWC,YAAAA,KAAK,EAAG;AAAnB,WADH;AAELQ,UAAAA,QAAQ,EAAG;AAFN,SADoB;AAK7BpC,QAAAA,WAAW,EAAG;AALe,OAAZ,CAArB,CA3CiC,CAmDjC;;AACA,WAAKqC,WAAL,GAAmB,IAAnB,CApDiC,CAoDR;;AACzB,WAAKC,QAAL,GAAgB,IAAhB,CArDiC,CAqDX;;AAEtBrB,MAAAA,YAAY,CAACnB,SAAb,CAAuB,UAASoB,WAAT,EAAsB;AAE7C,YAAGpC,IAAI,CAACuD,WAAR,EAAqB;AACbvD,UAAAA,IAAI,CAACwD,QAAL,GAAgBpB,WAAhB,CADa,CAEb;;AACApC,UAAAA,IAAI,CAACjI,IAAL,CAAU,QAAV;AACP,SAJD,MAIO;AACCiI,UAAAA,IAAI,CAACiB,aAAL,CAAmBC,WAAnB,GAAiC,CAAC;AAACG,YAAAA,OAAO,EAAGe,WAAW,CAACf,OAAvB;AAAgCF,YAAAA,MAAM,EAAG;AAAzC,WAAD,CAAjC;AACAnB,UAAAA,IAAI,CAACuD,WAAL,GAAmBnB,WAAnB;AACApC,UAAAA,IAAI,CAACjI,IAAL,CAAU,MAAV,EAAkBqK,WAAW,CAAChB,IAA9B;AACP;AACA,OAXD,EAvDiC,CAoEjC;AACA;;AACA,UAAIqC,SAAS,GAAG,SAAZA,SAAY,CAASC,EAAT,EAAaC,EAAb,EAAiB;AAC7B,YAAGD,EAAE,CAACb,IAAH,GAAUc,EAAE,CAACd,IAAhB,EAAsB;AAClB,iBAAO,KAAP;AACH,SAFD,MAEO,IAAGa,EAAE,CAACb,IAAH,GAAUc,EAAE,CAACd,IAAhB,EAAsB;AACzB,iBAAO,IAAP;AACH,SAFM,MAEA,IAAGa,EAAE,CAACZ,KAAH,GAAWa,EAAE,CAACb,KAAjB,EAAwB;AAC3B,iBAAO,IAAP;AACH,SAFM,MAEA;AACH,iBAAO,KAAP;AACH;AACJ,OAVD,CAtEiC,CAkFjC;AACA;AACA;AACA;;;AACAM,MAAAA,cAAc,CAACpC,SAAf,CAAyB,UAASa,aAAT,EAAwB;AAE7C;AACA,YAAGA,aAAa,CAACe,KAAd,CAAoBC,IAApB,KAA6B,CAA7B,IAAkChB,aAAa,CAACe,KAAd,CAAoBC,IAApB,KAA6B,CAA/D,IAAoEhB,aAAa,CAACP,EAAd,KAAqB,EAA5F,EAAgG;AAC5FtB,UAAAA,IAAI,CAACwD,QAAL,GAAgB,IAAhB;;AACA,cAAGxD,IAAI,CAACuD,WAAR,EAAqB;AACjBvD,YAAAA,IAAI,CAACjI,IAAL,CAAU,QAAV;AACH;AACJ,SALD,MAKO;AAAE;AACL,cAAGiI,IAAI,CAACuD,WAAL,IAAoB1B,aAAa,CAACP,EAAd,KAAqBtB,IAAI,CAACuD,WAAL,CAAiBlC,OAAjB,CAAyBC,EAArE,EAAyE;AACrEtB,YAAAA,IAAI,CAACjI,IAAL,CAAU,QAAV;AACH,WAFD,MAEO,IAAGiI,IAAI,CAACwD,QAAL,IAAiB3B,aAAa,CAACP,EAAd,KAAqBtB,IAAI,CAACwD,QAAL,CAAcnC,OAAd,CAAsBC,EAA/D,EAAmE;AACtEtB,YAAAA,IAAI,CAACwD,QAAL,GAAgB,IAAhB;AACH;;AAED,cAAGxD,IAAI,CAACwD,QAAL,IAAiBC,SAAS,CAACzD,IAAI,CAACwD,QAAL,CAAcnC,OAAd,CAAsBuB,KAAvB,EACCf,aAAa,CAACe,KADf,CAA7B,EACoD;AAChD5C,YAAAA,IAAI,CAACwD,QAAL,GAAgB,IAAhB;AACH;;AACD,cAAGxD,IAAI,CAACuD,WAAL,IAAoBE,SAAS,CAACzD,IAAI,CAACuD,WAAL,CAAiBlC,OAAjB,CAAyBuB,KAA1B,EACCf,aAAa,CAACe,KADf,CAAhC,EACuD;AAEnD5C,YAAAA,IAAI,CAACjI,IAAL,CAAU,QAAV;AACH;AACJ;AACJ,OAzBD,EAtFiC,CAiHjC;;AACA,UAAI6L,cAAc,GAAGC,WAAW,CAAE,YAAW;AACzC,YAAIC,WAAW,GAAG,IAAIrB,IAAJ,EAAlB;AACA,YAAII,IAAI,GAAG9U,IAAI,CAACmC,KAAL,CAAW4T,WAAW,CAACnB,OAAZ,KAAsB,IAAjC,CAAX;AACA,YAAIG,KAAK,GAAG/U,IAAI,CAACgW,KAAL,CAAW,cAAYD,WAAW,CAACnB,OAAZ,KAAsB,IAAtB,GAA2BE,IAAvC,CAAX,CAAZ;AACA7C,QAAAA,IAAI,CAACiB,aAAL,CAAmBoC,MAAnB,CAA0BT,KAA1B,CAAgCC,IAAhC,GAAuCA,IAAvC;AACA7C,QAAAA,IAAI,CAACiB,aAAL,CAAmBoC,MAAnB,CAA0BT,KAA1B,CAAgCE,KAAhC,GAAwCA,KAAxC;AACAI,QAAAA,eAAe,CAACpB,OAAhB,CAAwB9B,IAAI,CAACiB,aAA7B;AACH,OAP+B,EAO7B,GAP6B,CAAhC,CAlHiC,CAyHxB;AAEZ;;AAED+B,IAAAA,kBAAkB,CAAClP,SAAnB,CAA6B6N,SAA7B,GAAyCnM,aAAa,CAAC1B,SAAvD;AAEA;;;;AAIAkP,IAAAA,kBAAkB,CAAClP,SAAnB,CAA6BkQ,YAA7B,GAA4C,UAASC,OAAT,EAAkB;AAG1D,UAAIxC,aAAa,GAAG,IAAI3B,OAAJ,CAAY;AAC5BqB,QAAAA,MAAM,EAAG;AAACE,UAAAA,OAAO,EAAG,KAAKkC,WAAL,CAAiBlC,OAA5B;AAAqCF,UAAAA,MAAM,EAAG;AAA9C,SADmB;AAE5BO,QAAAA,MAAM,EAAGuC;AAFmB,OAAZ,CAApB;AAIA,WAAKd,eAAL,CAAqBrB,OAArB,CAA6BL,aAA7B;AAEA,WAAKR,aAAL,CAAmBC,WAAnB,GAAiC,EAAjC;;AACA,UAAG,KAAKsC,QAAR,EAAkB;AACd,aAAKD,WAAL,GAAmB,KAAKC,QAAxB;AACA,aAAKA,QAAL,GAAgB,IAAhB;AACA,aAAKzL,IAAL,CAAU,MAAV,EAAkB,KAAKwL,WAAL,CAAiBnC,IAAnC;AACH,OAJD,MAIO;AACH,aAAKmC,WAAL,GAAmB,IAAnB;AACH;AACJ,KAjBD;AAmBA;;;;;AAIAP,IAAAA,kBAAkB,CAAClP,SAAnB,CAA6BoQ,YAA7B,GAA4C,UAASC,SAAT,EAAoB;AAE5D,UAAI5C,eAAe,GAAG,IAAIzB,OAAJ,CAAY;AAC9BqB,QAAAA,MAAM,EAAG;AAACE,UAAAA,OAAO,EAAG,KAAKkC,WAAL,CAAiBlC,OAA5B;AAAqCF,UAAAA,MAAM,EAAG;AAA9C,SADqB;AAE9BK,QAAAA,QAAQ,EAAG2C;AAFmB,OAAZ,CAAtB;AAIA,WAAKlB,iBAAL,CAAuBnB,OAAvB,CAA+BP,eAA/B;AACH,KAPD;AASA;;;;;AAIAyB,IAAAA,kBAAkB,CAAClP,SAAnB,CAA6BsQ,YAA7B,GAA4C,YAAW;AAEnD,WAAKnD,aAAL,CAAmBC,WAAnB,GAAiC,EAAjC;AACA,UAAIO,aAAa,GAAG,IAAI3B,OAAJ,CAAY;AAC5BqB,QAAAA,MAAM,EAAG;AAACE,UAAAA,OAAO,EAAG,KAAKkC,WAAL,CAAiBlC,OAA5B;AAAqCF,UAAAA,MAAM,EAAG;AAA9C;AADmB,OAAZ,CAApB;AAGA,WAAKgC,eAAL,CAAqBrB,OAArB,CAA6BL,aAA7B;;AAEA,UAAG,KAAK+B,QAAR,EAAkB;AACd,aAAKD,WAAL,GAAmB,KAAKC,QAAxB;AACA,aAAKA,QAAL,GAAgB,IAAhB;AACA,aAAKzL,IAAL,CAAU,MAAV,EAAkB,KAAKwL,WAAL,CAAiBnC,IAAnC;AACH,OAJD,MAIO;AACH,aAAKmC,WAAL,GAAmB,IAAnB;AACH;AACJ,KAfD;;AAiBA5V,IAAAA,MAAM,CAACH,OAAP,GAAiBwV,kBAAjB;AACC,GAjN8C,EAiN7C;AAAC,uBAAkB,EAAnB;AAAsB,qBAAgB,EAAtC;AAAyC,qBAAgB;AAAzD,GAjN6C,CAl3DyZ;AAmkEzY,MAAG,CAAC,UAAS9V,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACnG,QAAI6W,GAAG,GAAGnX,OAAO,CAAC,aAAD,CAAjB;;AACA,QAAIoX,KAAK,GAAGpX,OAAO,CAAC,UAAD,CAAnB;;AAEA,QAAIqX,MAAM,GAAG5W,MAAM,CAACH,OAAP,GAAiB;AAC1BuS,MAAAA,YAAY,EAAE7S,OAAO,CAAC,gBAAD,CADK;AAE1BgV,MAAAA,cAAc,EAAEhV,OAAO,CAAC,kBAAD,CAFG;AAG1BmV,MAAAA,IAAI,EAAEnV,OAAO,CAAC,QAAD,CAHa;AAI1B8V,MAAAA,kBAAkB,EAAE9V,OAAO,CAAC,sBAAD;AAJD,KAA9B;AAOAoX,IAAAA,KAAK,CAACD,GAAD,EAAM,CAAC,cAAD,EAAiB,oBAAjB,CAAN,EAA8CE,MAA9C,CAAL;AAEC,GAbiE,EAahE;AAAC,mBAAc,EAAf;AAAkB,gBAAW,EAA7B;AAAgC,sBAAiB,CAAjD;AAAmD,wBAAmB,CAAtE;AAAwE,cAAS,EAAjF;AAAoF,4BAAuB;AAA3G,GAbgE,CAnkEsY;AAglEtV,MAAG,CAAC,UAASrX,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACtJ;;;;AAKA,QAAIkN,MAAM,GAAGxN,OAAO,CAAC,eAAD,CAApB;AAEA;;;;;;;;AAMA,aAAS4S,OAAT,CAAiB0E,MAAjB,EAAyB;AACvB9J,MAAAA,MAAM,CAAC,IAAD,EAAO8J,MAAP,CAAN;AACD;;AAED7W,IAAAA,MAAM,CAACH,OAAP,GAAiBsS,OAAjB;AACC,GAnBoH,EAmBnH;AAAC,qBAAgB;AAAjB,GAnBmH,CAhlEmV;AAmmEjb,MAAG,CAAC,UAAS5S,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC3D;;;;AAKA,QAAIiX,OAAO,GAAGvX,OAAO,CAAC,WAAD,CAArB;;AACA,QAAIwX,cAAc,GAAGxX,OAAO,CAAC,kBAAD,CAA5B;AAEA;;;;;;;;;;AAQA,aAASyX,KAAT,CAAe1G,OAAf,EAAwB;AACtBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAKgC,GAAL,GAAWhC,OAAO,CAACgC,GAAnB;AACA,WAAK/K,IAAL,GAAY+I,OAAO,CAAC/I,IAApB;AACD;AAED;;;;;;;;AAMAyP,IAAAA,KAAK,CAAC7Q,SAAN,CAAgB8Q,GAAhB,GAAsB,UAASC,QAAT,EAAmB;AACvC,UAAIC,WAAW,GAAG,IAAIL,OAAJ,CAAY;AAC5BxE,QAAAA,GAAG,EAAG,KAAKA,GADiB;AAE5B/K,QAAAA,IAAI,EAAG,mBAFqB;AAG5B6P,QAAAA,WAAW,EAAG;AAHc,OAAZ,CAAlB;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/BxP,QAAAA,IAAI,EAAG,KAAKA;AADmB,OAAnB,CAAd;AAIA4P,MAAAA,WAAW,CAACG,WAAZ,CAAwBD,OAAxB,EAAiC,UAAStD,MAAT,EAAiB;AAChD,YAAItT,KAAK,GAAG4P,IAAI,CAACkH,KAAL,CAAWxD,MAAM,CAACtT,KAAlB,CAAZ;AACAyW,QAAAA,QAAQ,CAACzW,KAAD,CAAR;AACD,OAHD;AAID,KAfD;AAiBA;;;;;;;AAKAuW,IAAAA,KAAK,CAAC7Q,SAAN,CAAgBZ,GAAhB,GAAsB,UAAS9E,KAAT,EAAgByW,QAAhB,EAA0B;AAC9C,UAAIC,WAAW,GAAG,IAAIL,OAAJ,CAAY;AAC5BxE,QAAAA,GAAG,EAAG,KAAKA,GADiB;AAE5B/K,QAAAA,IAAI,EAAG,mBAFqB;AAG5B6P,QAAAA,WAAW,EAAG;AAHc,OAAZ,CAAlB;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/BxP,QAAAA,IAAI,EAAG,KAAKA,IADmB;AAE/B9G,QAAAA,KAAK,EAAG4P,IAAI,CAACD,SAAL,CAAe3P,KAAf;AAFuB,OAAnB,CAAd;AAKA0W,MAAAA,WAAW,CAACG,WAAZ,CAAwBD,OAAxB,EAAiCH,QAAjC;AACD,KAbD;AAeA;;;;;AAGAF,IAAAA,KAAK,CAAC7Q,SAAN,CAAgBqR,MAAhB,GAAyB,UAASN,QAAT,EAAmB;AAC1C,UAAIC,WAAW,GAAG,IAAIL,OAAJ,CAAY;AAC5BxE,QAAAA,GAAG,EAAG,KAAKA,GADiB;AAE5B/K,QAAAA,IAAI,EAAG,sBAFqB;AAG5B6P,QAAAA,WAAW,EAAG;AAHc,OAAZ,CAAlB;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/BxP,QAAAA,IAAI,EAAG,KAAKA;AADmB,OAAnB,CAAd;AAIA4P,MAAAA,WAAW,CAACG,WAAZ,CAAwBD,OAAxB,EAAiCH,QAAjC;AACD,KAZD;;AAcAlX,IAAAA,MAAM,CAACH,OAAP,GAAiBmX,KAAjB;AACC,GApFyB,EAoFxB;AAAC,iBAAY,EAAb;AAAgB,wBAAmB;AAAnC,GApFwB,CAnmE8a;AAurE9Z,MAAG,CAAC,UAASzX,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC9E;;;;AAKA,QAAI4X,SAAS,GAAGlY,OAAO,CAAC,IAAD,CAAvB;;AACA,QAAImY,YAAY,GAAGnY,OAAO,CAAC,sBAAD,CAA1B;;AACA,QAAIoY,aAAa,GAAGpY,OAAO,CAAC,oBAAD,CAA3B;;AAEA,QAAIuX,OAAO,GAAGvX,OAAO,CAAC,WAAD,CAArB;;AACA,QAAIwX,cAAc,GAAGxX,OAAO,CAAC,kBAAD,CAA5B;;AAEA,QAAIwN,MAAM,GAAGxN,OAAO,CAAC,eAAD,CAApB;;AACA,QAAIsI,aAAa,GAAGtI,OAAO,CAAC,eAAD,CAAP,CAAyBsI,aAA7C;AAEA;;;;;;;;;;;;;;;;;;;AAiBA,aAAS6O,GAAT,CAAapG,OAAb,EAAsB;AACpBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAKsH,MAAL,GAAc,IAAd;AACA,WAAKC,SAAL,GAAiB,CAAjB;AACA,WAAKC,WAAL,GAAmB,KAAnB;AACA,WAAKC,gBAAL,GAAwBzH,OAAO,CAACyH,gBAAR,IAA4B,WAApD;AACA,WAAKC,gBAAL,GAAwB1H,OAAO,CAAC0H,gBAAR,IAA4B,EAApD;;AAEA,UAAI,OAAO1H,OAAO,CAAC2H,mBAAf,KAAuC,WAA3C,EAAwD;AACtD,aAAKA,mBAAL,GAA2B,IAA3B;AACD,OAFD,MAGK;AACH,aAAKA,mBAAL,GAA2B3H,OAAO,CAAC2H,mBAAnC;AACD,OAbmB,CAepB;;;AACA,WAAK7O,eAAL,CAAqB,CAArB,EAhBoB,CAkBpB;;AACA,UAAIkH,OAAO,CAAC4H,GAAZ,EAAiB;AACf,aAAKC,OAAL,CAAa7H,OAAO,CAAC4H,GAArB;AACD;AACF;;AAEDxB,IAAAA,GAAG,CAACvQ,SAAJ,CAAc6N,SAAd,GAA0BnM,aAAa,CAAC1B,SAAxC;AAEA;;;;;;AAKAuQ,IAAAA,GAAG,CAACvQ,SAAJ,CAAcgS,OAAd,GAAwB,UAASD,GAAT,EAAc;AACpC,UAAI,KAAKH,gBAAL,KAA0B,WAA9B,EAA2C;AACzC,aAAKH,MAAL,GAAc7K,MAAM,CAACqL,EAAE,CAACF,GAAD,EAAM;AAAC,kCAAwB;AAAzB,SAAN,CAAH,EAA0CP,aAAa,CAAC,IAAD,CAAvD,CAApB;AACA,aAAKC,MAAL,CAAY1M,EAAZ,CAAe,SAAf,EAA0B,KAAK0M,MAAL,CAAYS,MAAtC;AACA,aAAKT,MAAL,CAAY1M,EAAZ,CAAe,MAAf,EAAuB,KAAK0M,MAAL,CAAYU,SAAnC;AACA,aAAKV,MAAL,CAAY1M,EAAZ,CAAe,OAAf,EAAwB,KAAK0M,MAAL,CAAYW,OAApC;AACA,aAAKX,MAAL,CAAY1M,EAAZ,CAAe,OAAf,EAAwB,KAAK0M,MAAL,CAAYY,OAApC;AACD,OAND,MAMO,IAAI,KAAKT,gBAAL,CAAsBU,WAAtB,CAAkClR,IAAlC,KAA2C,mBAA/C,EAAoE;AACzE,aAAKqQ,MAAL,GAAc7K,MAAM,CAAC,KAAKgL,gBAAL,CAAsBW,iBAAtB,CAAwCR,GAAxC,EAA6C,KAAKF,gBAAlD,CAAD,EAAsEL,aAAa,CAAC,IAAD,CAAnF,CAApB;AACD,OAFM,MAEA,IAAI,KAAKI,gBAAL,KAA0B,WAA9B,EAA2C;AAChD,YAAI,CAAC,KAAKH,MAAN,IAAgB,KAAKA,MAAL,CAAYe,UAAZ,KAA2BlB,SAAS,CAACmB,MAAzD,EAAiE;AAC/D,cAAIC,IAAI,GAAG,IAAIpB,SAAJ,CAAcS,GAAd,CAAX;AACAW,UAAAA,IAAI,CAACC,UAAL,GAAkB,aAAlB;AACA,eAAKlB,MAAL,GAAc7K,MAAM,CAAC8L,IAAD,EAAOlB,aAAa,CAAC,IAAD,CAApB,CAApB;AACD;AACF,OANM,MAMA,IAAI,KAAKI,gBAAL,KAA0B,cAA9B,EAA8C;AACnD,aAAKH,MAAL,GAAc7K,MAAM,CAAC,IAAI2K,YAAJ,CAAiBQ,GAAjB,CAAD,EAAwBP,aAAa,CAAC,IAAD,CAArC,CAApB;AACD,OAFM,MAEA;AACL,cAAM,+BAA+B,KAAKI,gBAAL,CAAsB3R,QAAtB,EAArC;AACD;AAEF,KArBD;AAuBA;;;;;AAGAsQ,IAAAA,GAAG,CAACvQ,SAAJ,CAAc4S,KAAd,GAAsB,YAAW;AAC/B,UAAI,KAAKnB,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYmB,KAAZ;AACD;AACF,KAJD;AAMA;;;;;;;;;;;;;AAWArC,IAAAA,GAAG,CAACvQ,SAAJ,CAAc6S,YAAd,GAA6B,UAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCla,CAAlC,EAAqCma,KAArC,EAA4CC,GAA5C,EAAiD;AAC5E;AACA,UAAIC,IAAI,GAAG;AACTC,QAAAA,EAAE,EAAG,MADI;AAETP,QAAAA,GAAG,EAAGA,GAFG;AAGTC,QAAAA,MAAM,EAAGA,MAHA;AAITC,QAAAA,IAAI,EAAGA,IAJE;AAKTC,QAAAA,IAAI,EAAGA,IALE;AAMTla,QAAAA,CAAC,EAAGA,CANK;AAOTma,QAAAA,KAAK,EAAGA,KAPC;AAQTC,QAAAA,GAAG,EAAGA;AARG,OAAX,CAF4E,CAY5E;;AACA,WAAKG,gBAAL,CAAsBF,IAAtB;AACD,KAdD;AAgBA;;;;;;AAIA7C,IAAAA,GAAG,CAACvQ,SAAJ,CAAcsT,gBAAd,GAAiC,UAASC,OAAT,EAAkB;AACjD,UAAIrH,IAAI,GAAG,IAAX;AACA,UAAIsH,WAAW,GAAGtJ,IAAI,CAACD,SAAL,CAAesJ,OAAf,CAAlB;AACA,UAAIlS,OAAO,GAAG,IAAd;;AACA,UAAI,KAAKuQ,gBAAL,KAA0B,WAA9B,EAA2C;AACzCvQ,QAAAA,OAAO,GAAG,iBAASoS,GAAT,EAAa;AAACvH,UAAAA,IAAI,CAACuF,MAAL,CAAYxN,IAAZ,CAAiB,WAAjB,EAA8BwP,GAA9B;AAAoC,SAA5D;AACD,OAFD,MAEO;AACLpS,QAAAA,OAAO,GAAG,iBAASoS,GAAT,EAAa;AAACvH,UAAAA,IAAI,CAACuF,MAAL,CAAYxC,IAAZ,CAAiBwE,GAAjB;AAAuB,SAA/C;AACD;;AAED,UAAI,CAAC,KAAK9B,WAAV,EAAuB;AACrBzF,QAAAA,IAAI,CAAC/I,IAAL,CAAU,YAAV,EAAwB,YAAW;AACjC9B,UAAAA,OAAO,CAACmS,WAAD,CAAP;AACD,SAFD;AAGD,OAJD,MAIO;AACLnS,QAAAA,OAAO,CAACmS,WAAD,CAAP;AACD;AACF,KAjBD;AAmBA;;;;;;;;AAMAjD,IAAAA,GAAG,CAACvQ,SAAJ,CAAc0T,cAAd,GAA+B,UAASR,KAAT,EAAgB1F,EAAhB,EAAmB;AAChD,UAAImG,QAAQ,GAAG;AACbN,QAAAA,EAAE,EAAE,WADS;AAEbH,QAAAA,KAAK,EAAEA,KAFM;AAGb1F,QAAAA,EAAE,EAAEA;AAHS,OAAf;AAMA,WAAK8F,gBAAL,CAAsBK,QAAtB;AACD,KARD;AAUA;;;;;;;;;;AAQApD,IAAAA,GAAG,CAACvQ,SAAJ,CAAc4T,gBAAd,GAAiC,UAAS7C,QAAT,EAAmB8C,cAAnB,EAAmC;AAClE,UAAID,gBAAgB,GAAG,IAAIjD,OAAJ,CAAY;AACjCxE,QAAAA,GAAG,EAAG,IAD2B;AAEjC/K,QAAAA,IAAI,EAAG,wBAF0B;AAGjC6P,QAAAA,WAAW,EAAG;AAHmB,OAAZ,CAAvB;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB,EAAnB,CAAd;;AACA,UAAI,OAAOiD,cAAP,KAA0B,UAA9B,EAAyC;AACvCD,QAAAA,gBAAgB,CAACzC,WAAjB,CAA6BD,OAA7B,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAM,CAACkG,cAAR,CAAR;AACD,SAHH,EAIE,UAASP,OAAT,EAAiB;AACfM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHK,QAAAA,gBAAgB,CAACzC,WAAjB,CAA6BD,OAA7B,EAAsC,UAAStD,MAAT,EAAiB;AACrDmD,UAAAA,QAAQ,CAACnD,MAAM,CAACkG,cAAR,CAAR;AACD,SAFD;AAGD;AACF,KAtBD;AAwBA;;;;;;;;;;;AASAvD,IAAAA,GAAG,CAACvQ,SAAJ,CAAc+T,SAAd,GAA0B,UAAShD,QAAT,EAAmB8C,cAAnB,EAAmC;AAC3D,UAAIG,YAAY,GAAG,IAAIrD,OAAJ,CAAY;AAC7BxE,QAAAA,GAAG,EAAG,IADuB;AAE7B/K,QAAAA,IAAI,EAAG,gBAFsB;AAG7B6P,QAAAA,WAAW,EAAG;AAHe,OAAZ,CAAnB;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,EAAd;;AACA,UAAI,OAAOiD,cAAP,KAA0B,UAA9B,EAAyC;AACvCG,QAAAA,YAAY,CAAC7C,WAAb,CAAyBD,OAAzB,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAD,CAAR;AACD,SAHH,EAIE,UAAS2F,OAAT,EAAiB;AACfM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHS,QAAAA,YAAY,CAAC7C,WAAb,CAAyBD,OAAzB,EAAkC,UAAStD,MAAT,EAAiB;AACjDmD,UAAAA,QAAQ,CAACnD,MAAD,CAAR;AACD,SAFD;AAGD;AACF,KAtBD;AAwBA;;;;;;;;;;;AASA2C,IAAAA,GAAG,CAACvQ,SAAJ,CAAciU,gBAAd,GAAiC,UAASC,SAAT,EAAoBnD,QAApB,EAA8B8C,cAA9B,EAA8C;AAC7E,UAAIM,mBAAmB,GAAG,IAAIxD,OAAJ,CAAY;AACpCxE,QAAAA,GAAG,EAAG,IAD8B;AAEpC/K,QAAAA,IAAI,EAAG,yBAF6B;AAGpC6P,QAAAA,WAAW,EAAG;AAHsB,OAAZ,CAA1B;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/B1U,QAAAA,IAAI,EAAEgY;AADyB,OAAnB,CAAd;;AAGA,UAAI,OAAOL,cAAP,KAA0B,UAA9B,EAAyC;AACvCM,QAAAA,mBAAmB,CAAChD,WAApB,CAAgCD,OAAhC,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAM,CAACwG,MAAR,CAAR;AACD,SAHH,EAIE,UAASb,OAAT,EAAiB;AACfM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHY,QAAAA,mBAAmB,CAAChD,WAApB,CAAgCD,OAAhC,EAAyC,UAAStD,MAAT,EAAiB;AACxDmD,UAAAA,QAAQ,CAACnD,MAAM,CAACwG,MAAR,CAAR;AACD,SAFD;AAGD;AACF,KAxBD;AA0BA;;;;;;;;;;AAQA7D,IAAAA,GAAG,CAACvQ,SAAJ,CAAcqU,WAAd,GAA4B,UAAStD,QAAT,EAAmB8C,cAAnB,EAAmC;AAC7D,UAAIS,cAAc,GAAG,IAAI3D,OAAJ,CAAY;AAC/BxE,QAAAA,GAAG,EAAG,IADyB;AAE/B/K,QAAAA,IAAI,EAAG,kBAFwB;AAG/B6P,QAAAA,WAAW,EAAG;AAHiB,OAAZ,CAArB;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,EAAd;;AACA,UAAI,OAAOiD,cAAP,KAA0B,UAA9B,EAAyC;AACvCS,QAAAA,cAAc,CAACnD,WAAf,CAA2BD,OAA3B,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAM,CAAC2G,QAAR,CAAR;AACD,SAHH,EAIE,UAAShB,OAAT,EAAkB;AAChBM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHe,QAAAA,cAAc,CAACnD,WAAf,CAA2BD,OAA3B,EAAoC,UAAStD,MAAT,EAAiB;AACnDmD,UAAAA,QAAQ,CAACnD,MAAM,CAAC2G,QAAR,CAAR;AACD,SAFD;AAGD;AACF,KAtBD;AAwBA;;;;;;;;;;;AASAhE,IAAAA,GAAG,CAACvQ,SAAJ,CAAcwU,kBAAd,GAAmC,UAASvD,WAAT,EAAsBF,QAAtB,EAAgC8C,cAAhC,EAAgD;AACjF,UAAIY,qBAAqB,GAAG,IAAI9D,OAAJ,CAAY;AACtCxE,QAAAA,GAAG,EAAG,IADgC;AAEtC/K,QAAAA,IAAI,EAAG,2BAF+B;AAGtC6P,QAAAA,WAAW,EAAG;AAHwB,OAAZ,CAA5B;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/B1U,QAAAA,IAAI,EAAE+U;AADyB,OAAnB,CAAd;;AAGA,UAAI,OAAO4C,cAAP,KAA0B,UAA9B,EAAyC;AACvCY,QAAAA,qBAAqB,CAACtD,WAAtB,CAAkCD,OAAlC,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAM,CAAC2G,QAAR,CAAR;AACD,SAHH,EAIE,UAAShB,OAAT,EAAkB;AAChBM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHkB,QAAAA,qBAAqB,CAACtD,WAAtB,CAAkCD,OAAlC,EAA2C,UAAStD,MAAT,EAAiB;AAC1DmD,UAAAA,QAAQ,CAACnD,MAAM,CAAC2G,QAAR,CAAR;AACD,SAFD;AAGD;AACF,KAxBD;AA0BA;;;;;;;;;;;AASAhE,IAAAA,GAAG,CAACvQ,SAAJ,CAAc0U,wBAAd,GAAyC,UAASxY,IAAT,EAAe6U,QAAf,EAAyB8C,cAAzB,EAAyC;AAChF,UAAIc,iBAAiB,GAAG,IAAIhE,OAAJ,CAAY;AAClCxE,QAAAA,GAAG,EAAG,IAD4B;AAElC/K,QAAAA,IAAI,EAAG,iCAF2B;AAGlC6P,QAAAA,WAAW,EAAG;AAHoB,OAAZ,CAAxB;AAKA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/B1U,QAAAA,IAAI,EAAEA;AADyB,OAAnB,CAAd;;AAIA,UAAI,OAAO2X,cAAP,KAA0B,UAA9B,EAAyC;AACvCc,QAAAA,iBAAiB,CAACxD,WAAlB,CAA8BD,OAA9B,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAD,CAAR;AACD,SAHH,EAIE,UAAS2F,OAAT,EAAiB;AACfM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHoB,QAAAA,iBAAiB,CAACxD,WAAlB,CAA8BD,OAA9B,EAAuC,UAAStD,MAAT,EAAiB;AACtDmD,UAAAA,QAAQ,CAACnD,MAAD,CAAR;AACD,SAFD;AAGD;AACF,KAxBD;AA0BA;;;;;;;;;;;AASA2C,IAAAA,GAAG,CAACvQ,SAAJ,CAAc4U,yBAAd,GAA0C,UAAS1Y,IAAT,EAAe6U,QAAf,EAAyB8C,cAAzB,EAAyC;AACjF,UAAIc,iBAAiB,GAAG,IAAIhE,OAAJ,CAAY;AAClCxE,QAAAA,GAAG,EAAG,IAD4B;AAElC/K,QAAAA,IAAI,EAAG,kCAF2B;AAGlC6P,QAAAA,WAAW,EAAG;AAHoB,OAAZ,CAAxB;AAKA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/B1U,QAAAA,IAAI,EAAEA;AADyB,OAAnB,CAAd;;AAIA,UAAI,OAAO2X,cAAP,KAA0B,UAA9B,EAAyC;AACvCc,QAAAA,iBAAiB,CAACxD,WAAlB,CAA8BD,OAA9B,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAD,CAAR;AACD,SAHH,EAIE,UAAS2F,OAAT,EAAiB;AACfM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHoB,QAAAA,iBAAiB,CAACxD,WAAlB,CAA8BD,OAA9B,EAAuC,UAAStD,MAAT,EAAiB;AACtDmD,UAAAA,QAAQ,CAACnD,MAAD,CAAR;AACD,SAFD;AAGD;AACF,KAxBD;AA0BA;;;;;;;;;;AAQA2C,IAAAA,GAAG,CAACvQ,SAAJ,CAAc6U,QAAd,GAAyB,UAAS9D,QAAT,EAAmB8C,cAAnB,EAAmC;AAC1D,UAAIiB,WAAW,GAAG,IAAInE,OAAJ,CAAY;AAC5BxE,QAAAA,GAAG,EAAG,IADsB;AAE5B/K,QAAAA,IAAI,EAAG,eAFqB;AAG5B6P,QAAAA,WAAW,EAAG;AAHc,OAAZ,CAAlB;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,EAAd;;AACA,UAAI,OAAOiD,cAAP,KAA0B,UAA9B,EAAyC;AACvCiB,QAAAA,WAAW,CAAC3D,WAAZ,CAAwBD,OAAxB,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAM,CAACmH,KAAR,CAAR;AACD,SAHH,EAIE,UAASxB,OAAT,EAAkB;AAChBM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHuB,QAAAA,WAAW,CAAC3D,WAAZ,CAAwBD,OAAxB,EAAiC,UAAStD,MAAT,EAAiB;AAChDmD,UAAAA,QAAQ,CAACnD,MAAM,CAACmH,KAAR,CAAR;AACD,SAFD;AAGD;AACF,KAtBD;AAwBA;;;;;;;;;;;;;AAWAxE,IAAAA,GAAG,CAACvQ,SAAJ,CAAcgV,cAAd,GAA+B,UAASC,IAAT,EAAelE,QAAf,EAAyB8C,cAAzB,EAAyC;AACtE,UAAIiB,WAAW,GAAG,IAAInE,OAAJ,CAAY;AAC5BxE,QAAAA,GAAG,EAAG,IADsB;AAE5B/K,QAAAA,IAAI,EAAG,sBAFqB;AAG5B6P,QAAAA,WAAW,EAAG;AAHc,OAAZ,CAAlB;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/BqE,QAAAA,IAAI,EAAEA;AADyB,OAAnB,CAAd;;AAGA,UAAI,OAAOpB,cAAP,KAA0B,UAA9B,EAAyC;AACvCiB,QAAAA,WAAW,CAAC3D,WAAZ,CAAwBD,OAAxB,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAM,CAACsH,WAAR,EAAqBtH,MAAM,CAACuH,UAA5B,EAAwCvH,MAAM,CAAC2G,QAA/C,CAAR;AACD,SAHH,EAIE,UAAShB,OAAT,EAAkB;AAChBM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASO;AACLuB,QAAAA,WAAW,CAAC3D,WAAZ,CAAwBD,OAAxB,EAAiC,UAAStD,MAAT,EAAiB;AAChDmD,UAAAA,QAAQ,CAACnD,MAAD,CAAR;AACD,SAFD;AAGD;AACF,KAxBD;AA0BA;;;;;;;;;;AAQA2C,IAAAA,GAAG,CAACvQ,SAAJ,CAAcoV,SAAd,GAA0B,UAASrE,QAAT,EAAmB8C,cAAnB,EAAmC;AAC3D,UAAIwB,YAAY,GAAG,IAAI1E,OAAJ,CAAY;AAC7BxE,QAAAA,GAAG,EAAG,IADuB;AAE7B/K,QAAAA,IAAI,EAAG,yBAFsB;AAG7B6P,QAAAA,WAAW,EAAG;AAHe,OAAZ,CAAnB;AAKA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,EAAd;;AACA,UAAI,OAAOiD,cAAP,KAA0B,UAA9B,EAAyC;AACvCwB,QAAAA,YAAY,CAAClE,WAAb,CAAyBD,OAAzB,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAM,CAAC0H,KAAR,CAAR;AACD,SAHH,EAIE,UAAS/B,OAAT,EAAiB;AACfM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACH8B,QAAAA,YAAY,CAAClE,WAAb,CAAyBD,OAAzB,EAAkC,UAAStD,MAAT,EAAiB;AACjDmD,UAAAA,QAAQ,CAACnD,MAAM,CAAC0H,KAAR,CAAR;AACD,SAFD;AAGD;AACF,KArBD;AAuBA;;;;;;;;;;;AASA/E,IAAAA,GAAG,CAACvQ,SAAJ,CAAcuV,YAAd,GAA6B,UAASC,KAAT,EAAgBzE,QAAhB,EAA0B8C,cAA1B,EAA0C;AACrE,UAAI4B,eAAe,GAAG,IAAI9E,OAAJ,CAAY;AAChCxE,QAAAA,GAAG,EAAG,IAD0B;AAEhC/K,QAAAA,IAAI,EAAG,oBAFyB;AAGhC6P,QAAAA,WAAW,EAAG;AAHkB,OAAZ,CAAtB;AAKA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/B4E,QAAAA,KAAK,EAAEA;AADwB,OAAnB,CAAd;;AAIA,UAAI,OAAO3B,cAAP,KAA0B,UAA9B,EAAyC;AACvC4B,QAAAA,eAAe,CAACtE,WAAhB,CAA4BD,OAA5B,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAM,CAAC1R,IAAR,CAAR;AACD,SAHH,EAIE,UAASqX,OAAT,EAAiB;AACfM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHkC,QAAAA,eAAe,CAACtE,WAAhB,CAA4BD,OAA5B,EAAqC,UAAStD,MAAT,EAAiB;AACpDmD,UAAAA,QAAQ,CAACnD,MAAM,CAAC1R,IAAR,CAAR;AACD,SAFD;AAGD;AACF,KAxBD;AA0BA;;;;;;;;;;;AASAqU,IAAAA,GAAG,CAACvQ,SAAJ,CAAc0V,cAAd,GAA+B,UAASC,OAAT,EAAkB5E,QAAlB,EAA4B8C,cAA5B,EAA4C;AACzE,UAAIc,iBAAiB,GAAG,IAAIhE,OAAJ,CAAY;AAClCxE,QAAAA,GAAG,EAAG,IAD4B;AAElC/K,QAAAA,IAAI,EAAG,sBAF2B;AAGlC6P,QAAAA,WAAW,EAAG;AAHoB,OAAZ,CAAxB;AAKA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/B+E,QAAAA,OAAO,EAAEA;AADsB,OAAnB,CAAd;;AAIA,UAAI,OAAO9B,cAAP,KAA0B,UAA9B,EAAyC;AACvCc,QAAAA,iBAAiB,CAACxD,WAAlB,CAA8BD,OAA9B,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAM,CAAC1R,IAAR,CAAR;AACD,SAHH,EAIE,UAASqX,OAAT,EAAiB;AACfM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHoB,QAAAA,iBAAiB,CAACxD,WAAlB,CAA8BD,OAA9B,EAAuC,UAAStD,MAAT,EAAiB;AACtDmD,UAAAA,QAAQ,CAACnD,MAAM,CAAC1R,IAAR,CAAR;AACD,SAFD;AAGD;AACF,KAxBD;AA0BA;;;;;;;;;;;AASAqU,IAAAA,GAAG,CAACvQ,SAAJ,CAAc4V,iBAAd,GAAkC,UAASrC,OAAT,EAAkBxC,QAAlB,EAA4B8C,cAA5B,EAA4C;AAC5E,UAAIgC,mBAAmB,GAAG,IAAIlF,OAAJ,CAAY;AACpCxE,QAAAA,GAAG,EAAG,IAD8B;AAEpC/K,QAAAA,IAAI,EAAG,yBAF6B;AAGpC6P,QAAAA,WAAW,EAAG;AAHsB,OAAZ,CAA1B;AAKA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,CAAmB;AAC/B1U,QAAAA,IAAI,EAAEqX;AADyB,OAAnB,CAAd;;AAIA,UAAI,OAAOM,cAAP,KAA0B,UAA9B,EAAyC;AACvCgC,QAAAA,mBAAmB,CAAC1E,WAApB,CAAgCD,OAAhC,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAM,CAACkI,QAAR,CAAR;AACD,SAHH,EAIE,UAASvC,OAAT,EAAiB;AACfM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHsC,QAAAA,mBAAmB,CAAC1E,WAApB,CAAgCD,OAAhC,EAAyC,UAAStD,MAAT,EAAiB;AACxDmD,UAAAA,QAAQ,CAACnD,MAAM,CAACkI,QAAR,CAAR;AACD,SAFD;AAGD;AACF,KAxBD;AA0BA;;;;;;;AAKAvF,IAAAA,GAAG,CAACvQ,SAAJ,CAAc+V,cAAd,GAA+B,UAASC,IAAT,EAAe;AAC5C,UAAI9J,IAAI,GAAG,IAAX,CAD4C,CAG5C;;AACA,UAAI+J,iBAAiB,GAAG,SAApBA,iBAAoB,CAASC,OAAT,EAAkBC,KAAlB,EAAyB;AAC/C,YAAIC,WAAW,GAAG,EAAlB;;AACA,aAAK,IAAInd,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGid,OAAO,CAACG,UAAR,CAAmBzc,MAAvC,EAA+CX,CAAC,EAAhD,EAAoD;AAClD,cAAIqd,QAAQ,GAAGJ,OAAO,CAACK,aAAR,CAAsBtd,CAAtB,CAAf;AACA,cAAIud,SAAS,GAAGN,OAAO,CAACG,UAAR,CAAmBpd,CAAnB,CAAhB;AACA,cAAIwd,SAAS,GAAGP,OAAO,CAACQ,UAAR,CAAmBzd,CAAnB,CAAhB;;AACA,cAAIwd,SAAS,CAACE,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAAhC,EAAmC;AAAE;AACnC,gBAAIL,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnBF,cAAAA,WAAW,CAACI,SAAD,CAAX,GAAyBC,SAAzB;AACD,aAFD,MAGK;AACHL,cAAAA,WAAW,CAACI,SAAD,CAAX,GAAyB,CAACC,SAAD,CAAzB;AACD;AACF,WAPD,MAQK;AACH;AACA,gBAAIG,GAAG,GAAG,KAAV;;AACA,iBAAK,IAAIvS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8R,KAAK,CAACvc,MAA1B,EAAkCyK,CAAC,EAAnC,EAAuC;AACrC,kBAAI8R,KAAK,CAAC9R,CAAD,CAAL,CAASnI,IAAT,CAAc+D,QAAd,OAA6BwW,SAAS,CAACxW,QAAV,EAAjC,EAAuD;AACrD2W,gBAAAA,GAAG,GAAGT,KAAK,CAAC9R,CAAD,CAAX;AACA;AACD;AACF;;AACD,gBAAIuS,GAAJ,EAAS;AACP,kBAAIC,SAAS,GAAGZ,iBAAiB,CAACW,GAAD,EAAMT,KAAN,CAAjC;;AACA,kBAAIG,QAAQ,KAAK,CAAC,CAAlB,EAAqB,CACpB,CADD,MAEK;AACHF,gBAAAA,WAAW,CAACI,SAAD,CAAX,GAAyB,CAACK,SAAD,CAAzB;AACD;AACF,aAPD,MAQK;AACH3K,cAAAA,IAAI,CAACjI,IAAL,CAAU,OAAV,EAAmB,iBAAiBwS,SAAjB,GAA6B,oBAAhD;AACD;AACF;AACF;;AACD,eAAOL,WAAP;AACD,OArCD;;AAuCA,aAAOH,iBAAiB,CAACD,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAV,CAAxB;AACD,KA5CD;AA8CA;;;;;;;;;;;;;AAWAzF,IAAAA,GAAG,CAACvQ,SAAJ,CAAc8W,oBAAd,GAAqC,UAAS/F,QAAT,EAAmB8C,cAAnB,EAAmC;AACtE,UAAIkD,uBAAuB,GAAG,IAAIpG,OAAJ,CAAY;AACxCxE,QAAAA,GAAG,EAAG,IADkC;AAExC/K,QAAAA,IAAI,EAAG,8BAFiC;AAGxC6P,QAAAA,WAAW,EAAG;AAH0B,OAAZ,CAA9B;AAMA,UAAIC,OAAO,GAAG,IAAIN,cAAJ,EAAd;;AACA,UAAI,OAAOiD,cAAP,KAA0B,UAA9B,EAAyC;AACvCkD,QAAAA,uBAAuB,CAAC5F,WAAxB,CAAoCD,OAApC,EACE,UAAStD,MAAT,EAAiB;AACfmD,UAAAA,QAAQ,CAACnD,MAAD,CAAR;AACD,SAHH,EAIE,UAAS2F,OAAT,EAAiB;AACfM,UAAAA,cAAc,CAACN,OAAD,CAAd;AACD,SANH;AAQD,OATD,MASK;AACHwD,QAAAA,uBAAuB,CAAC5F,WAAxB,CAAoCD,OAApC,EAA6C,UAAStD,MAAT,EAAiB;AAC5DmD,UAAAA,QAAQ,CAACnD,MAAD,CAAR;AACD,SAFD;AAGD;AACF,KAtBD;;AAyBA/T,IAAAA,MAAM,CAACH,OAAP,GAAiB6W,GAAjB;AAEC,GArrB4C,EAqrB3C;AAAC,4BAAuB,EAAxB;AAA2B,iBAAY,EAAvC;AAA0C,wBAAmB,EAA7D;AAAgE,0BAAqB,EAArF;AAAwF,qBAAgB,CAAxG;AAA0G,qBAAgB,CAA1H;AAA4H,UAAK;AAAjI,GArrB2C,CAvrE2Z;AA42FhU,MAAG,CAAC,UAASnX,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC5K;;;;AAKA,QAAIsd,eAAe,GAAG5d,OAAO,CAAC,mBAAD,CAA7B;;AACA,QAAIwX,cAAc,GAAGxX,OAAO,CAAC,kBAAD,CAA5B;;AACA,QAAIsI,aAAa,GAAGtI,OAAO,CAAC,eAAD,CAAP,CAAyBsI,aAA7C;AAEA;;;;;;;;;;;AASA,aAASiP,OAAT,CAAiBxG,OAAjB,EAA0B;AACxBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAKgC,GAAL,GAAWhC,OAAO,CAACgC,GAAnB;AACA,WAAK/K,IAAL,GAAY+I,OAAO,CAAC/I,IAApB;AACA,WAAK6P,WAAL,GAAmB9G,OAAO,CAAC8G,WAA3B;AACA,WAAKgG,YAAL,GAAoB,KAApB;AAEA,WAAKC,gBAAL,GAAwB,IAAxB;AACD;;AACDvG,IAAAA,OAAO,CAAC3Q,SAAR,CAAkB6N,SAAlB,GAA8BnM,aAAa,CAAC1B,SAA5C;AACA;;;;;;;;;;;AAUA2Q,IAAAA,OAAO,CAAC3Q,SAAR,CAAkBmR,WAAlB,GAAgC,UAASD,OAAT,EAAkBH,QAAlB,EAA4B8C,cAA5B,EAA4C;AAC1E,UAAI,KAAKoD,YAAT,EAAuB;AACrB;AACD;;AAED,UAAIE,aAAa,GAAG,kBAAkB,KAAK/V,IAAvB,GAA8B,GAA9B,GAAqC,EAAE,KAAK+K,GAAL,CAASuF,SAApE;;AAEA,UAAIX,QAAQ,IAAI8C,cAAhB,EAAgC;AAC9B,aAAK1H,GAAL,CAAShJ,IAAT,CAAcgU,aAAd,EAA6B,UAAS5D,OAAT,EAAkB;AAC7C,cAAIA,OAAO,CAAC3F,MAAR,KAAmB7T,SAAnB,IAAgCwZ,OAAO,CAAC3F,MAAR,KAAmB,KAAvD,EAA8D;AAC5D,gBAAI,OAAOiG,cAAP,KAA0B,UAA9B,EAA0C;AACxCA,cAAAA,cAAc,CAACN,OAAO,CAAC7C,MAAT,CAAd;AACD;AACF,WAJD,MAIO,IAAI,OAAOK,QAAP,KAAoB,UAAxB,EAAoC;AACzCA,YAAAA,QAAQ,CAAC,IAAIiG,eAAJ,CAAoBzD,OAAO,CAAC7C,MAA5B,CAAD,CAAR;AACD;AACF,SARD;AASD;;AAED,UAAI/W,IAAI,GAAG;AACT0Z,QAAAA,EAAE,EAAG,cADI;AAET7F,QAAAA,EAAE,EAAG2J,aAFI;AAGTxB,QAAAA,OAAO,EAAG,KAAKvU,IAHN;AAITlF,QAAAA,IAAI,EAAE,KAAK+U,WAJF;AAKT9M,QAAAA,IAAI,EAAG+M;AALE,OAAX;AAOA,WAAK/E,GAAL,CAASmH,gBAAT,CAA0B3Z,IAA1B;AACD,KA3BD;AA6BA;;;;;;;;;;;;;AAWAgX,IAAAA,OAAO,CAAC3Q,SAAR,CAAkBiN,SAAlB,GAA8B,UAAS8D,QAAT,EAAmB;AAC/C,UAAI,KAAKkG,YAAL,IAAqB,OAAOlG,QAAP,KAAoB,UAA7C,EAAyD;AACvD;AACD;;AAED,WAAKmG,gBAAL,GAAwBnG,QAAxB;AACA,WAAK5E,GAAL,CAASpH,EAAT,CAAY,KAAK3D,IAAjB,EAAuB,KAAKgW,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAvB;AACA,WAAKlL,GAAL,CAASmH,gBAAT,CAA0B;AACxBD,QAAAA,EAAE,EAAE,mBADoB;AAExBnX,QAAAA,IAAI,EAAE,KAAK+U,WAFa;AAGxB0E,QAAAA,OAAO,EAAE,KAAKvU;AAHU,OAA1B;AAKA,WAAK6V,YAAL,GAAoB,IAApB;AACD,KAbD;;AAeAtG,IAAAA,OAAO,CAAC3Q,SAAR,CAAkBkO,WAAlB,GAAgC,YAAW;AACzC,UAAI,CAAC,KAAK+I,YAAV,EAAwB;AACtB;AACD;;AACD,WAAK9K,GAAL,CAASmH,gBAAT,CAA0B;AACxBD,QAAAA,EAAE,EAAE,qBADoB;AAExBsC,QAAAA,OAAO,EAAE,KAAKvU;AAFU,OAA1B;AAIA,WAAK6V,YAAL,GAAoB,KAApB;AACD,KATD;;AAWAtG,IAAAA,OAAO,CAAC3Q,SAAR,CAAkBoX,gBAAlB,GAAqC,UAASE,gBAAT,EAA2B;AAC9D,UAAIC,QAAQ,GAAG,EAAf;;AACA,UAAIC,OAAO,GAAG,KAAKN,gBAAL,CAAsBI,gBAAgB,CAACnT,IAAvC,EAA6CoT,QAA7C,CAAd;;AAEA,UAAI5d,IAAI,GAAG;AACT0Z,QAAAA,EAAE,EAAE,kBADK;AAETsC,QAAAA,OAAO,EAAE,KAAKvU,IAFL;AAGTsP,QAAAA,MAAM,EAAE,IAAIsG,eAAJ,CAAoBO,QAApB,CAHC;AAIT3J,QAAAA,MAAM,EAAE4J;AAJC,OAAX;;AAOA,UAAIF,gBAAgB,CAAC9J,EAArB,EAAyB;AACvB7T,QAAAA,IAAI,CAAC6T,EAAL,GAAU8J,gBAAgB,CAAC9J,EAA3B;AACD;;AAED,WAAKrB,GAAL,CAASmH,gBAAT,CAA0B3Z,IAA1B;AACD,KAhBD;;AAkBAE,IAAAA,MAAM,CAACH,OAAP,GAAiBiX,OAAjB;AAEC,GA7H0I,EA6HzI;AAAC,wBAAmB,EAApB;AAAuB,yBAAoB,EAA3C;AAA8C,qBAAgB;AAA9D,GA7HyI,CA52F6T;AAy+FpY,MAAG,CAAC,UAASvX,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACxG;;;;AAKA,QAAIkN,MAAM,GAAGxN,OAAO,CAAC,eAAD,CAApB;AAEA;;;;;;;;AAMA,aAASwX,cAAT,CAAwBF,MAAxB,EAAgC;AAC9B9J,MAAAA,MAAM,CAAC,IAAD,EAAO8J,MAAP,CAAN;AACD;;AAED7W,IAAAA,MAAM,CAACH,OAAP,GAAiBkX,cAAjB;AACC,GAnBsE,EAmBrE;AAAC,qBAAgB;AAAjB,GAnBqE,CAz+FiY;AA4/Fjb,MAAG,CAAC,UAASxX,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC3D;;;;AAKA,QAAIkN,MAAM,GAAGxN,OAAO,CAAC,eAAD,CAApB;AAEA;;;;;;;;AAMA,aAAS4d,eAAT,CAAyBtG,MAAzB,EAAiC;AAC/B9J,MAAAA,MAAM,CAAC,IAAD,EAAO8J,MAAP,CAAN;AACD;;AAED7W,IAAAA,MAAM,CAACH,OAAP,GAAiBsd,eAAjB;AACC,GAnByB,EAmBxB;AAAC,qBAAgB;AAAjB,GAnBwB,CA5/F8a;AA+gGjb,MAAG,CAAC,UAAS5d,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC3D;;;;;;;;AAQA;;AAEA,QAAI+d,aAAa,GAAGre,OAAO,CAAC,uBAAD,CAA3B;;AACA,QAAIyG,IAAI,GAAGzG,OAAO,CAAC,SAAD,CAAlB;;AACA,QAAIse,gBAAgB,GAAGte,OAAO,CAAC,4BAAD,CAA9B;;AACA,QAAIue,IAAI,GAAG,IAAX;;AACA,QAAG,OAAOC,IAAP,KAAgB,WAAnB,EAA+B;AAC3BD,MAAAA,IAAI,GAAGC,IAAI,GAAGD,IAAd;AACH;AAED;;;;;;;;;;AAQA,aAASE,aAAT,CAAuB9E,MAAvB,EAA+B;AAC7B,eAAS+E,aAAT,CAAuBvE,OAAvB,EAAgC;AAC9B,YAAIA,OAAO,CAACF,EAAR,KAAe,SAAnB,EAA8B;AAC5BN,UAAAA,MAAM,CAAC9O,IAAP,CAAYsP,OAAO,CAACiC,KAApB,EAA2BjC,OAAO,CAACE,GAAnC;AACD,SAFD,MAEO,IAAIF,OAAO,CAACF,EAAR,KAAe,kBAAnB,EAAuC;AAC5CN,UAAAA,MAAM,CAAC9O,IAAP,CAAYsP,OAAO,CAAC/F,EAApB,EAAwB+F,OAAxB;AACD,SAFM,MAEA,IAAIA,OAAO,CAACF,EAAR,KAAe,cAAnB,EAAmC;AACxCN,UAAAA,MAAM,CAAC9O,IAAP,CAAYsP,OAAO,CAACoC,OAApB,EAA6BpC,OAA7B;AACD,SAFM,MAEA,IAAGA,OAAO,CAACF,EAAR,KAAe,QAAlB,EAA2B;AAChC,cAAGE,OAAO,CAAC/F,EAAX,EAAc;AACZuF,YAAAA,MAAM,CAAC9O,IAAP,CAAY,YAAUsP,OAAO,CAAC/F,EAA9B,EAAkC+F,OAAlC;AACD,WAFD,MAEO;AACLR,YAAAA,MAAM,CAAC9O,IAAP,CAAY,QAAZ,EAAsBsP,OAAtB;AACD;AACF;AACF;;AAED,eAASwE,SAAT,CAAmBxE,OAAnB,EAA4BxC,QAA5B,EAAsC;AACpC,YAAIwC,OAAO,CAACF,EAAR,KAAe,KAAnB,EAA0B;AACxBoE,UAAAA,aAAa,CAAClE,OAAO,CAAChZ,IAAT,EAAewW,QAAf,CAAb;AACD,SAFD,MAEO;AACLA,UAAAA,QAAQ,CAACwC,OAAD,CAAR;AACD;AACF;;AAED,eAASyE,UAAT,CAAoBzd,IAApB,EAA0BwW,QAA1B,EAAoC;AAClC,YAAI,CAAC4G,IAAL,EAAW;AACT,gBAAM,0DAAN;AACD;;AACD,YAAIM,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAiB,YAAW;AAC1B,cAAIC,UAAU,GAAG,IAAIzb,UAAJ,CAAe,KAAKiR,MAApB,CAAjB;AACA,cAAI6F,GAAG,GAAGkE,IAAI,CAACU,WAAL,CAAiBD,UAAjB,CAAV;AACArH,UAAAA,QAAQ,CAAC0C,GAAD,CAAR;AACD,SAJD;;AAKAwE,QAAAA,MAAM,CAACK,iBAAP,CAAyB/d,IAAzB;AACD;;AAED,aAAO;AACL;;;;;;AAMA2X,QAAAA,MAAM,EAAE,SAASqG,MAAT,CAAgBrV,KAAhB,EAAuB;AAC7B6P,UAAAA,MAAM,CAACpB,WAAP,GAAqB,IAArB;AACAoB,UAAAA,MAAM,CAAC9O,IAAP,CAAY,YAAZ,EAA0Bf,KAA1B;AACD,SAVI;;AAYL;;;;;;AAMAkP,QAAAA,OAAO,EAAE,SAASoG,OAAT,CAAiBtV,KAAjB,EAAwB;AAC/B6P,UAAAA,MAAM,CAACpB,WAAP,GAAqB,KAArB;AACAoB,UAAAA,MAAM,CAAC9O,IAAP,CAAY,OAAZ,EAAqBf,KAArB;AACD,SArBI;;AAuBL;;;;;;AAMAmP,QAAAA,OAAO,EAAE,SAASoG,OAAT,CAAiBvV,KAAjB,EAAwB;AAC/B6P,UAAAA,MAAM,CAAC9O,IAAP,CAAY,OAAZ,EAAqBf,KAArB;AACD,SA/BI;;AAiCL;;;;;;;AAOAiP,QAAAA,SAAS,EAAE,SAASuG,SAAT,CAAmBne,IAAnB,EAAyB;AAClC,cAAI,OAAO+Q,IAAP,KAAgB,WAAhB,IAA+B/Q,IAAI,CAACA,IAAL,YAAqB+Q,IAAxD,EAA8D;AAC5D0M,YAAAA,UAAU,CAACzd,IAAI,CAACA,IAAN,EAAY,UAAUgZ,OAAV,EAAmB;AACvCwE,cAAAA,SAAS,CAACxE,OAAD,EAAUuE,aAAV,CAAT;AACD,aAFS,CAAV;AAGD,WAJD,MAIO,IAAIvd,IAAI,CAACA,IAAL,YAAqBC,WAAzB,EAAsC;AAC3C,gBAAIme,OAAO,GAAG9Y,IAAI,CAAC1C,MAAL,CAAY5C,IAAI,CAACA,IAAjB,EAAuBmd,gBAAvB,CAAd;AACAI,YAAAA,aAAa,CAACa,OAAD,CAAb;AACD,WAHM,MAGA;AACL,gBAAIpF,OAAO,GAAGrJ,IAAI,CAACkH,KAAL,CAAW,OAAO7W,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACA,IAAlD,CAAd;AACAwd,YAAAA,SAAS,CAACxE,OAAD,EAAUuE,aAAV,CAAT;AACD;AACF;AApDI,OAAP;AAsDD;;AAEDje,IAAAA,MAAM,CAACH,OAAP,GAAiBme,aAAjB;AAEC,GA3HyB,EA2HxB;AAAC,kCAA6B,EAA9B;AAAiC,6BAAwB,EAAzD;AAA4D,eAAU;AAAtE,GA3HwB,CA/gG8a;AA0oG5X,MAAG,CAAC,UAASze,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAChH;;;;AAKA,QAAIgI,aAAa,GAAGtI,OAAO,CAAC,eAAD,CAAP,CAAyBsI,aAA7C;;AACA,QAAIsK,OAAO,GAAG5S,OAAO,CAAC,WAAD,CAArB;AAEA;;;;;;;;;;;;;;;;;;;;;AAmBA,aAAS2S,KAAT,CAAe5B,OAAf,EAAwB;AACtBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAKgC,GAAL,GAAWhC,OAAO,CAACgC,GAAnB;AACA,WAAK/K,IAAL,GAAY+I,OAAO,CAAC/I,IAApB;AACA,WAAKwL,WAAL,GAAmBzC,OAAO,CAACyC,WAA3B;AACA,WAAKqK,YAAL,GAAoB,KAApB;AACA,WAAK2B,WAAL,GAAmBzO,OAAO,CAACyO,WAAR,IAAuB,MAA1C;AACA,WAAKC,aAAL,GAAqB1O,OAAO,CAAC0O,aAAR,IAAyB,CAA9C;AACA,WAAKC,KAAL,GAAa3O,OAAO,CAAC2O,KAAR,IAAiB,KAA9B;AACA,WAAKC,UAAL,GAAkB5O,OAAO,CAAC4O,UAAR,IAAsB,GAAxC;AACA,WAAKC,YAAL,GAAoB7O,OAAO,CAAC6O,YAAR,IAAwB,CAA5C;AACA,WAAKC,kBAAL,GAA0B9O,OAAO,CAAC8O,kBAAR,KAA+Blf,SAA/B,GAA2CoQ,OAAO,CAAC8O,kBAAnD,GAAwE,IAAlG,CAXsB,CAatB;;AACA,UAAI,KAAKL,WAAL,IAAoB,KAAKA,WAAL,KAAqB,KAAzC,IACF,KAAKA,WAAL,KAAqB,MADnB,IAC6B,KAAKA,WAAL,KAAqB,UADlD,IAEF,KAAKA,WAAL,KAAqB,MAFvB,EAE+B;AAC7B,aAAK3U,IAAL,CAAU,SAAV,EAAqB,KAAK2U,WAAL,GACnB,6DADF;AAEA,aAAKA,WAAL,GAAmB,MAAnB;AACD,OApBqB,CAsBtB;;;AACA,UAAI,KAAKC,aAAL,GAAqB,CAAzB,EAA4B;AAC1B,aAAK5U,IAAL,CAAU,SAAV,EAAqB,KAAK4U,aAAL,GAAqB,2BAA1C;AACA,aAAKA,aAAL,GAAqB,CAArB;AACD;;AAED,UAAI3M,IAAI,GAAG,IAAX;;AACA,UAAI,KAAK+M,kBAAT,EAA6B;AAC3B,aAAKC,4BAAL,GAAoC,UAAS3F,OAAT,EAAkB;AACpDrH,UAAAA,IAAI,CAACC,GAAL,CAASmH,gBAAT,CAA0BC,OAA1B;AAEArH,UAAAA,IAAI,CAACiN,gBAAL,GAAwB,KAAxB;;AACAjN,UAAAA,IAAI,CAACkN,aAAL,GAAqB,YAAW;AAC9B,gBAAG,CAAClN,IAAI,CAACiN,gBAAT,EAA2B;AACzBjN,cAAAA,IAAI,CAACiN,gBAAL,GAAwB,IAAxB;AACAjN,cAAAA,IAAI,CAACC,GAAL,CAASmH,gBAAT,CAA0BC,OAA1B;AACArH,cAAAA,IAAI,CAACC,GAAL,CAAShJ,IAAT,CAAc,YAAd,EAA4B,YAAW;AACrC+I,gBAAAA,IAAI,CAACiN,gBAAL,GAAwB,KAAxB;AACD,eAFD;AAGD;AACF,WARD;;AASAjN,UAAAA,IAAI,CAACC,GAAL,CAASpH,EAAT,CAAY,OAAZ,EAAqBmH,IAAI,CAACkN,aAA1B;AACD,SAdD;AAeD,OAhBD,MAiBK;AACH,aAAKF,4BAAL,GAAoC,KAAK/M,GAAL,CAASmH,gBAA7C;AACD;;AAED,WAAK+F,gBAAL,GAAwB,UAAS9e,IAAT,EAAe;AACrC2R,QAAAA,IAAI,CAACjI,IAAL,CAAU,SAAV,EAAqB,IAAI+H,OAAJ,CAAYzR,IAAZ,CAArB;AACD,OAFD;AAGD;;AACDwR,IAAAA,KAAK,CAAC/L,SAAN,CAAgB6N,SAAhB,GAA4BnM,aAAa,CAAC1B,SAA1C;AAEA;;;;;;;;AAOA+L,IAAAA,KAAK,CAAC/L,SAAN,CAAgBkN,SAAhB,GAA4B,UAAS6D,QAAT,EAAmB;AAC7C,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,aAAKhM,EAAL,CAAQ,SAAR,EAAmBgM,QAAnB;AACD;;AAED,UAAI,KAAKuI,WAAT,EAAsB;AAAE;AAAS;;AACjC,WAAKnN,GAAL,CAASpH,EAAT,CAAY,KAAK3D,IAAjB,EAAuB,KAAKiY,gBAA5B;AACA,WAAKC,WAAL,GAAmB,eAAe,KAAKlY,IAApB,GAA2B,GAA3B,GAAkC,EAAE,KAAK+K,GAAL,CAASuF,SAAhE;AAEA,WAAKwH,4BAAL,CAAkC;AAChC7F,QAAAA,EAAE,EAAE,WAD4B;AAEhC7F,QAAAA,EAAE,EAAE,KAAK8L,WAFuB;AAGhCpd,QAAAA,IAAI,EAAE,KAAK0Q,WAHqB;AAIhC4I,QAAAA,KAAK,EAAE,KAAKpU,IAJoB;AAKhCwX,QAAAA,WAAW,EAAE,KAAKA,WALc;AAMhCC,QAAAA,aAAa,EAAE,KAAKA,aANY;AAOhCG,QAAAA,YAAY,EAAE,KAAKA;AAPa,OAAlC;AASD,KAlBD;AAoBA;;;;;;;;;;;AASAjN,IAAAA,KAAK,CAAC/L,SAAN,CAAgBmO,WAAhB,GAA8B,UAAS4C,QAAT,EAAmB;AAC/C,UAAIA,QAAJ,EAAc;AACZ,aAAKlN,GAAL,CAAS,SAAT,EAAoBkN,QAApB,EADY,CAEZ;;AACA,YAAI,KAAKjP,SAAL,CAAe,SAAf,EAA0BlI,MAA9B,EAAsC;AAAE;AAAS;AAClD;;AACD,UAAI,CAAC,KAAK0f,WAAV,EAAuB;AAAE;AAAS,OANa,CAO/C;;;AACA,WAAKnN,GAAL,CAAStI,GAAT,CAAa,KAAKzC,IAAlB,EAAwB,KAAKiY,gBAA7B;;AACA,UAAG,KAAKJ,kBAAR,EAA4B;AAC1B,aAAK9M,GAAL,CAAStI,GAAT,CAAa,OAAb,EAAsB,KAAKuV,aAA3B;AACD;;AACD,WAAKnV,IAAL,CAAU,aAAV;AACA,WAAKkI,GAAL,CAASmH,gBAAT,CAA0B;AACxBD,QAAAA,EAAE,EAAE,aADoB;AAExB7F,QAAAA,EAAE,EAAE,KAAK8L,WAFe;AAGxB9D,QAAAA,KAAK,EAAE,KAAKpU;AAHY,OAA1B;AAKA,WAAKkY,WAAL,GAAmB,IAAnB;AACD,KAnBD;AAsBA;;;;;AAGAvN,IAAAA,KAAK,CAAC/L,SAAN,CAAgBiN,SAAhB,GAA4B,YAAW;AACrC,UAAI,KAAKgK,YAAT,EAAuB;AACrB;AACD;;AACD,WAAKsC,WAAL,GAAmB,eAAe,KAAKnY,IAApB,GAA2B,GAA3B,GAAkC,EAAE,KAAK+K,GAAL,CAASuF,SAAhE;AACA,WAAKwH,4BAAL,CAAkC;AAChC7F,QAAAA,EAAE,EAAE,WAD4B;AAEhC7F,QAAAA,EAAE,EAAE,KAAK+L,WAFuB;AAGhCrd,QAAAA,IAAI,EAAE,KAAK0Q,WAHqB;AAIhC4I,QAAAA,KAAK,EAAE,KAAKpU,IAJoB;AAKhC0X,QAAAA,KAAK,EAAE,KAAKA,KALoB;AAMhCC,QAAAA,UAAU,EAAE,KAAKA;AANe,OAAlC;AAQA,WAAK9B,YAAL,GAAoB,IAApB;;AAEA,UAAG,CAAC,KAAKgC,kBAAT,EAA6B;AAC3B,YAAI/M,IAAI,GAAG,IAAX;AACA,aAAKC,GAAL,CAASpH,EAAT,CAAY,OAAZ,EAAqB,YAAW;AAC9BmH,UAAAA,IAAI,CAAC+K,YAAL,GAAoB,KAApB;AACD,SAFD;AAGD;AACF,KArBD;AAuBA;;;;;AAGAlL,IAAAA,KAAK,CAAC/L,SAAN,CAAgBkO,WAAhB,GAA8B,YAAW;AACvC,UAAI,CAAC,KAAK+I,YAAV,EAAwB;AACtB;AACD;;AACD,UAAG,KAAKgC,kBAAR,EAA4B;AAC1B,aAAK9M,GAAL,CAAStI,GAAT,CAAa,OAAb,EAAsB,KAAKuV,aAA3B;AACD;;AACD,WAAKnV,IAAL,CAAU,aAAV;AACA,WAAKkI,GAAL,CAASmH,gBAAT,CAA0B;AACxBD,QAAAA,EAAE,EAAE,aADoB;AAExB7F,QAAAA,EAAE,EAAE,KAAK+L,WAFe;AAGxB/D,QAAAA,KAAK,EAAE,KAAKpU;AAHY,OAA1B;AAKA,WAAK6V,YAAL,GAAoB,KAApB;AACD,KAdD;AAgBA;;;;;;;AAKAlL,IAAAA,KAAK,CAAC/L,SAAN,CAAgBgO,OAAhB,GAA0B,UAASuF,OAAT,EAAkB;AAC1C,UAAI,CAAC,KAAK0D,YAAV,EAAwB;AACtB,aAAKhK,SAAL;AACD;;AAED,WAAKd,GAAL,CAASuF,SAAT;AACA,UAAI/X,IAAI,GAAG;AACT0Z,QAAAA,EAAE,EAAE,SADK;AAET7F,QAAAA,EAAE,EAAE,aAAa,KAAKpM,IAAlB,GAAyB,GAAzB,GAA+B,KAAK+K,GAAL,CAASuF,SAFnC;AAGT8D,QAAAA,KAAK,EAAE,KAAKpU,IAHH;AAITqS,QAAAA,GAAG,EAAEF,OAJI;AAKTuF,QAAAA,KAAK,EAAE,KAAKA;AALH,OAAX;AAOA,WAAK3M,GAAL,CAASmH,gBAAT,CAA0B3Z,IAA1B;AACD,KAdD;;AAgBAE,IAAAA,MAAM,CAACH,OAAP,GAAiBqS,KAAjB;AAEC,GAlN8E,EAkN7E;AAAC,iBAAY,EAAb;AAAgB,qBAAgB;AAAhC,GAlN6E,CA1oGyX;AA41Gla,MAAG,CAAC,UAAS3S,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1E,QAAI8W,KAAK,GAAGpX,OAAO,CAAC,UAAD,CAAnB;;AAEA,QAAIogB,IAAI,GAAG3f,MAAM,CAACH,OAAP,GAAiB;AACxB6W,MAAAA,GAAG,EAAEnX,OAAO,CAAC,OAAD,CADY;AAExB2S,MAAAA,KAAK,EAAE3S,OAAO,CAAC,SAAD,CAFU;AAGxB4S,MAAAA,OAAO,EAAE5S,OAAO,CAAC,WAAD,CAHQ;AAIxByX,MAAAA,KAAK,EAAEzX,OAAO,CAAC,SAAD,CAJU;AAKxBuX,MAAAA,OAAO,EAAEvX,OAAO,CAAC,WAAD,CALQ;AAMxBwX,MAAAA,cAAc,EAAExX,OAAO,CAAC,kBAAD,CANC;AAOxB4d,MAAAA,eAAe,EAAE5d,OAAO,CAAC,mBAAD;AAPA,KAA5B;AAUAoX,IAAAA,KAAK,CAACgJ,IAAI,CAACjJ,GAAN,EAAW,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,CAAX,EAA0CiJ,IAA1C,CAAL;AAEC,GAfwC,EAevC;AAAC,gBAAW,EAAZ;AAAe,iBAAY,EAA3B;AAA8B,eAAU,EAAxC;AAA2C,aAAQ,EAAnD;AAAsD,iBAAY,EAAlE;AAAqE,wBAAmB,EAAxF;AAA2F,yBAAoB,EAA/G;AAAkH,eAAU;AAA5H,GAfuC,CA51G+Z;AA22GrU,MAAG,CAAC,UAASpgB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACvK;;;;AAKA,QAAI+f,OAAO,GAAGrgB,OAAO,CAAC,WAAD,CAArB;;AACA,QAAIsgB,UAAU,GAAGtgB,OAAO,CAAC,cAAD,CAAxB;AAEA;;;;;;;;;;AAQA,aAASugB,IAAT,CAAcxP,OAAd,EAAuB;AACrBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB,CADqB,CAErB;;AACA,WAAK3E,QAAL,GAAgB,IAAIiU,OAAJ,CAAYtP,OAAO,CAAC3E,QAApB,CAAhB;AACA,WAAKoU,WAAL,GAAmB,IAAIF,UAAJ,CAAevP,OAAO,CAACyP,WAAvB,CAAnB;AACD;AAED;;;;;;;AAKAD,IAAAA,IAAI,CAAC3Z,SAAL,CAAe6Z,cAAf,GAAgC,UAASC,EAAT,EAAa;AAC3C,WAAKtU,QAAL,CAAcuU,kBAAd,CAAiCD,EAAE,CAACE,QAApC;AACA,WAAKxU,QAAL,CAAcyU,GAAd,CAAkBH,EAAE,CAACI,WAArB;AACA,UAAIC,GAAG,GAAGL,EAAE,CAACE,QAAH,CAAYI,KAAZ,EAAV;AACAD,MAAAA,GAAG,CAACE,QAAJ,CAAa,KAAKT,WAAlB;AACA,WAAKA,WAAL,GAAmBO,GAAnB;AACD,KAND;AAQA;;;;;;;AAKAR,IAAAA,IAAI,CAAC3Z,SAAL,CAAeoa,KAAf,GAAuB,YAAW;AAChC,aAAO,IAAIT,IAAJ,CAAS,IAAT,CAAP;AACD,KAFD;AAIA;;;;;;;AAKAA,IAAAA,IAAI,CAAC3Z,SAAL,CAAeqa,QAAf,GAA0B,UAASC,IAAT,EAAe;AACvC,UAAI7gB,CAAC,GAAG6gB,IAAI,CAACF,KAAL,EAAR;AACA3gB,MAAAA,CAAC,CAACogB,cAAF,CAAiB;AAAEG,QAAAA,QAAQ,EAAE,KAAKJ,WAAjB;AAA8BM,QAAAA,WAAW,EAAE,KAAK1U;AAAhD,OAAjB;AACA,aAAO/L,CAAP;AACD,KAJD;AAMA;;;;;;;AAKAkgB,IAAAA,IAAI,CAAC3Z,SAAL,CAAeua,UAAf,GAA4B,YAAW;AACrC,UAAIC,OAAO,GAAG,KAAKJ,KAAL,EAAd;AACAI,MAAAA,OAAO,CAACZ,WAAR,CAAoBa,MAApB;AACAD,MAAAA,OAAO,CAAChV,QAAR,CAAiBuU,kBAAjB,CAAoCS,OAAO,CAACZ,WAA5C;AACAY,MAAAA,OAAO,CAAChV,QAAR,CAAiBkV,CAAjB,IAAsB,CAAC,CAAvB;AACAF,MAAAA,OAAO,CAAChV,QAAR,CAAiBmV,CAAjB,IAAsB,CAAC,CAAvB;AACAH,MAAAA,OAAO,CAAChV,QAAR,CAAiBoV,CAAjB,IAAsB,CAAC,CAAvB;AACA,aAAOJ,OAAP;AACD,KARD;;AAUA3gB,IAAAA,MAAM,CAACH,OAAP,GAAiBigB,IAAjB;AACC,GAzEqI,EAyEpI;AAAC,oBAAe,EAAhB;AAAmB,iBAAY;AAA/B,GAzEoI,CA32GkU;AAo7Gla,MAAG,CAAC,UAASvgB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1E;;;;;AAKA;;;;;;;;;;AAUA,aAASggB,UAAT,CAAoBvP,OAApB,EAA6B;AAC3BA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAKuQ,CAAL,GAASvQ,OAAO,CAACuQ,CAAR,IAAa,CAAtB;AACA,WAAKC,CAAL,GAASxQ,OAAO,CAACwQ,CAAR,IAAa,CAAtB;AACA,WAAKC,CAAL,GAASzQ,OAAO,CAACyQ,CAAR,IAAa,CAAtB;AACA,WAAKC,CAAL,GAAU,OAAO1Q,OAAO,CAAC0Q,CAAf,KAAqB,QAAtB,GAAkC1Q,OAAO,CAAC0Q,CAA1C,GAA8C,CAAvD;AACD;AAED;;;;;AAGAnB,IAAAA,UAAU,CAAC1Z,SAAX,CAAqB8a,SAArB,GAAiC,YAAW;AAC1C,WAAKJ,CAAL,IAAU,CAAC,CAAX;AACA,WAAKC,CAAL,IAAU,CAAC,CAAX;AACA,WAAKC,CAAL,IAAU,CAAC,CAAX;AACD,KAJD;AAMA;;;;;AAGAlB,IAAAA,UAAU,CAAC1Z,SAAX,CAAqB+a,IAArB,GAA4B,YAAW;AACrC,aAAO9gB,IAAI,CAAC+gB,IAAL,CAAU,KAAKN,CAAL,GAAS,KAAKA,CAAd,GAAkB,KAAKC,CAAL,GAAS,KAAKA,CAAhC,GAAoC,KAAKC,CAAL,GAAS,KAAKA,CAAlD,GAAsD,KAAKC,CAAL,GAAS,KAAKA,CAA9E,CAAP;AACD,KAFD;AAIA;;;;;AAGAnB,IAAAA,UAAU,CAAC1Z,SAAX,CAAqBib,SAArB,GAAiC,YAAW;AAC1C,UAAI7W,CAAC,GAAGnK,IAAI,CAAC+gB,IAAL,CAAU,KAAKN,CAAL,GAAS,KAAKA,CAAd,GAAkB,KAAKC,CAAL,GAAS,KAAKA,CAAhC,GAAoC,KAAKC,CAAL,GAAS,KAAKA,CAAlD,GAAsD,KAAKC,CAAL,GAAS,KAAKA,CAA9E,CAAR;;AACA,UAAIzW,CAAC,KAAK,CAAV,EAAa;AACX,aAAKsW,CAAL,GAAS,CAAT;AACA,aAAKC,CAAL,GAAS,CAAT;AACA,aAAKC,CAAL,GAAS,CAAT;AACA,aAAKC,CAAL,GAAS,CAAT;AACD,OALD,MAKO;AACLzW,QAAAA,CAAC,GAAG,IAAIA,CAAR;AACA,aAAKsW,CAAL,GAAS,KAAKA,CAAL,GAAStW,CAAlB;AACA,aAAKuW,CAAL,GAAS,KAAKA,CAAL,GAASvW,CAAlB;AACA,aAAKwW,CAAL,GAAS,KAAKA,CAAL,GAASxW,CAAlB;AACA,aAAKyW,CAAL,GAAS,KAAKA,CAAL,GAASzW,CAAlB;AACD;AACF,KAdD;AAgBA;;;;;AAGAsV,IAAAA,UAAU,CAAC1Z,SAAX,CAAqBya,MAArB,GAA8B,YAAW;AACvC,WAAKK,SAAL;AACA,WAAKG,SAAL;AACD,KAHD;AAKA;;;;;;;AAKAvB,IAAAA,UAAU,CAAC1Z,SAAX,CAAqBqa,QAArB,GAAgC,UAASa,CAAT,EAAY;AAC1C,UAAIC,IAAI,GAAG,KAAKT,CAAL,GAASQ,CAAC,CAACL,CAAX,GAAe,KAAKF,CAAL,GAASO,CAAC,CAACN,CAA1B,GAA8B,KAAKA,CAAL,GAASM,CAAC,CAACP,CAAzC,GAA6C,KAAKE,CAAL,GAASK,CAAC,CAACR,CAAnE;AACA,UAAIU,IAAI,GAAG,CAAC,KAAKV,CAAN,GAAUQ,CAAC,CAACN,CAAZ,GAAgB,KAAKD,CAAL,GAASO,CAAC,CAACL,CAA3B,GAA+B,KAAKD,CAAL,GAASM,CAAC,CAACR,CAA1C,GAA8C,KAAKG,CAAL,GAASK,CAAC,CAACP,CAApE;AACA,UAAIU,IAAI,GAAG,KAAKX,CAAL,GAASQ,CAAC,CAACP,CAAX,GAAe,KAAKA,CAAL,GAASO,CAAC,CAACR,CAA1B,GAA8B,KAAKE,CAAL,GAASM,CAAC,CAACL,CAAzC,GAA6C,KAAKA,CAAL,GAASK,CAAC,CAACN,CAAnE;AACA,UAAIU,IAAI,GAAG,CAAC,KAAKZ,CAAN,GAAUQ,CAAC,CAACR,CAAZ,GAAgB,KAAKC,CAAL,GAASO,CAAC,CAACP,CAA3B,GAA+B,KAAKC,CAAL,GAASM,CAAC,CAACN,CAA1C,GAA8C,KAAKC,CAAL,GAASK,CAAC,CAACL,CAApE;AACA,WAAKH,CAAL,GAASS,IAAT;AACA,WAAKR,CAAL,GAASS,IAAT;AACA,WAAKR,CAAL,GAASS,IAAT;AACA,WAAKR,CAAL,GAASS,IAAT;AACD,KATD;AAWA;;;;;;;AAKA5B,IAAAA,UAAU,CAAC1Z,SAAX,CAAqBoa,KAArB,GAA6B,YAAW;AACtC,aAAO,IAAIV,UAAJ,CAAe,IAAf,CAAP;AACD,KAFD;;AAIA7f,IAAAA,MAAM,CAACH,OAAP,GAAiBggB,UAAjB;AAEC,GA9FwC,EA8FvC,EA9FuC,CAp7G+Z;AAkhHlc,MAAG,CAAC,UAAStgB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1C;;;;AAKA,QAAI+f,OAAO,GAAGrgB,OAAO,CAAC,WAAD,CAArB;;AACA,QAAIsgB,UAAU,GAAGtgB,OAAO,CAAC,cAAD,CAAxB;AAEA;;;;;;;;;;AAQA,aAASmiB,SAAT,CAAmBpR,OAAnB,EAA4B;AAC1BA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB,CAD0B,CAE1B;;AACA,WAAK+P,WAAL,GAAmB,IAAIT,OAAJ,CAAYtP,OAAO,CAAC+P,WAApB,CAAnB;AACA,WAAKF,QAAL,GAAgB,IAAIN,UAAJ,CAAevP,OAAO,CAAC6P,QAAvB,CAAhB;AACD;AAED;;;;;;;AAKAuB,IAAAA,SAAS,CAACvb,SAAV,CAAoBoa,KAApB,GAA4B,YAAW;AACrC,aAAO,IAAImB,SAAJ,CAAc,IAAd,CAAP;AACD,KAFD;;AAIA1hB,IAAAA,MAAM,CAACH,OAAP,GAAiB6hB,SAAjB;AACC,GAlCQ,EAkCP;AAAC,oBAAe,EAAhB;AAAmB,iBAAY;AAA/B,GAlCO,CAlhH+b;AAojHla,MAAG,CAAC,UAASniB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1E;;;;;AAKA;;;;;;;;;AASA,aAAS+f,OAAT,CAAiBtP,OAAjB,EAA0B;AACxBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAKuQ,CAAL,GAASvQ,OAAO,CAACuQ,CAAR,IAAa,CAAtB;AACA,WAAKC,CAAL,GAASxQ,OAAO,CAACwQ,CAAR,IAAa,CAAtB;AACA,WAAKC,CAAL,GAASzQ,OAAO,CAACyQ,CAAR,IAAa,CAAtB;AACD;AAED;;;;;;;AAKAnB,IAAAA,OAAO,CAACzZ,SAAR,CAAkBia,GAAlB,GAAwB,UAASuB,CAAT,EAAY;AAClC,WAAKd,CAAL,IAAUc,CAAC,CAACd,CAAZ;AACA,WAAKC,CAAL,IAAUa,CAAC,CAACb,CAAZ;AACA,WAAKC,CAAL,IAAUY,CAAC,CAACZ,CAAZ;AACD,KAJD;AAMA;;;;;;;AAKAnB,IAAAA,OAAO,CAACzZ,SAAR,CAAkByb,QAAlB,GAA6B,UAASD,CAAT,EAAY;AACvC,WAAKd,CAAL,IAAUc,CAAC,CAACd,CAAZ;AACA,WAAKC,CAAL,IAAUa,CAAC,CAACb,CAAZ;AACA,WAAKC,CAAL,IAAUY,CAAC,CAACZ,CAAZ;AACD,KAJD;AAMA;;;;;;;AAKAnB,IAAAA,OAAO,CAACzZ,SAAR,CAAkB+Z,kBAAlB,GAAuC,UAASmB,CAAT,EAAY;AACjD,UAAIQ,EAAE,GAAGR,CAAC,CAACL,CAAF,GAAM,KAAKH,CAAX,GAAeQ,CAAC,CAACP,CAAF,GAAM,KAAKC,CAA1B,GAA8BM,CAAC,CAACN,CAAF,GAAM,KAAKD,CAAlD;AACA,UAAIgB,EAAE,GAAGT,CAAC,CAACL,CAAF,GAAM,KAAKF,CAAX,GAAeO,CAAC,CAACN,CAAF,GAAM,KAAKF,CAA1B,GAA8BQ,CAAC,CAACR,CAAF,GAAM,KAAKE,CAAlD;AACA,UAAIgB,EAAE,GAAGV,CAAC,CAACL,CAAF,GAAM,KAAKD,CAAX,GAAeM,CAAC,CAACR,CAAF,GAAM,KAAKC,CAA1B,GAA8BO,CAAC,CAACP,CAAF,GAAM,KAAKD,CAAlD;AACA,UAAImB,EAAE,GAAG,CAACX,CAAC,CAACR,CAAH,GAAO,KAAKA,CAAZ,GAAgBQ,CAAC,CAACP,CAAF,GAAM,KAAKA,CAA3B,GAA+BO,CAAC,CAACN,CAAF,GAAM,KAAKA,CAAnD;AACA,WAAKF,CAAL,GAASgB,EAAE,GAAGR,CAAC,CAACL,CAAP,GAAWgB,EAAE,GAAG,CAACX,CAAC,CAACR,CAAnB,GAAuBiB,EAAE,GAAG,CAACT,CAAC,CAACN,CAA/B,GAAmCgB,EAAE,GAAG,CAACV,CAAC,CAACP,CAApD;AACA,WAAKA,CAAL,GAASgB,EAAE,GAAGT,CAAC,CAACL,CAAP,GAAWgB,EAAE,GAAG,CAACX,CAAC,CAACP,CAAnB,GAAuBiB,EAAE,GAAG,CAACV,CAAC,CAACR,CAA/B,GAAmCgB,EAAE,GAAG,CAACR,CAAC,CAACN,CAApD;AACA,WAAKA,CAAL,GAASgB,EAAE,GAAGV,CAAC,CAACL,CAAP,GAAWgB,EAAE,GAAG,CAACX,CAAC,CAACN,CAAnB,GAAuBc,EAAE,GAAG,CAACR,CAAC,CAACP,CAA/B,GAAmCgB,EAAE,GAAG,CAACT,CAAC,CAACR,CAApD;AACD,KARD;AAUA;;;;;;;AAKAjB,IAAAA,OAAO,CAACzZ,SAAR,CAAkBoa,KAAlB,GAA0B,YAAW;AACnC,aAAO,IAAIX,OAAJ,CAAY,IAAZ,CAAP;AACD,KAFD;;AAIA5f,IAAAA,MAAM,CAACH,OAAP,GAAiB+f,OAAjB;AACC,GArEwC,EAqEvC,EArEuC,CApjH+Z;AAynHlc,MAAG,CAAC,UAASrgB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1CG,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACbigB,MAAAA,IAAI,EAAEvgB,OAAO,CAAC,QAAD,CADA;AAEbsgB,MAAAA,UAAU,EAAEtgB,OAAO,CAAC,cAAD,CAFN;AAGbmiB,MAAAA,SAAS,EAAEniB,OAAO,CAAC,aAAD,CAHL;AAIbqgB,MAAAA,OAAO,EAAErgB,OAAO,CAAC,WAAD;AAJH,KAAjB;AAOC,GARQ,EAQP;AAAC,cAAS,EAAV;AAAa,oBAAe,EAA5B;AAA+B,mBAAc,EAA7C;AAAgD,iBAAY;AAA5D,GARO,CAznH+b;AAioHrY,MAAG,CAAC,UAASA,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACvG;;;;;;;;AAQAG,IAAAA,MAAM,CAACH,OAAP,GAAiB,UAAS6W,GAAT,EAAcuL,OAAd,EAAuBC,QAAvB,EAAiC;AAC9CD,MAAAA,OAAO,CAAC1U,OAAR,CAAgB,UAAS4U,SAAT,EAAoB;AAChC,YAAIC,KAAK,GAAGF,QAAQ,CAACC,SAAD,CAApB;;AACAzL,QAAAA,GAAG,CAACvQ,SAAJ,CAAcgc,SAAd,IAA2B,UAAS7R,OAAT,EAAkB;AACzCA,UAAAA,OAAO,CAACgC,GAAR,GAAc,IAAd;AACA,iBAAO,IAAI8P,KAAJ,CAAU9R,OAAV,CAAP;AACH,SAHD;AAIH,OAND;AAOH,KARD;AAUC,GAnBqE,EAmBpE,EAnBoE,CAjoHkY;AAopHlc,MAAG,CAAC,UAAS/Q,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1C;;;;AAKA,QAAIuS,YAAY,GAAG7S,OAAO,CAAC,2BAAD,CAA1B;;AACA,QAAImV,IAAI,GAAGnV,OAAO,CAAC,mBAAD,CAAlB;;AAEA,QAAIuX,OAAO,GAAGvX,OAAO,CAAC,oBAAD,CAArB;;AACA,QAAIwX,cAAc,GAAGxX,OAAO,CAAC,2BAAD,CAA5B;;AACA,QAAI2S,KAAK,GAAG3S,OAAO,CAAC,kBAAD,CAAnB;;AAEA,QAAImiB,SAAS,GAAGniB,OAAO,CAAC,mBAAD,CAAvB;AAEA;;;;;;;;;;;;;;;;;;;AAiBA,aAAS8iB,QAAT,CAAkB/R,OAAlB,EAA2B;AACzBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAKgC,GAAL,GAAWhC,OAAO,CAACgC,GAAnB;AACA,WAAKgQ,UAAL,GAAkBhS,OAAO,CAACgS,UAAR,IAAsB,YAAxC;AACA,WAAKC,YAAL,GAAoBjS,OAAO,CAACiS,YAAR,IAAwB,GAA5C;AACA,WAAKC,UAAL,GAAkBlS,OAAO,CAACkS,UAAR,IAAsB,IAAxC;AACA,WAAKC,IAAL,GAAYnS,OAAO,CAACmS,IAAR,IAAgB,IAA5B;AACA,WAAKC,WAAL,GAAmBpS,OAAO,CAACoS,WAAR,IAAuB,EAA1C;AACA,UAAIC,OAAO,GAAGrS,OAAO,CAACsS,YAAR,IAAwB,GAAtC;AACA,UAAI1N,IAAI,GAAG9U,IAAI,CAACmC,KAAL,CAAWogB,OAAX,CAAX;AACA,UAAIxN,KAAK,GAAG/U,IAAI,CAACmC,KAAL,CAAW,CAACogB,OAAO,GAAGzN,IAAX,IAAmB,UAA9B,CAAZ;AACA,WAAK0N,YAAL,GAAoB;AAClB1N,QAAAA,IAAI,EAAEA,IADY;AAElBC,QAAAA,KAAK,EAAEA;AAFW,OAApB;AAIA,WAAK5C,UAAL,GAAkBjC,OAAO,CAACiC,UAAR,IAAsB,sBAAxC;AACA,WAAKsQ,gBAAL,GAAwBvS,OAAO,CAACuS,gBAAR,IAA4B,gBAApD;AAEA,WAAKjN,WAAL,GAAmB,KAAnB;AACA,WAAKkN,YAAL,GAAoB,KAApB;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACA,WAAKC,0BAAL,GAAkC,KAAlC,CArByB,CAuBzB;;AACA,WAAKrO,YAAL,GAAoB,IAAIvC,YAAJ,CAAiB;AACnCE,QAAAA,GAAG,EAAGhC,OAAO,CAACgC,GADqB;AAEnCC,QAAAA,UAAU,EAAG,KAAKA,UAFiB;AAGnCC,QAAAA,UAAU,EAAG,0CAHsB;AAInCE,QAAAA,UAAU,EAAG,IAJsB;AAKnCC,QAAAA,UAAU,EAAG;AALsB,OAAjB,CAApB,CAxByB,CAgCzB;;AACA,WAAKsQ,aAAL,GAAqB,IAAInM,OAAJ,CAAY;AAC/BxE,QAAAA,GAAG,EAAEhC,OAAO,CAACgC,GADkB;AAE/B/K,QAAAA,IAAI,EAAE,KAAKsb,gBAFoB;AAG/BzL,QAAAA,WAAW,EAAE;AAHkB,OAAZ,CAArB;AAKD;AAED;;;;;;;;AAMAiL,IAAAA,QAAQ,CAAClc,SAAT,CAAmB+c,cAAnB,GAAoC,UAASjD,EAAT,EAAa;AAC/C,UAAI5N,IAAI,GAAG,IAAX;AACA4N,MAAAA,EAAE,CAACkD,UAAH,CAAc5V,OAAd,CAAsB,UAAS6V,SAAT,EAAoB;AACxC,YAAIC,OAAO,GAAGD,SAAS,CAACE,cAAxB;;AACA,YAAID,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EACA;AACEA,UAAAA,OAAO,GAAGA,OAAO,CAACE,SAAR,CAAkB,CAAlB,CAAV;AACD;;AACD,YAAIC,IAAI,GAAG,KAAKT,UAAL,CAAgBM,OAAhB,CAAX;;AACA,YAAIG,IAAJ,EAAU;AACRA,UAAAA,IAAI,CAACJ,SAAL,GAAiB,IAAI1B,SAAJ,CAAc;AAC7BrB,YAAAA,WAAW,EAAG+C,SAAS,CAACA,SAAV,CAAoB/C,WADL;AAE7BF,YAAAA,QAAQ,EAAGiD,SAAS,CAACA,SAAV,CAAoBjD;AAFF,WAAd,CAAjB;AAIAqD,UAAAA,IAAI,CAACC,GAAL,CAASlW,OAAT,CAAiB,UAASmW,EAAT,EAAa;AAC5BA,YAAAA,EAAE,CAACF,IAAI,CAACJ,SAAN,CAAF;AACD,WAFD;AAGD;AACF,OAhBD,EAgBG,IAhBH;AAiBD,KAnBD;AAqBA;;;;;;AAIAf,IAAAA,QAAQ,CAAClc,SAAT,CAAmBwd,UAAnB,GAAgC,YAAW;AACzC,UAAIlP,WAAW,GAAG;AAChBmP,QAAAA,aAAa,EAAG5gB,MAAM,CAACD,IAAP,CAAY,KAAKggB,UAAjB,CADA;AAEhBc,QAAAA,YAAY,EAAG,KAAKvB,UAFJ;AAGhBwB,QAAAA,aAAa,EAAG,KAAKvB,YAHL;AAIhBwB,QAAAA,WAAW,EAAG,KAAKvB,UAJH;AAKhBC,QAAAA,IAAI,EAAG,KAAKA;AALI,OAAlB,CADyC,CASzC;AACA;;AACA,UAAG,KAAKnQ,GAAL,CAAS2F,mBAAZ,EAAiC;AAC/B,YAAI,KAAKrC,WAAT,EAAsB;AACpB,eAAKA,WAAL,CAAiB3B,MAAjB;AACD;;AACD,aAAK2B,WAAL,GAAmB,IAAIlB,IAAJ,CAAS;AAC1BC,UAAAA,YAAY,EAAG,KAAKA,YADM;AAE1BF,UAAAA,WAAW,EAAGA;AAFY,SAAT,CAAnB;AAKA,aAAKmB,WAAL,CAAiB1K,EAAjB,CAAoB,UAApB,EAAgC,KAAKgY,cAAL,CAAoB1F,IAApB,CAAyB,IAAzB,CAAhC;AACA,aAAK5H,WAAL,CAAiBR,IAAjB;AACD,OAXD,MAYK;AACH;AACA;AACA;AACAX,QAAAA,WAAW,CAACzF,OAAZ,GAAsB,KAAK4T,YAA3B;AACA,YAAIvL,OAAO,GAAG,IAAIN,cAAJ,CAAmBtC,WAAnB,CAAd;AAEA,aAAKwO,aAAL,CAAmB3L,WAAnB,CAA+BD,OAA/B,EAAwC,KAAK2M,eAAL,CAAqBxG,IAArB,CAA0B,IAA1B,CAAxC;AACD;;AAED,WAAKwF,0BAAL,GAAkC,KAAlC;AACD,KAlCD;AAoCA;;;;;;;;AAMAX,IAAAA,QAAQ,CAAClc,SAAT,CAAmB6d,eAAnB,GAAqC,UAAStG,QAAT,EAAmB;AACtD;AACA;AACA,UAAI,KAAKoF,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBxO,WAAlB;AACD;;AAED,WAAKwO,YAAL,GAAoB,IAAI5Q,KAAJ,CAAU;AAC5BI,QAAAA,GAAG,EAAE,KAAKA,GADkB;AAE5B/K,QAAAA,IAAI,EAAEmW,QAAQ,CAACuG,UAFa;AAG5BlR,QAAAA,WAAW,EAAE;AAHe,OAAV,CAApB;AAKA,WAAK+P,YAAL,CAAkBzP,SAAlB,CAA4B,KAAK6P,cAAL,CAAoB1F,IAApB,CAAyB,IAAzB,CAA5B;AACD,KAbD;AAeA;;;;;;;;;AAOA6E,IAAAA,QAAQ,CAAClc,SAAT,CAAmBkN,SAAnB,GAA+B,UAASgQ,OAAT,EAAkBnM,QAAlB,EAA4B;AACzD;AACA,UAAImM,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EACA;AACEA,QAAAA,OAAO,GAAGA,OAAO,CAACE,SAAR,CAAkB,CAAlB,CAAV;AACD,OALwD,CAMzD;;;AACA,UAAI,CAAC,KAAKR,UAAL,CAAgBM,OAAhB,CAAL,EAA+B;AAC7B,aAAKN,UAAL,CAAgBM,OAAhB,IAA2B;AACzBI,UAAAA,GAAG,EAAE;AADoB,SAA3B;;AAGA,YAAI,CAAC,KAAKT,0BAAV,EAAsC;AACpC5U,UAAAA,UAAU,CAAC,KAAKuV,UAAL,CAAgBnG,IAAhB,CAAqB,IAArB,CAAD,EAA6B,KAAKkF,WAAlC,CAAV;AACA,eAAKM,0BAAL,GAAkC,IAAlC;AACD;AACF,OARD,CASA;AATA,WAUK,IAAI,KAAKD,UAAL,CAAgBM,OAAhB,EAAyBD,SAA7B,EAAwC;AAC3ClM,UAAAA,QAAQ,CAAC,KAAK6L,UAAL,CAAgBM,OAAhB,EAAyBD,SAA1B,CAAR;AACD;;AACD,WAAKL,UAAL,CAAgBM,OAAhB,EAAyBI,GAAzB,CAA6B9gB,IAA7B,CAAkCuU,QAAlC;AACD,KArBD;AAuBA;;;;;;;;AAMAmL,IAAAA,QAAQ,CAAClc,SAAT,CAAmBmO,WAAnB,GAAiC,UAAS+O,OAAT,EAAkBnM,QAAlB,EAA4B;AAC3D;AACA,UAAImM,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EACA;AACEA,QAAAA,OAAO,GAAGA,OAAO,CAACE,SAAR,CAAkB,CAAlB,CAAV;AACD;;AACD,UAAIC,IAAI,GAAG,KAAKT,UAAL,CAAgBM,OAAhB,CAAX;;AACA,WAAK,IAAII,GAAG,GAAGD,IAAI,IAAIA,IAAI,CAACC,GAAb,IAAoB,EAA9B,EAAkCS,GAAG,GAAGT,GAAG,CAAC1jB,MAAjD,EAAyDmkB,GAAG,EAA5D,GAAiE;AAC/D,YAAIT,GAAG,CAACS,GAAD,CAAH,KAAahN,QAAjB,EAA2B;AACzBuM,UAAAA,GAAG,CAAC7X,MAAJ,CAAWsY,GAAX,EAAgB,CAAhB;AACD;AACF;;AACD,UAAI,CAAChN,QAAD,IAAauM,GAAG,CAAC1jB,MAAJ,KAAe,CAAhC,EAAmC;AACjC,eAAO,KAAKgjB,UAAL,CAAgBM,OAAhB,CAAP;AACD;AACF,KAfD;AAiBA;;;;;AAGAhB,IAAAA,QAAQ,CAAClc,SAAT,CAAmBiO,OAAnB,GAA6B,YAAW;AACtC,WAAKO,YAAL,CAAkBP,OAAlB;;AACA,UAAI,KAAK0O,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBxO,WAAlB;AACD;AACF,KALD;;AAOAtU,IAAAA,MAAM,CAACH,OAAP,GAAiBwiB,QAAjB;AAEC,GAjOQ,EAiOP;AAAC,iCAA4B,CAA7B;AAA+B,yBAAoB,EAAnD;AAAsD,0BAAqB,EAA3E;AAA8E,iCAA4B,EAA1G;AAA6G,wBAAmB,EAAhI;AAAmI,yBAAoB;AAAvJ,GAjOO,CAppH+b;AAq3H1S,MAAG,CAAC,UAAS9iB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAClM,QAAI6W,GAAG,GAAGnX,OAAO,CAAC,aAAD,CAAjB;;AACA,QAAIoX,KAAK,GAAGpX,OAAO,CAAC,UAAD,CAAnB;;AAEA,QAAI0gB,EAAE,GAAGjgB,MAAM,CAACH,OAAP,GAAiB;AACtBwiB,MAAAA,QAAQ,EAAE9iB,OAAO,CAAC,YAAD;AADK,KAA1B;AAIAoX,IAAAA,KAAK,CAACD,GAAD,EAAM,CAAC,UAAD,CAAN,EAAoBuJ,EAApB,CAAL;AACC,GATgK,EAS/J;AAAC,mBAAc,EAAf;AAAkB,gBAAW,EAA7B;AAAgC,kBAAa;AAA7C,GAT+J,CAr3HuS;AA83HpZ,MAAG,CAAC,UAAS1gB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACxF;;;;;AAMA,QAAI+f,OAAO,GAAGrgB,OAAO,CAAC,iBAAD,CAArB;;AACA,QAAI4kB,SAAS,GAAG5kB,OAAO,CAAC,aAAD,CAAvB;AAEA;;;;;;;;;AAOA,aAAS6kB,OAAT,CAAiB9T,OAAjB,EAA0B;AACxB,WAAK+T,SAAL,GAAiB,IAAjB;AACA,WAAKhiB,IAAL,GAAY8hB,SAAS,CAACG,QAAtB,CAFwB,CAIxB;;AACA,UAAIC,GAAG,GAAGjU,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,MAAzB,EAAiCxb,KAAjC,CAAuC,GAAvC,CAAV;AACA,WAAKob,SAAL,GAAiB,IAAIzE,OAAJ,CAAY;AAC3BiB,QAAAA,CAAC,EAAG6D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CADa;AAE3BzD,QAAAA,CAAC,EAAG4D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CAFa;AAG3BxD,QAAAA,CAAC,EAAG2D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ;AAHa,OAAZ,CAAjB;AAKD;;AAEDvkB,IAAAA,MAAM,CAACH,OAAP,GAAiBukB,OAAjB;AACC,GA/BsD,EA+BrD;AAAC,uBAAkB,EAAnB;AAAsB,mBAAc;AAApC,GA/BqD,CA93HiZ;AA65H7Z,MAAG,CAAC,UAAS7kB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC/E;;;;;;AAMA;;;;;;;AAOA,aAAS8kB,SAAT,CAAmBrU,OAAnB,EAA4B;AAC1B;AACA,UAAIsU,IAAI,GAAGtU,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,MAAzB,EAAiCxb,KAAjC,CAAuC,GAAvC,CAAX;AACA,WAAKlK,CAAL,GAAS2lB,UAAU,CAACE,IAAI,CAAC,CAAD,CAAL,CAAnB;AACA,WAAKC,CAAL,GAASH,UAAU,CAACE,IAAI,CAAC,CAAD,CAAL,CAAnB;AACA,WAAKE,CAAL,GAASJ,UAAU,CAACE,IAAI,CAAC,CAAD,CAAL,CAAnB;AACA,WAAKnlB,CAAL,GAASilB,UAAU,CAACE,IAAI,CAAC,CAAD,CAAL,CAAnB;AACD;;AAED5kB,IAAAA,MAAM,CAACH,OAAP,GAAiB8kB,SAAjB;AACC,GAxB6C,EAwB5C,EAxB4C,CA75H0Z;AAq7Hlc,MAAG,CAAC,UAASplB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1C;;;;;AAMA,QAAIskB,SAAS,GAAG5kB,OAAO,CAAC,aAAD,CAAvB;AAEA;;;;;;;;;AAOA,aAASwlB,YAAT,CAAsBzU,OAAtB,EAA+B;AAC7B,WAAKjO,IAAL,GAAY8hB,SAAS,CAACa,aAAtB;AACA,WAAKjlB,MAAL,GAAc2kB,UAAU,CAACpU,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,QAAzB,CAAD,CAAxB;AACA,WAAKQ,MAAL,GAAcP,UAAU,CAACpU,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,QAAzB,CAAD,CAAxB;AACD;;AAEDzkB,IAAAA,MAAM,CAACH,OAAP,GAAiBklB,YAAjB;AACC,GAvBQ,EAuBP;AAAC,mBAAc;AAAf,GAvBO,CAr7H+b;AA48Hlb,MAAG,CAAC,UAASxlB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1D;;;;AAKA,QAAIigB,IAAI,GAAGvgB,OAAO,CAAC,cAAD,CAAlB;;AACA,QAAIqgB,OAAO,GAAGrgB,OAAO,CAAC,iBAAD,CAArB;;AACA,QAAIsgB,UAAU,GAAGtgB,OAAO,CAAC,oBAAD,CAAxB;AAEA;;;;;;;;;AAOA,aAAS2lB,SAAT,CAAmB5U,OAAnB,EAA4B;AAC1B,WAAK/I,IAAL,GAAY+I,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,MAAzB,CAAZ;AACA,WAAKpiB,IAAL,GAAYiO,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,MAAzB,CAAZ;AAEA,UAAIU,OAAO,GAAG7U,OAAO,CAACkU,GAAR,CAAYY,oBAAZ,CAAiC,QAAjC,CAAd;;AACA,UAAGD,OAAO,CAACplB,MAAR,GAAiB,CAApB,EAAuB;AACrB,aAAKslB,MAAL,GAAcF,OAAO,CAAC,CAAD,CAAP,CAAWV,YAAX,CAAwB,MAAxB,CAAd;AACD;;AAED,UAAIa,QAAQ,GAAGhV,OAAO,CAACkU,GAAR,CAAYY,oBAAZ,CAAiC,OAAjC,CAAf;;AACA,UAAGE,QAAQ,CAACvlB,MAAT,GAAkB,CAArB,EAAwB;AACtB,aAAKwlB,KAAL,GAAaD,QAAQ,CAAC,CAAD,CAAR,CAAYb,YAAZ,CAAyB,MAAzB,CAAb;AACD;;AAED,UAAIe,MAAM,GAAGlV,OAAO,CAACkU,GAAR,CAAYY,oBAAZ,CAAiC,OAAjC,CAAb;;AACA,UAAII,MAAM,CAACzlB,MAAP,GAAgB,CAApB,EAAuB;AACrB,aAAK0lB,MAAL,GAAcf,UAAU,CAAEc,MAAM,CAAC,CAAD,CAAN,CAAUf,YAAV,CAAuB,OAAvB,CAAF,CAAxB;AACA,aAAKiB,MAAL,GAAchB,UAAU,CAAEc,MAAM,CAAC,CAAD,CAAN,CAAUf,YAAV,CAAuB,OAAvB,CAAF,CAAxB;AACD,OAlByB,CAoB1B;;;AACA,UAAIkB,OAAO,GAAGrV,OAAO,CAACkU,GAAR,CAAYY,oBAAZ,CAAiC,QAAjC,CAAd;;AACA,UAAIO,OAAO,CAAC5lB,MAAR,KAAmB,CAAvB,EAA0B;AACxB;AACA,aAAK6lB,MAAL,GAAc,IAAI9F,IAAJ,EAAd;AACD,OAHD,MAGO;AACL;AACA,YAAIyE,GAAG,GAAGoB,OAAO,CAAC,CAAD,CAAP,CAAWlB,YAAX,CAAwB,KAAxB,CAAV;AACA,YAAI9Y,QAAQ,GAAG,IAAIiU,OAAJ,EAAf;;AACA,YAAI2E,GAAJ,EAAS;AACPA,UAAAA,GAAG,GAAGA,GAAG,CAACtb,KAAJ,CAAU,GAAV,CAAN;AACA0C,UAAAA,QAAQ,GAAG,IAAIiU,OAAJ,CAAY;AACrBiB,YAAAA,CAAC,EAAG6D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CADO;AAErBzD,YAAAA,CAAC,EAAG4D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CAFO;AAGrBxD,YAAAA,CAAC,EAAG2D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ;AAHO,WAAZ,CAAX;AAKD,SAXI,CAaL;;;AACA,YAAIsB,GAAG,GAAGF,OAAO,CAAC,CAAD,CAAP,CAAWlB,YAAX,CAAwB,KAAxB,CAAV;AACA,YAAI1E,WAAW,GAAG,IAAIF,UAAJ,EAAlB;;AACA,YAAIgG,GAAJ,EAAS;AACPA,UAAAA,GAAG,GAAGA,GAAG,CAAC5c,KAAJ,CAAU,GAAV,CAAN,CADO,CAEP;;AACA,cAAI6c,IAAI,GAAGpB,UAAU,CAACmB,GAAG,CAAC,CAAD,CAAJ,CAArB;AACA,cAAIE,KAAK,GAAGrB,UAAU,CAACmB,GAAG,CAAC,CAAD,CAAJ,CAAtB;AACA,cAAIG,GAAG,GAAGtB,UAAU,CAACmB,GAAG,CAAC,CAAD,CAAJ,CAApB;AACA,cAAII,GAAG,GAAGH,IAAI,GAAG,GAAjB;AACA,cAAII,GAAG,GAAGH,KAAK,GAAG,GAAlB;AACA,cAAII,GAAG,GAAGH,GAAG,GAAG,GAAhB;AACA,cAAInF,CAAC,GAAGzgB,IAAI,CAACgmB,GAAL,CAASH,GAAT,IAAgB7lB,IAAI,CAACimB,GAAL,CAASH,GAAT,CAAhB,GAAgC9lB,IAAI,CAACimB,GAAL,CAASF,GAAT,CAAhC,GAAgD/lB,IAAI,CAACimB,GAAL,CAASJ,GAAT,IAAgB7lB,IAAI,CAACgmB,GAAL,CAASF,GAAT,CAAhB,GAClD9lB,IAAI,CAACgmB,GAAL,CAASD,GAAT,CADN;AAEA,cAAIrF,CAAC,GAAG1gB,IAAI,CAACimB,GAAL,CAASJ,GAAT,IAAgB7lB,IAAI,CAACgmB,GAAL,CAASF,GAAT,CAAhB,GAAgC9lB,IAAI,CAACimB,GAAL,CAASF,GAAT,CAAhC,GAAgD/lB,IAAI,CAACgmB,GAAL,CAASH,GAAT,IAAgB7lB,IAAI,CAACimB,GAAL,CAASH,GAAT,CAAhB,GAClD9lB,IAAI,CAACgmB,GAAL,CAASD,GAAT,CADN;AAEA,cAAIpF,CAAC,GAAG3gB,IAAI,CAACimB,GAAL,CAASJ,GAAT,IAAgB7lB,IAAI,CAACimB,GAAL,CAASH,GAAT,CAAhB,GAAgC9lB,IAAI,CAACgmB,GAAL,CAASD,GAAT,CAAhC,GAAgD/lB,IAAI,CAACgmB,GAAL,CAASH,GAAT,IAAgB7lB,IAAI,CAACgmB,GAAL,CAASF,GAAT,CAAhB,GAClD9lB,IAAI,CAACimB,GAAL,CAASF,GAAT,CADN;AAEA,cAAInF,CAAC,GAAG5gB,IAAI,CAACimB,GAAL,CAASJ,GAAT,IAAgB7lB,IAAI,CAACimB,GAAL,CAASH,GAAT,CAAhB,GAAgC9lB,IAAI,CAACimB,GAAL,CAASF,GAAT,CAAhC,GAAgD/lB,IAAI,CAACgmB,GAAL,CAASH,GAAT,IAAgB7lB,IAAI,CAACgmB,GAAL,CAASF,GAAT,CAAhB,GAClD9lB,IAAI,CAACgmB,GAAL,CAASD,GAAT,CADN;AAGApG,UAAAA,WAAW,GAAG,IAAIF,UAAJ,CAAe;AAC3BgB,YAAAA,CAAC,EAAGA,CADuB;AAE3BC,YAAAA,CAAC,EAAGA,CAFuB;AAG3BC,YAAAA,CAAC,EAAGA,CAHuB;AAI3BC,YAAAA,CAAC,EAAGA;AAJuB,WAAf,CAAd;AAMAjB,UAAAA,WAAW,CAACqB,SAAZ;AACD;;AACD,aAAKwE,MAAL,GAAc,IAAI9F,IAAJ,CAAS;AACrBnU,UAAAA,QAAQ,EAAGA,QADU;AAErBoU,UAAAA,WAAW,EAAGA;AAFO,SAAT,CAAd;AAID;AACF;;AAED/f,IAAAA,MAAM,CAACH,OAAP,GAAiBqlB,SAAjB;AAEC,GA7FwB,EA6FvB;AAAC,oBAAe,EAAhB;AAAmB,0BAAqB,EAAxC;AAA2C,uBAAkB;AAA7D,GA7FuB,CA58H+a;AAyiIpY,MAAG,CAAC,UAAS3lB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACxG;;;;;AAMA,QAAIymB,UAAU,GAAG/mB,OAAO,CAAC,cAAD,CAAxB;AAEA;;;;;;;;;AAOA,aAASgnB,QAAT,CAAkBjW,OAAlB,EAA2B;AACzB,WAAK/I,IAAL,GAAY+I,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,MAAzB,CAAZ;AACA,WAAK+B,OAAL,GAAe,EAAf;AACA,UAAIA,OAAO,GAAGlW,OAAO,CAACkU,GAAR,CAAYY,oBAAZ,CAAiC,QAAjC,CAAd;;AAEA,WAAK,IAAIhmB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAConB,OAAO,CAACzmB,MAAxB,EAAgCX,CAAC,EAAjC,EAAsC;AACpC,aAAKonB,OAAL,CAAa7jB,IAAb,CAAmB,IAAI2jB,UAAJ,CAAe;AAChC9B,UAAAA,GAAG,EAAGgC,OAAO,CAACpnB,CAAD;AADmB,SAAf,CAAnB;AAGD;AACF;;AAEDY,IAAAA,MAAM,CAACH,OAAP,GAAiB0mB,QAAjB;AACC,GA7BsE,EA6BrE;AAAC,oBAAe;AAAhB,GA7BqE,CAziIiY;AAskIjb,MAAG,CAAC,UAAShnB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC3D;;;;;AAMA,QAAI8kB,SAAS,GAAGplB,OAAO,CAAC,aAAD,CAAvB;AAEA;;;;;;;;;AAOA,aAASknB,YAAT,CAAsBnW,OAAtB,EAA+B;AAC7B,WAAKoW,eAAL,GAAuB,IAAvB;AACA,WAAKC,KAAL,GAAa,IAAb;AAEA,WAAKpf,IAAL,GAAY+I,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,MAAzB,CAAZ,CAJ6B,CAM7B;;AACA,UAAImC,QAAQ,GAAGtW,OAAO,CAACkU,GAAR,CAAYY,oBAAZ,CAAiC,SAAjC,CAAf;;AACA,UAAIwB,QAAQ,CAAC7mB,MAAT,GAAkB,CAAtB,EAAyB;AACvB,aAAK2mB,eAAL,GAAuBE,QAAQ,CAAC,CAAD,CAAR,CAAYnC,YAAZ,CAAyB,UAAzB,CAAvB;AACD,OAV4B,CAY7B;;;AACA,UAAIoC,MAAM,GAAGvW,OAAO,CAACkU,GAAR,CAAYY,oBAAZ,CAAiC,OAAjC,CAAb;;AACA,UAAIyB,MAAM,CAAC9mB,MAAP,GAAgB,CAApB,EAAuB;AACrB;AACA,aAAK4mB,KAAL,GAAa,IAAIhC,SAAJ,CAAc;AACzBH,UAAAA,GAAG,EAAGqC,MAAM,CAAC,CAAD;AADa,SAAd,CAAb;AAGD;AACF;;AAEDJ,IAAAA,YAAY,CAACtgB,SAAb,CAAuB2gB,MAAvB,GAAgC,YAAW;AACzC,aAAO,KAAKH,KAAL,KAAe,IAAf,IAAuB,KAAKD,eAAL,KAAyB,IAAvD;AACD,KAFD;;AAIA,QAAI3Z,MAAM,GAAGxN,OAAO,CAAC,eAAD,CAApB;;AAEAknB,IAAAA,YAAY,CAACtgB,SAAb,CAAuB4G,MAAvB,GAAgC,UAASlH,GAAT,EAAc;AAC1C,aAAOkH,MAAM,CAAC,IAAD,EAAOlH,GAAP,CAAb;AACH,KAFD;;AAIA7F,IAAAA,MAAM,CAACH,OAAP,GAAiB4mB,YAAjB;AAEC,GAlDyB,EAkDxB;AAAC,mBAAc,EAAf;AAAkB,qBAAgB;AAAlC,GAlDwB,CAtkI8a;AAwnIha,MAAG,CAAC,UAASlnB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC5E;;;;;AAMA,QAAI+f,OAAO,GAAGrgB,OAAO,CAAC,iBAAD,CAArB;;AACA,QAAI4kB,SAAS,GAAG5kB,OAAO,CAAC,aAAD,CAAvB;AAEA;;;;;;;;;AAOA,aAASwnB,QAAT,CAAkBzW,OAAlB,EAA2B;AACzB,WAAK0W,KAAL,GAAa,IAAb;AAEA,WAAK3kB,IAAL,GAAY8hB,SAAS,CAAC8C,SAAtB;AACA,WAAKC,QAAL,GAAgB5W,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,UAAzB,CAAhB,CAJyB,CAMzB;;AACA,UAAIuC,KAAK,GAAG1W,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,OAAzB,CAAZ;;AACA,UAAIuC,KAAJ,EAAW;AACT;AACA,YAAIzC,GAAG,GAAGyC,KAAK,CAAC/d,KAAN,CAAY,GAAZ,CAAV;AACA,aAAK+d,KAAL,GAAa,IAAIpH,OAAJ,CAAY;AACvBiB,UAAAA,CAAC,EAAG6D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CADS;AAEvBzD,UAAAA,CAAC,EAAG4D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CAFS;AAGvBxD,UAAAA,CAAC,EAAG2D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ;AAHS,SAAZ,CAAb;AAKD;AACF;;AAEDvkB,IAAAA,MAAM,CAACH,OAAP,GAAiBknB,QAAjB;AACC,GArC0C,EAqCzC;AAAC,uBAAkB,EAAnB;AAAsB,mBAAc;AAApC,GArCyC,CAxnI6Z;AA6pI7Z,MAAG,CAAC,UAASxnB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC/E;;;;;AAMA,QAAI4mB,YAAY,GAAGlnB,OAAO,CAAC,gBAAD,CAA1B;;AACA,QAAIgnB,QAAQ,GAAGhnB,OAAO,CAAC,YAAD,CAAtB;;AACA,QAAI2lB,SAAS,GAAG3lB,OAAO,CAAC,aAAD,CAAvB;;AACA,QAAI4nB,SAAS,GAAG5nB,OAAO,CAAC,QAAD,CAAP,CAAkB4nB,SAAlC,CAV+E,CAY/E;;;AACA,QAAIC,6BAA6B,GAAG,CAApC;AAEA;;;;;;;;;AAQA,aAASC,SAAT,CAAmB/W,OAAnB,EAA4B;AAC1BA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,UAAIgX,MAAM,GAAGhX,OAAO,CAACkU,GAArB;AACA,UAAI+C,MAAM,GAAGjX,OAAO,CAACiX,MAArB;AACA,WAAKC,SAAL,GAAiB,EAAjB;AACA,WAAKC,KAAL,GAAa,EAAb;AACA,WAAKC,MAAL,GAAc,EAAd,CAN0B,CAQ1B;;AACA,UAAIH,MAAJ,EAAY;AACV;AACA,YAAII,MAAM,GAAG,IAAIR,SAAJ,EAAb;AACAG,QAAAA,MAAM,GAAGK,MAAM,CAACC,eAAP,CAAuBL,MAAvB,EAA+B,UAA/B,CAAT;AACD,OAbyB,CAe1B;AACA;;;AACA,UAAIM,QAAQ,GAAGP,MAAM,CAACQ,eAAtB,CAjB0B,CAmB1B;;AACA,WAAKvgB,IAAL,GAAYsgB,QAAQ,CAACpD,YAAT,CAAsB,MAAtB,CAAZ,CApB0B,CAsB1B;;AACA,WAAK,IAAIvJ,KAAK,GAAG2M,QAAQ,CAACE,UAArB,EAAiC3oB,CAAC,GAAG,CAA1C,EAA6CA,CAAC,GAAG8b,KAAK,CAACnb,MAAvD,EAA+DX,CAAC,EAAhE,EAAoE;AAClE,YAAIgc,IAAI,GAAGF,KAAK,CAAC9b,CAAD,CAAhB;;AACA,YAAIgc,IAAI,CAAC4M,OAAL,KAAiB,UAArB,EAAiC;AAC/B,cAAIC,QAAQ,GAAG,IAAIxB,YAAJ,CAAiB;AAC9BjC,YAAAA,GAAG,EAAGpJ;AADwB,WAAjB,CAAf,CAD+B,CAI/B;;AACA,cAAI,KAAKoM,SAAL,CAAeS,QAAQ,CAAC1gB,IAAxB,MAAkC,KAAK,CAA3C,EAA8C;AAC5C,gBAAI,KAAKigB,SAAL,CAAeS,QAAQ,CAAC1gB,IAAxB,EAA8Buf,MAA9B,EAAJ,EAA6C;AAC3C,mBAAKU,SAAL,CAAeS,QAAQ,CAAC1gB,IAAxB,EAA8BwF,MAA9B,CAAsCkb,QAAtC;AACD,aAFD,MAEO;AACLxgB,cAAAA,OAAO,CAACygB,IAAR,CAAa,cAAcD,QAAQ,CAAC1gB,IAAvB,GAA8B,gBAA3C;AACD;AACF,WAND,MAMO;AACL,iBAAKigB,SAAL,CAAeS,QAAQ,CAAC1gB,IAAxB,IAAgC0gB,QAAhC;AACD;AACF,SAdD,MAcO,IAAI7M,IAAI,CAAC4M,OAAL,KAAiB,MAArB,EAA6B;AAClC,cAAIG,IAAI,GAAG,IAAI5B,QAAJ,CAAa;AACtB/B,YAAAA,GAAG,EAAGpJ;AADgB,WAAb,CAAX,CADkC,CAIlC;;AACA,cAAI,KAAKqM,KAAL,CAAWU,IAAI,CAAC5gB,IAAhB,MAA0B,KAAK,CAAnC,EAAsC;AACpCE,YAAAA,OAAO,CAACygB,IAAR,CAAa,UAAUC,IAAI,CAAC5gB,IAAf,GAAsB,iBAAnC;AACD,WAFD,MAEO;AACL;AACA,iBAAK,IAAIiD,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC2d,IAAI,CAAC3B,OAAL,CAAazmB,MAA7B,EAAqCyK,CAAC,EAAtC,EACA;AACE,kBAAI4d,GAAG,GAAGD,IAAI,CAAC3B,OAAL,CAAahc,CAAb,EAAgByd,QAA1B;;AACA,kBAAKG,GAAG,KAAK,IAAb,EAAoB;AAClB,oBAAI,KAAKZ,SAAL,CAAeY,GAAG,CAAC7gB,IAAnB,MAA6B,KAAK,CAAtC,EAAyC;AACvC4gB,kBAAAA,IAAI,CAAC3B,OAAL,CAAahc,CAAb,EAAgByd,QAAhB,GAA2B,KAAKT,SAAL,CAAeY,GAAG,CAAC7gB,IAAnB,CAA3B;AACD,iBAFD,MAEO;AACL,uBAAKigB,SAAL,CAAeY,GAAG,CAAC7gB,IAAnB,IAA2B6gB,GAA3B;AACD;AACF;AACF,aAZI,CAcL;;;AACA,iBAAKX,KAAL,CAAWU,IAAI,CAAC5gB,IAAhB,IAAwB4gB,IAAxB;AACD;AACF,SAxBM,MAwBA,IAAI/M,IAAI,CAAC4M,OAAL,KAAiB,OAArB,EAA8B;AACnC,cAAIK,KAAK,GAAG,IAAInD,SAAJ,CAAc;AACxBV,YAAAA,GAAG,EAAGpJ;AADkB,WAAd,CAAZ;AAGA,eAAKsM,MAAL,CAAYW,KAAK,CAAC9gB,IAAlB,IAA0B8gB,KAA1B;AACD;AACF;AACF;;AAEDroB,IAAAA,MAAM,CAACH,OAAP,GAAiBwnB,SAAjB;AAEC,GAjG6C,EAiG5C;AAAC,mBAAc,EAAf;AAAkB,kBAAa,EAA/B;AAAkC,sBAAiB,EAAnD;AAAsD,cAAS;AAA/D,GAjG4C,CA7pI0Z;AA8vIlY,MAAG,CAAC,UAAS9nB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1G;;;;;AAMA,QAAIskB,SAAS,GAAG5kB,OAAO,CAAC,aAAD,CAAvB;AAEA;;;;;;;;;AAOA,aAAS+oB,UAAT,CAAoBhY,OAApB,EAA6B;AAC3B,WAAKjO,IAAL,GAAY8hB,SAAS,CAACoE,WAAtB;AACA,WAAKtD,MAAL,GAAcP,UAAU,CAACpU,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,QAAzB,CAAD,CAAxB;AACD;;AAEDzkB,IAAAA,MAAM,CAACH,OAAP,GAAiByoB,UAAjB;AACC,GAtBwE,EAsBvE;AAAC,mBAAc;AAAf,GAtBuE,CA9vI+X;AAoxIlb,MAAG,CAAC,UAAS/oB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1DG,IAAAA,MAAM,CAACH,OAAP,GAAiB;AACb0oB,MAAAA,WAAW,EAAG,CADD;AAEbjE,MAAAA,QAAQ,EAAG,CAFE;AAGbU,MAAAA,aAAa,EAAG,CAHH;AAIbiC,MAAAA,SAAS,EAAG;AAJC,KAAjB;AAOC,GARwB,EAQvB,EARuB,CApxI+a;AA4xIlc,MAAG,CAAC,UAAS1nB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1C;;;;;AAMA,QAAIigB,IAAI,GAAGvgB,OAAO,CAAC,cAAD,CAAlB;;AACA,QAAIqgB,OAAO,GAAGrgB,OAAO,CAAC,iBAAD,CAArB;;AACA,QAAIsgB,UAAU,GAAGtgB,OAAO,CAAC,oBAAD,CAAxB;;AAEA,QAAIwlB,YAAY,GAAGxlB,OAAO,CAAC,gBAAD,CAA1B;;AACA,QAAI6kB,OAAO,GAAG7kB,OAAO,CAAC,WAAD,CAArB;;AACA,QAAIknB,YAAY,GAAGlnB,OAAO,CAAC,gBAAD,CAA1B;;AACA,QAAIwnB,QAAQ,GAAGxnB,OAAO,CAAC,YAAD,CAAtB;;AACA,QAAI+oB,UAAU,GAAG/oB,OAAO,CAAC,cAAD,CAAxB;AAEA;;;;;;;;;AAOA,aAAS+mB,UAAT,CAAoBhW,OAApB,EAA6B;AAC3B,UAAIkU,GAAG,GAAGlU,OAAO,CAACkU,GAAlB;AACA,WAAKoB,MAAL,GAAc,IAAd;AACA,WAAK4C,QAAL,GAAgB,IAAhB;AACA,WAAKP,QAAL,GAAgB,IAAhB;AAEA,WAAK1gB,IAAL,GAAY+I,OAAO,CAACkU,GAAR,CAAYC,YAAZ,CAAyB,MAAzB,CAAZ,CAN2B,CAQ3B;;AACA,UAAIkB,OAAO,GAAGnB,GAAG,CAACY,oBAAJ,CAAyB,QAAzB,CAAd;;AACA,UAAIO,OAAO,CAAC5lB,MAAR,KAAmB,CAAvB,EAA0B;AACxB;AACA,aAAK6lB,MAAL,GAAc,IAAI9F,IAAJ,EAAd;AACD,OAHD,MAGO;AACL;AACA,YAAIyE,GAAG,GAAGoB,OAAO,CAAC,CAAD,CAAP,CAAWlB,YAAX,CAAwB,KAAxB,CAAV;AACA,YAAI9Y,QAAQ,GAAG,IAAIiU,OAAJ,EAAf;;AACA,YAAI2E,GAAJ,EAAS;AACPA,UAAAA,GAAG,GAAGA,GAAG,CAACtb,KAAJ,CAAU,GAAV,CAAN;AACA0C,UAAAA,QAAQ,GAAG,IAAIiU,OAAJ,CAAY;AACrBiB,YAAAA,CAAC,EAAG6D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CADO;AAErBzD,YAAAA,CAAC,EAAG4D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ,CAFO;AAGrBxD,YAAAA,CAAC,EAAG2D,UAAU,CAACH,GAAG,CAAC,CAAD,CAAJ;AAHO,WAAZ,CAAX;AAKD,SAXI,CAaL;;;AACA,YAAIsB,GAAG,GAAGF,OAAO,CAAC,CAAD,CAAP,CAAWlB,YAAX,CAAwB,KAAxB,CAAV;AACA,YAAI1E,WAAW,GAAG,IAAIF,UAAJ,EAAlB;;AACA,YAAIgG,GAAJ,EAAS;AACPA,UAAAA,GAAG,GAAGA,GAAG,CAAC5c,KAAJ,CAAU,GAAV,CAAN,CADO,CAEP;;AACA,cAAI6c,IAAI,GAAGpB,UAAU,CAACmB,GAAG,CAAC,CAAD,CAAJ,CAArB;AACA,cAAIE,KAAK,GAAGrB,UAAU,CAACmB,GAAG,CAAC,CAAD,CAAJ,CAAtB;AACA,cAAIG,GAAG,GAAGtB,UAAU,CAACmB,GAAG,CAAC,CAAD,CAAJ,CAApB;AACA,cAAII,GAAG,GAAGH,IAAI,GAAG,GAAjB;AACA,cAAII,GAAG,GAAGH,KAAK,GAAG,GAAlB;AACA,cAAII,GAAG,GAAGH,GAAG,GAAG,GAAhB;AACA,cAAInF,CAAC,GAAGzgB,IAAI,CAACgmB,GAAL,CAASH,GAAT,IAAgB7lB,IAAI,CAACimB,GAAL,CAASH,GAAT,CAAhB,GAAgC9lB,IAAI,CAACimB,GAAL,CAASF,GAAT,CAAhC,GAAgD/lB,IAAI,CAACimB,GAAL,CAASJ,GAAT,IAAgB7lB,IAAI,CAACgmB,GAAL,CAASF,GAAT,CAAhB,GAClD9lB,IAAI,CAACgmB,GAAL,CAASD,GAAT,CADN;AAEA,cAAIrF,CAAC,GAAG1gB,IAAI,CAACimB,GAAL,CAASJ,GAAT,IAAgB7lB,IAAI,CAACgmB,GAAL,CAASF,GAAT,CAAhB,GAAgC9lB,IAAI,CAACimB,GAAL,CAASF,GAAT,CAAhC,GAAgD/lB,IAAI,CAACgmB,GAAL,CAASH,GAAT,IAAgB7lB,IAAI,CAACimB,GAAL,CAASH,GAAT,CAAhB,GAClD9lB,IAAI,CAACgmB,GAAL,CAASD,GAAT,CADN;AAEA,cAAIpF,CAAC,GAAG3gB,IAAI,CAACimB,GAAL,CAASJ,GAAT,IAAgB7lB,IAAI,CAACimB,GAAL,CAASH,GAAT,CAAhB,GAAgC9lB,IAAI,CAACgmB,GAAL,CAASD,GAAT,CAAhC,GAAgD/lB,IAAI,CAACgmB,GAAL,CAASH,GAAT,IAAgB7lB,IAAI,CAACgmB,GAAL,CAASF,GAAT,CAAhB,GAClD9lB,IAAI,CAACimB,GAAL,CAASF,GAAT,CADN;AAEA,cAAInF,CAAC,GAAG5gB,IAAI,CAACimB,GAAL,CAASJ,GAAT,IAAgB7lB,IAAI,CAACimB,GAAL,CAASH,GAAT,CAAhB,GAAgC9lB,IAAI,CAACimB,GAAL,CAASF,GAAT,CAAhC,GAAgD/lB,IAAI,CAACgmB,GAAL,CAASH,GAAT,IAAgB7lB,IAAI,CAACgmB,GAAL,CAASF,GAAT,CAAhB,GAClD9lB,IAAI,CAACgmB,GAAL,CAASD,GAAT,CADN;AAGApG,UAAAA,WAAW,GAAG,IAAIF,UAAJ,CAAe;AAC3BgB,YAAAA,CAAC,EAAGA,CADuB;AAE3BC,YAAAA,CAAC,EAAGA,CAFuB;AAG3BC,YAAAA,CAAC,EAAGA,CAHuB;AAI3BC,YAAAA,CAAC,EAAGA;AAJuB,WAAf,CAAd;AAMAjB,UAAAA,WAAW,CAACqB,SAAZ;AACD;;AACD,aAAKwE,MAAL,GAAc,IAAI9F,IAAJ,CAAS;AACrBnU,UAAAA,QAAQ,EAAGA,QADU;AAErBoU,UAAAA,WAAW,EAAGA;AAFO,SAAT,CAAd;AAID,OA3D0B,CA6D3B;;;AACA,UAAI0I,KAAK,GAAGjE,GAAG,CAACY,oBAAJ,CAAyB,UAAzB,CAAZ;;AACA,UAAIqD,KAAK,CAAC1oB,MAAN,GAAe,CAAnB,EAAsB;AACpB,YAAI2oB,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAhB;AACA,YAAIE,KAAK,GAAG,IAAZ,CAFoB,CAGpB;;AACA,aAAK,IAAIvpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGspB,IAAI,CAACX,UAAL,CAAgBhoB,MAApC,EAA4CX,CAAC,EAA7C,EAAiD;AAC/C,cAAIgc,IAAI,GAAGsN,IAAI,CAACX,UAAL,CAAgB3oB,CAAhB,CAAX;;AACA,cAAIgc,IAAI,CAACwN,QAAL,KAAkB,CAAtB,EAAyB;AACvBD,YAAAA,KAAK,GAAGvN,IAAR;AACA;AACD;AACF,SAVmB,CAWpB;;;AACA,YAAI/Y,IAAI,GAAGsmB,KAAK,CAACE,QAAjB;;AACA,YAAIxmB,IAAI,KAAK,QAAb,EAAuB;AACrB,eAAKmmB,QAAL,GAAgB,IAAIF,UAAJ,CAAe;AAC7B9D,YAAAA,GAAG,EAAGmE;AADuB,WAAf,CAAhB;AAGD,SAJD,MAIO,IAAItmB,IAAI,KAAK,KAAb,EAAoB;AACzB,eAAKmmB,QAAL,GAAgB,IAAIpE,OAAJ,CAAY;AAC1BI,YAAAA,GAAG,EAAGmE;AADoB,WAAZ,CAAhB;AAGD,SAJM,MAIA,IAAItmB,IAAI,KAAK,UAAb,EAAyB;AAC9B,eAAKmmB,QAAL,GAAgB,IAAIzD,YAAJ,CAAiB;AAC/BP,YAAAA,GAAG,EAAGmE;AADyB,WAAjB,CAAhB;AAGD,SAJM,MAIA,IAAItmB,IAAI,KAAK,MAAb,EAAqB;AAC1B,eAAKmmB,QAAL,GAAgB,IAAIzB,QAAJ,CAAa;AAC3BvC,YAAAA,GAAG,EAAGmE;AADqB,WAAb,CAAhB;AAGD,SAJM,MAIA;AACLlhB,UAAAA,OAAO,CAACygB,IAAR,CAAa,2BAA2B7lB,IAAxC;AACD;AACF,OA/F0B,CAiG3B;;;AACA,UAAImlB,SAAS,GAAGhD,GAAG,CAACY,oBAAJ,CAAyB,UAAzB,CAAhB;;AACA,UAAIoC,SAAS,CAACznB,MAAV,GAAmB,CAAvB,EAA0B;AACxB,aAAKkoB,QAAL,GAAgB,IAAIxB,YAAJ,CAAiB;AAC/BjC,UAAAA,GAAG,EAAGgD,SAAS,CAAC,CAAD;AADgB,SAAjB,CAAhB;AAGD;AACF;;AAEDxnB,IAAAA,MAAM,CAACH,OAAP,GAAiBymB,UAAjB;AACC,GAnIQ,EAmIP;AAAC,oBAAe,EAAhB;AAAmB,0BAAqB,EAAxC;AAA2C,uBAAkB,EAA7D;AAAgE,iBAAY,EAA5E;AAA+E,sBAAiB,EAAhG;AAAmG,sBAAiB,EAApH;AAAuH,kBAAa,EAApI;AAAuI,oBAAe;AAAtJ,GAnIO,CA5xI+b;AA+5I3S,MAAG,CAAC,UAAS/mB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACjMG,IAAAA,MAAM,CAACH,OAAP,GAAiBN,OAAO,CAAC,eAAD,CAAP,CAAyB;AACtC6kB,MAAAA,OAAO,EAAE7kB,OAAO,CAAC,WAAD,CADsB;AAEtColB,MAAAA,SAAS,EAAEplB,OAAO,CAAC,aAAD,CAFoB;AAGtCwlB,MAAAA,YAAY,EAAExlB,OAAO,CAAC,gBAAD,CAHiB;AAItCgnB,MAAAA,QAAQ,EAAEhnB,OAAO,CAAC,YAAD,CAJqB;AAKtCknB,MAAAA,YAAY,EAAElnB,OAAO,CAAC,gBAAD,CALiB;AAMtCwnB,MAAAA,QAAQ,EAAExnB,OAAO,CAAC,YAAD,CANqB;AAOtC8nB,MAAAA,SAAS,EAAE9nB,OAAO,CAAC,aAAD,CAPoB;AAQtC+oB,MAAAA,UAAU,EAAE/oB,OAAO,CAAC,cAAD,CARmB;AAStC+mB,MAAAA,UAAU,EAAE/mB,OAAO,CAAC,cAAD;AATmB,KAAzB,EAUdA,OAAO,CAAC,aAAD,CAVO,CAAjB;AAYC,GAb+J,EAa9J;AAAC,iBAAY,EAAb;AAAgB,mBAAc,EAA9B;AAAiC,sBAAiB,EAAlD;AAAqD,kBAAa,EAAlE;AAAqE,sBAAiB,EAAtF;AAAyF,kBAAa,EAAtG;AAAyG,mBAAc,EAAvH;AAA0H,oBAAe,EAAzI;AAA4I,mBAAc,EAA1J;AAA6J,oBAAe,EAA5K;AAA+K,qBAAgB;AAA/L,GAb8J,CA/5IwS;AA46InQ,MAAG,CAAC,UAASA,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACzO;;AAEA,QAAIipB,OAAO,GAAG1oB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAd;AAEA,QAAI0oB,eAAe,GAAG,KAAtB;;AACA,aAASC,aAAT,GAAyB;AACvB,UAAI,CAACD,eAAL,EAAsB;AACpBA,QAAAA,eAAe,GAAG,IAAlB;AACAthB,QAAAA,OAAO,CAACygB,IAAR,CAAa,2EAAb;AACD;AACF;AAED;;;;;;AAIA,aAASe,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BF,MAAAA,aAAa;AAEb,UAAIG,OAAO,GAAGD,KAAK,CAAChoB,UAApB;AACA,UAAIH,MAAM,GAAGmoB,KAAK,CAACE,UAAnB;AACA,UAAIC,MAAM,GAAGF,OAAO,GAAG,CAAvB;AAEA,UAAIG,MAAM,GAAGJ,KAAK,CAACI,MAAN,CAAapmB,KAAb,CAAmBnC,MAAnB,EAA2BA,MAAM,GAAGooB,OAApC,CAAb;AACA,UAAII,UAAU,GAAG,IAAIC,WAAJ,CAAgBF,MAAhB,CAAjB;AAEA,UAAIG,GAAG,GAAG,IAAI7mB,KAAJ,CAAUymB,MAAV,CAAV;;AACA,WAAK,IAAIjqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiqB,MAApB,EAA4BjqB,CAAC,EAA7B,EAAiC;AAC/B,YAAIsqB,EAAE,GAAGtqB,CAAC,GAAG,CAAb;AACA,YAAIuqB,EAAE,GAAGJ,UAAU,CAACG,EAAD,CAAnB;AACA,YAAIE,EAAE,GAAGL,UAAU,CAACG,EAAE,GAAC,CAAJ,CAAnB;AACAD,QAAAA,GAAG,CAACrqB,CAAD,CAAH,GAASuqB,EAAE,GAAGb,OAAO,GAAGc,EAAxB;AACD;;AAED,aAAOH,GAAP;AACD;AAED;;;;;;AAIA,aAASI,aAAT,CAAuBX,KAAvB,EAA8B;AAC5BF,MAAAA,aAAa;AAEb,UAAIG,OAAO,GAAGD,KAAK,CAAChoB,UAApB;AACA,UAAIH,MAAM,GAAGmoB,KAAK,CAACE,UAAnB;AACA,UAAIC,MAAM,GAAGF,OAAO,GAAG,CAAvB;AAEA,UAAIG,MAAM,GAAGJ,KAAK,CAACI,MAAN,CAAapmB,KAAb,CAAmBnC,MAAnB,EAA2BA,MAAM,GAAGooB,OAApC,CAAb;AACA,UAAII,UAAU,GAAG,IAAIC,WAAJ,CAAgBF,MAAhB,CAAjB;AACA,UAAIQ,SAAS,GAAG,IAAIC,UAAJ,CAAeT,MAAf,CAAhB;AAEA,UAAIG,GAAG,GAAG,IAAI7mB,KAAJ,CAAUymB,MAAV,CAAV;;AACA,WAAK,IAAIjqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiqB,MAApB,EAA4BjqB,CAAC,EAA7B,EAAiC;AAC/B,YAAIsqB,EAAE,GAAGtqB,CAAC,GAAG,CAAb;AACA,YAAIuqB,EAAE,GAAGJ,UAAU,CAACG,EAAD,CAAnB;AACA,YAAIE,EAAE,GAAGE,SAAS,CAACJ,EAAE,GAAC,CAAJ,CAAlB;AACAD,QAAAA,GAAG,CAACrqB,CAAD,CAAH,GAASuqB,EAAE,GAAGb,OAAO,GAAGc,EAAxB;AACD;;AAED,aAAOH,GAAP;AACD;AAED;;;;;;;AAKA,aAASO,iBAAT,CAA2Bd,KAA3B,EAAkCe,SAAlC,EAA6C;AAC3C,UAAId,OAAO,GAAGD,KAAK,CAAChoB,UAApB;AACA,UAAIH,MAAM,GAAGmoB,KAAK,CAACE,UAAnB;AACA,UAAIE,MAAM,GAAGJ,KAAK,CAACI,MAAN,CAAapmB,KAAb,CAAmBnC,MAAnB,EAA2BA,MAAM,GAAGooB,OAApC,CAAb;AACA,aAAO,IAAIc,SAAJ,CAAcX,MAAd,CAAP;AACD;AAED;;;;;;;AAKA,QAAIY,gBAAgB,GAAG;AACrB,UAAIpnB,UADiB;AAErB,UAAIqnB,WAFiB;AAGrB,UAAIX,WAHiB;AAIrB,UAAIY,SAJiB;AAKrB,UAAIC,UALiB;AAMrB,UAAIN,UANiB;AAOrB,UAAIO,YAPiB;AAQrB,UAAIC;AARiB,KAAvB;AAWA;;;;AAGA,QAAIC,oBAAoB,GAAG;AACzB,UAAIvB,cADqB;AAEzB,UAAIY;AAFqB,KAA3B;AAKA;;;;;;AAKA,aAASY,oBAAT,CAA8B/pB,IAA9B,EAAoCgqB,GAApC,EAAyC;AACvC,UAAIA,GAAG,IAAIR,gBAAX,EAA6B;AAC3B,YAAIS,SAAS,GAAGT,gBAAgB,CAACQ,GAAD,CAAhC;AACA,eAAOV,iBAAiB,CAACtpB,IAAD,EAAOiqB,SAAP,CAAxB;AACD;;AACD,UAAID,GAAG,IAAIF,oBAAX,EAAiC;AAC/B,eAAOA,oBAAoB,CAACE,GAAD,CAApB,CAA0BhqB,IAA1B,CAAP;AACD;;AACD,aAAOA,IAAP;AACD;;AAED,QAAI,OAAOV,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACH,OAA5C,EAAqD;AACnDG,MAAAA,MAAM,CAACH,OAAP,GAAiB4qB,oBAAjB;AACD;AAEA,GAxHuM,EAwHtM,EAxHsM,CA56IgQ;AAoiJlc,MAAG,CAAC,UAASlrB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1CG,IAAAA,MAAM,CAACH,OAAP,GAAiB,OAAO0M,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAACkL,SAAvC,GAAmDA,SAApE;AAEC,GAHQ,EAGP,EAHO,CApiJ+b;AAuiJlc,MAAG,CAAC,UAASlY,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1C;AACAG,IAAAA,MAAM,CAACH,OAAP,GAAiB,SAAS+qB,MAAT,GAAkB;AAC/B,aAAOC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAP;AACH,KAFD;AAGC,GALQ,EAKP,EALO,CAviJ+b;AA4iJlc,MAAG,CAAC,UAASvrB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1C;;;;AAKA;;AAEA,QAAI+qB,MAAM,GAAGrrB,OAAO,CAAC,QAAD,CAApB;;AACA,QAAIwrB,KAAK,GAAGH,MAAM,CAACG,KAAP,IAAgBxe,MAAM,CAACwe,KAAnC;AAEA;;;;;;;;;;;AAUA,aAASnN,aAAT,CAAuBld,IAAvB,EAA6BwW,QAA7B,EAAuC;AACrC;AACA,UAAI8T,KAAK,GAAG,IAAID,KAAJ,EAAZ,CAFqC,CAGrC;;AACAC,MAAAA,KAAK,CAAC1M,MAAN,GAAe,YAAW;AACxB;AACA,YAAI2M,MAAM,GAAG,IAAIL,MAAJ,EAAb;AACA,YAAIM,OAAO,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAd,CAHwB,CAKxB;;AACAF,QAAAA,MAAM,CAACG,KAAP,GAAeJ,KAAK,CAACI,KAArB;AACAH,QAAAA,MAAM,CAACI,MAAP,GAAgBL,KAAK,CAACK,MAAtB,CAPwB,CASxB;;AACAH,QAAAA,OAAO,CAACI,qBAAR,GAAgC,KAAhC;AACAJ,QAAAA,OAAO,CAACK,2BAAR,GAAsC,KAAtC;AACAL,QAAAA,OAAO,CAACM,wBAAR,GAAmC,KAAnC,CAZwB,CAcxB;;AACAN,QAAAA,OAAO,CAACO,SAAR,CAAkBT,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAfwB,CAgBxB;;AACA,YAAIU,SAAS,GAAGR,OAAO,CAACS,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2BX,KAAK,CAACI,KAAjC,EAAwCJ,KAAK,CAACK,MAA9C,EAAsD3qB,IAAtE,CAjBwB,CAmBxB;;AACA,YAAIkrB,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAIxsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGssB,SAAS,CAAC3rB,MAA9B,EAAsCX,CAAC,IAAI,CAA3C,EAA8C;AAC5C;AACAwsB,UAAAA,QAAQ,IAAIpmB,MAAM,CAACC,YAAP,CAAoBimB,SAAS,CAACtsB,CAAD,CAA7B,EAAkCssB,SAAS,CAACtsB,CAAC,GAAG,CAAL,CAA3C,EAAoDssB,SAAS,CAACtsB,CAAC,GAAG,CAAL,CAA7D,CAAZ;AACD;;AACD8X,QAAAA,QAAQ,CAAC7G,IAAI,CAACkH,KAAL,CAAWqU,QAAX,CAAD,CAAR;AACD,OA1BD,CAJqC,CA+BrC;;;AACAZ,MAAAA,KAAK,CAAC7Z,GAAN,GAAY,2BAA2BzQ,IAAvC;AACD;;AAEDV,IAAAA,MAAM,CAACH,OAAP,GAAiB+d,aAAjB;AAEC,GA1DQ,EA0DP;AAAC,cAAS;AAAV,GA1DO,CA5iJ+b;AAsmJvb,MAAG,CAAC,UAASre,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AACrDA,IAAAA,OAAO,CAACgsB,iBAAR,GAA4Btf,MAAM,CAACsf,iBAAnC;AACAhsB,IAAAA,OAAO,CAACisB,aAAR,GAAwBvf,MAAM,CAACuf,aAA/B;AACAjsB,IAAAA,OAAO,CAACsnB,SAAR,GAAoB5a,MAAM,CAAC4a,SAA3B;AAEC,GALmB,EAKlB,EALkB,CAtmJob;AA2mJlc,MAAG,CAAC,UAAS5nB,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAC1C,QAAIksB,IAAI,GAAGxsB,OAAO,CAAC,YAAD,CAAlB;;AACA,QAAIysB,gBAAgB,GAAGzsB,OAAO,CAAC,oBAAD,CAA9B;;AAEA,aAASmY,YAAT,CAAsBuU,GAAtB,EAA2B;AACzB,WAAKC,OAAL,GAAeH,IAAI,CAACC,gBAAD,CAAnB;AAEA,WAAKE,OAAL,CAAaC,gBAAb,CAA8B,SAA9B,EAAyC,KAAKC,oBAAL,CAA0B5O,IAA1B,CAA+B,IAA/B,CAAzC;AAEA,WAAK0O,OAAL,CAAaG,WAAb,CAAyB;AACvBJ,QAAAA,GAAG,EAAEA;AADkB,OAAzB;AAGD;;AAEDvU,IAAAA,YAAY,CAACvR,SAAb,CAAuBimB,oBAAvB,GAA8C,UAASE,EAAT,EAAa;AACzD,UAAI5rB,IAAI,GAAG4rB,EAAE,CAAC5rB,IAAd;;AACA,UAAIA,IAAI,YAAYC,WAAhB,IAA+B,OAAOD,IAAP,KAAgB,QAAnD,EAA6D;AAC3D;AACA,aAAK4X,SAAL,CAAegU,EAAf;AACD,OAHD,MAGO;AACL;AACA,YAAIjqB,IAAI,GAAG3B,IAAI,CAAC2B,IAAhB;;AACA,YAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,eAAKkW,OAAL,CAAa,IAAb;AACD,SAFD,MAEO,IAAIlW,IAAI,KAAK,MAAb,EAAqB;AAC1B,eAAKgW,MAAL,CAAY,IAAZ;AACD,SAFM,MAEA,IAAIhW,IAAI,KAAK,OAAb,EAAsB;AAC3B,eAAKmW,OAAL,CAAa,IAAb;AACD,SAFM,MAEA;AACL,gBAAM,mCAAN;AACD;AACF;AACF,KAlBD;;AAoBAd,IAAAA,YAAY,CAACvR,SAAb,CAAuBiP,IAAvB,GAA8B,UAAS1U,IAAT,EAAe;AAC3C,WAAKwrB,OAAL,CAAaG,WAAb,CAAyB3rB,IAAzB;AACD,KAFD;;AAIAgX,IAAAA,YAAY,CAACvR,SAAb,CAAuB4S,KAAvB,GAA+B,YAAW;AACxC,WAAKmT,OAAL,CAAaG,WAAb,CAAyB;AACvBtT,QAAAA,KAAK,EAAE;AADgB,OAAzB;AAGD,KAJD;;AAMA/Y,IAAAA,MAAM,CAACH,OAAP,GAAiB6X,YAAjB;AAEC,GA9CQ,EA8CP;AAAC,0BAAqB,EAAtB;AAAyB,kBAAa;AAAtC,GA9CO,CA3mJ+b;AAypJ5Z,MAAG,CAAC,UAASnY,OAAT,EAAiBS,MAAjB,EAAwBH,OAAxB,EAAgC;AAChF,QAAI4X,SAAS,GAAGA,SAAS,IAAIlY,OAAO,CAAC,IAAD,CAApC;;AAEAS,IAAAA,MAAM,CAACH,OAAP,GAAiB,UAASkK,IAAT,EAAe;AAC9B,UAAI6N,MAAM,GAAG,IAAb;;AAEA,eAAS2U,mBAAT,CAA6BD,EAA7B,EAAiC;AAC/B,YAAI5rB,IAAI,GAAG4rB,EAAE,CAAC5rB,IAAd;;AAEA,YAAIA,IAAI,YAAYC,WAApB,EAAiC;AAC/B;AACAoJ,UAAAA,IAAI,CAACsiB,WAAL,CAAiB3rB,IAAjB,EAAuB,CAACA,IAAD,CAAvB;AACD,SAHD,MAGO;AACL;AACAqJ,UAAAA,IAAI,CAACsiB,WAAL,CAAiB3rB,IAAjB;AACD;AACF;;AAED,eAAS8rB,mBAAT,CAA6BF,EAA7B,EAAiC;AAC/BviB,QAAAA,IAAI,CAACsiB,WAAL,CAAiB;AAAChqB,UAAAA,IAAI,EAAEiqB,EAAE,CAACjqB;AAAV,SAAjB;AACD;;AAED0H,MAAAA,IAAI,CAACoiB,gBAAL,CAAsB,SAAtB,EAAiC,UAASG,EAAT,EAAa;AAC5C,YAAI5rB,IAAI,GAAG4rB,EAAE,CAAC5rB,IAAd;;AAEA,YAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACAkX,UAAAA,MAAM,CAACxC,IAAP,CAAY1U,IAAZ;AACD,SAHD,MAGO;AACL;AACA,cAAIA,IAAI,CAACmI,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AAChC+O,YAAAA,MAAM,CAACmB,KAAP;AACAnB,YAAAA,MAAM,GAAG,IAAT;AACD,WAHD,MAGO,IAAIlX,IAAI,CAACmI,cAAL,CAAoB,KAApB,CAAJ,EAAgC;AACrC,gBAAIojB,GAAG,GAAGvrB,IAAI,CAACurB,GAAf;AAEArU,YAAAA,MAAM,GAAG,IAAIH,SAAJ,CAAcwU,GAAd,CAAT;AACArU,YAAAA,MAAM,CAACkB,UAAP,GAAoB,aAApB;AAEAlB,YAAAA,MAAM,CAACU,SAAP,GAAmBiU,mBAAnB;AACA3U,YAAAA,MAAM,CAACW,OAAP,GAAiBiU,mBAAjB;AACA5U,YAAAA,MAAM,CAACS,MAAP,GAAgBmU,mBAAhB;AACA5U,YAAAA,MAAM,CAACY,OAAP,GAAiBgU,mBAAjB;AACD,WAVM,MAUA;AACL,kBAAM,iCAAN;AACD;AACF;AACF,OAzBD;AA0BD,KA7CD;AA+CC,GAlD8C,EAkD7C;AAAC,UAAK;AAAN,GAlD6C;AAzpJyZ,CAA5c,EA2sJkB,EA3sJlB,EA2sJqB,CAAC,CAAD,CA3sJrB","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n    /*\n     * The MIT License (MIT)\n     *\n     * Copyright (c) 2014 Patrick Gansterer <paroga@paroga.com>\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all\n     * copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     * SOFTWARE.\n     */\n    \n    (function(global, undefined) { \"use strict\";\n    var POW_2_24 = Math.pow(2, -24),\n        POW_2_32 = Math.pow(2, 32),\n        POW_2_53 = Math.pow(2, 53);\n    \n    function encode(value) {\n      var data = new ArrayBuffer(256);\n      var dataView = new DataView(data);\n      var lastLength;\n      var offset = 0;\n    \n      function ensureSpace(length) {\n        var newByteLength = data.byteLength;\n        var requiredLength = offset + length;\n        while (newByteLength < requiredLength)\n          newByteLength *= 2;\n        if (newByteLength !== data.byteLength) {\n          var oldDataView = dataView;\n          data = new ArrayBuffer(newByteLength);\n          dataView = new DataView(data);\n          var uint32count = (offset + 3) >> 2;\n          for (var i = 0; i < uint32count; ++i)\n            dataView.setUint32(i * 4, oldDataView.getUint32(i * 4));\n        }\n    \n        lastLength = length;\n        return dataView;\n      }\n      function write() {\n        offset += lastLength;\n      }\n      function writeFloat64(value) {\n        write(ensureSpace(8).setFloat64(offset, value));\n      }\n      function writeUint8(value) {\n        write(ensureSpace(1).setUint8(offset, value));\n      }\n      function writeUint8Array(value) {\n        var dataView = ensureSpace(value.length);\n        for (var i = 0; i < value.length; ++i)\n          dataView.setUint8(offset + i, value[i]);\n        write();\n      }\n      function writeUint16(value) {\n        write(ensureSpace(2).setUint16(offset, value));\n      }\n      function writeUint32(value) {\n        write(ensureSpace(4).setUint32(offset, value));\n      }\n      function writeUint64(value) {\n        var low = value % POW_2_32;\n        var high = (value - low) / POW_2_32;\n        var dataView = ensureSpace(8);\n        dataView.setUint32(offset, high);\n        dataView.setUint32(offset + 4, low);\n        write();\n      }\n      function writeTypeAndLength(type, length) {\n        if (length < 24) {\n          writeUint8(type << 5 | length);\n        } else if (length < 0x100) {\n          writeUint8(type << 5 | 24);\n          writeUint8(length);\n        } else if (length < 0x10000) {\n          writeUint8(type << 5 | 25);\n          writeUint16(length);\n        } else if (length < 0x100000000) {\n          writeUint8(type << 5 | 26);\n          writeUint32(length);\n        } else {\n          writeUint8(type << 5 | 27);\n          writeUint64(length);\n        }\n      }\n      \n      function encodeItem(value) {\n        var i;\n    \n        if (value === false)\n          return writeUint8(0xf4);\n        if (value === true)\n          return writeUint8(0xf5);\n        if (value === null)\n          return writeUint8(0xf6);\n        if (value === undefined)\n          return writeUint8(0xf7);\n      \n        switch (typeof value) {\n          case \"number\":\n            if (Math.floor(value) === value) {\n              if (0 <= value && value <= POW_2_53)\n                return writeTypeAndLength(0, value);\n              if (-POW_2_53 <= value && value < 0)\n                return writeTypeAndLength(1, -(value + 1));\n            }\n            writeUint8(0xfb);\n            return writeFloat64(value);\n    \n          case \"string\":\n            var utf8data = [];\n            for (i = 0; i < value.length; ++i) {\n              var charCode = value.charCodeAt(i);\n              if (charCode < 0x80) {\n                utf8data.push(charCode);\n              } else if (charCode < 0x800) {\n                utf8data.push(0xc0 | charCode >> 6);\n                utf8data.push(0x80 | charCode & 0x3f);\n              } else if (charCode < 0xd800) {\n                utf8data.push(0xe0 | charCode >> 12);\n                utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\n                utf8data.push(0x80 | charCode & 0x3f);\n              } else {\n                charCode = (charCode & 0x3ff) << 10;\n                charCode |= value.charCodeAt(++i) & 0x3ff;\n                charCode += 0x10000;\n    \n                utf8data.push(0xf0 | charCode >> 18);\n                utf8data.push(0x80 | (charCode >> 12)  & 0x3f);\n                utf8data.push(0x80 | (charCode >> 6)  & 0x3f);\n                utf8data.push(0x80 | charCode & 0x3f);\n              }\n            }\n    \n            writeTypeAndLength(3, utf8data.length);\n            return writeUint8Array(utf8data);\n    \n          default:\n            var length;\n            if (Array.isArray(value)) {\n              length = value.length;\n              writeTypeAndLength(4, length);\n              for (i = 0; i < length; ++i)\n                encodeItem(value[i]);\n            } else if (value instanceof Uint8Array) {\n              writeTypeAndLength(2, value.length);\n              writeUint8Array(value);\n            } else {\n              var keys = Object.keys(value);\n              length = keys.length;\n              writeTypeAndLength(5, length);\n              for (i = 0; i < length; ++i) {\n                var key = keys[i];\n                encodeItem(key);\n                encodeItem(value[key]);\n              }\n            }\n        }\n      }\n      \n      encodeItem(value);\n    \n      if (\"slice\" in data)\n        return data.slice(0, offset);\n      \n      var ret = new ArrayBuffer(offset);\n      var retView = new DataView(ret);\n      for (var i = 0; i < offset; ++i)\n        retView.setUint8(i, dataView.getUint8(i));\n      return ret;\n    }\n    \n    function decode(data, tagger, simpleValue) {\n      var dataView = new DataView(data);\n      var offset = 0;\n      \n      if (typeof tagger !== \"function\")\n        tagger = function(value) { return value; };\n      if (typeof simpleValue !== \"function\")\n        simpleValue = function() { return undefined; };\n    \n      function read(value, length) {\n        offset += length;\n        return value;\n      }\n      function readArrayBuffer(length) {\n        return read(new Uint8Array(data, offset, length), length);\n      }\n      function readFloat16() {\n        var tempArrayBuffer = new ArrayBuffer(4);\n        var tempDataView = new DataView(tempArrayBuffer);\n        var value = readUint16();\n    \n        var sign = value & 0x8000;\n        var exponent = value & 0x7c00;\n        var fraction = value & 0x03ff;\n        \n        if (exponent === 0x7c00)\n          exponent = 0xff << 10;\n        else if (exponent !== 0)\n          exponent += (127 - 15) << 10;\n        else if (fraction !== 0)\n          return fraction * POW_2_24;\n        \n        tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);\n        return tempDataView.getFloat32(0);\n      }\n      function readFloat32() {\n        return read(dataView.getFloat32(offset), 4);\n      }\n      function readFloat64() {\n        return read(dataView.getFloat64(offset), 8);\n      }\n      function readUint8() {\n        return read(dataView.getUint8(offset), 1);\n      }\n      function readUint16() {\n        return read(dataView.getUint16(offset), 2);\n      }\n      function readUint32() {\n        return read(dataView.getUint32(offset), 4);\n      }\n      function readUint64() {\n        return readUint32() * POW_2_32 + readUint32();\n      }\n      function readBreak() {\n        if (dataView.getUint8(offset) !== 0xff)\n          return false;\n        offset += 1;\n        return true;\n      }\n      function readLength(additionalInformation) {\n        if (additionalInformation < 24)\n          return additionalInformation;\n        if (additionalInformation === 24)\n          return readUint8();\n        if (additionalInformation === 25)\n          return readUint16();\n        if (additionalInformation === 26)\n          return readUint32();\n        if (additionalInformation === 27)\n          return readUint64();\n        if (additionalInformation === 31)\n          return -1;\n        throw \"Invalid length encoding\";\n      }\n      function readIndefiniteStringLength(majorType) {\n        var initialByte = readUint8();\n        if (initialByte === 0xff)\n          return -1;\n        var length = readLength(initialByte & 0x1f);\n        if (length < 0 || (initialByte >> 5) !== majorType)\n          throw \"Invalid indefinite length element\";\n        return length;\n      }\n    \n      function appendUtf16data(utf16data, length) {\n        for (var i = 0; i < length; ++i) {\n          var value = readUint8();\n          if (value & 0x80) {\n            if (value < 0xe0) {\n              value = (value & 0x1f) <<  6\n                    | (readUint8() & 0x3f);\n              length -= 1;\n            } else if (value < 0xf0) {\n              value = (value & 0x0f) << 12\n                    | (readUint8() & 0x3f) << 6\n                    | (readUint8() & 0x3f);\n              length -= 2;\n            } else {\n              value = (value & 0x0f) << 18\n                    | (readUint8() & 0x3f) << 12\n                    | (readUint8() & 0x3f) << 6\n                    | (readUint8() & 0x3f);\n              length -= 3;\n            }\n          }\n    \n          if (value < 0x10000) {\n            utf16data.push(value);\n          } else {\n            value -= 0x10000;\n            utf16data.push(0xd800 | (value >> 10));\n            utf16data.push(0xdc00 | (value & 0x3ff));\n          }\n        }\n      }\n    \n      function decodeItem() {\n        var initialByte = readUint8();\n        var majorType = initialByte >> 5;\n        var additionalInformation = initialByte & 0x1f;\n        var i;\n        var length;\n    \n        if (majorType === 7) {\n          switch (additionalInformation) {\n            case 25:\n              return readFloat16();\n            case 26:\n              return readFloat32();\n            case 27:\n              return readFloat64();\n          }\n        }\n    \n        length = readLength(additionalInformation);\n        if (length < 0 && (majorType < 2 || 6 < majorType))\n          throw \"Invalid length\";\n    \n        switch (majorType) {\n          case 0:\n            return length;\n          case 1:\n            return -1 - length;\n          case 2:\n            if (length < 0) {\n              var elements = [];\n              var fullArrayLength = 0;\n              while ((length = readIndefiniteStringLength(majorType)) >= 0) {\n                fullArrayLength += length;\n                elements.push(readArrayBuffer(length));\n              }\n              var fullArray = new Uint8Array(fullArrayLength);\n              var fullArrayOffset = 0;\n              for (i = 0; i < elements.length; ++i) {\n                fullArray.set(elements[i], fullArrayOffset);\n                fullArrayOffset += elements[i].length;\n              }\n              return fullArray;\n            }\n            return readArrayBuffer(length);\n          case 3:\n            var utf16data = [];\n            if (length < 0) {\n              while ((length = readIndefiniteStringLength(majorType)) >= 0)\n                appendUtf16data(utf16data, length);\n            } else\n              appendUtf16data(utf16data, length);\n            return String.fromCharCode.apply(null, utf16data);\n          case 4:\n            var retArray;\n            if (length < 0) {\n              retArray = [];\n              while (!readBreak())\n                retArray.push(decodeItem());\n            } else {\n              retArray = new Array(length);\n              for (i = 0; i < length; ++i)\n                retArray[i] = decodeItem();\n            }\n            return retArray;\n          case 5:\n            var retObject = {};\n            for (i = 0; i < length || length < 0 && !readBreak(); ++i) {\n              var key = decodeItem();\n              retObject[key] = decodeItem();\n            }\n            return retObject;\n          case 6:\n            return tagger(decodeItem(), length);\n          case 7:\n            switch (length) {\n              case 20:\n                return false;\n              case 21:\n                return true;\n              case 22:\n                return null;\n              case 23:\n                return undefined;\n              default:\n                return simpleValue(length);\n            }\n        }\n      }\n    \n      var ret = decodeItem();\n      if (offset !== data.byteLength)\n        throw \"Remaining bytes\";\n      return ret;\n    }\n    \n    var obj = { encode: encode, decode: decode };\n    \n    if (typeof define === \"function\" && define.amd)\n      define(\"cbor/cbor\", obj);\n    else if (typeof module !== 'undefined' && module.exports)\n      module.exports = obj;\n    else if (!global.CBOR)\n      global.CBOR = obj;\n    \n    })(this);\n    \n    },{}],2:[function(require,module,exports){\n    (function (process){\n    /*!\n     * EventEmitter2\n     * https://github.com/hij1nx/EventEmitter2\n     *\n     * Copyright (c) 2013 hij1nx\n     * Licensed under the MIT license.\n     */\n    ;!function(undefined) {\n    \n      var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\n      };\n      var defaultMaxListeners = 10;\n    \n      function init() {\n        this._events = {};\n        if (this._conf) {\n          configure.call(this, this._conf);\n        }\n      }\n    \n      function configure(conf) {\n        if (conf) {\n          this._conf = conf;\n    \n          conf.delimiter && (this.delimiter = conf.delimiter);\n          this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\n    \n          conf.wildcard && (this.wildcard = conf.wildcard);\n          conf.newListener && (this.newListener = conf.newListener);\n          conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n    \n          if (this.wildcard) {\n            this.listenerTree = {};\n          }\n        } else {\n          this._maxListeners = defaultMaxListeners;\n        }\n      }\n    \n      function logPossibleMemoryLeak(count, eventName) {\n        var errorMsg = '(node) warning: possible EventEmitter memory ' +\n            'leak detected. ' + count + ' listeners added. ' +\n            'Use emitter.setMaxListeners() to increase limit.';\n    \n        if(this.verboseMemoryLeak){\n          errorMsg += ' Event name: ' + eventName + '.';\n        }\n    \n        if(typeof process !== 'undefined' && process.emitWarning){\n          var e = new Error(errorMsg);\n          e.name = 'MaxListenersExceededWarning';\n          e.emitter = this;\n          e.count = count;\n          process.emitWarning(e);\n        } else {\n          console.error(errorMsg);\n    \n          if (console.trace){\n            console.trace();\n          }\n        }\n      }\n    \n      function EventEmitter(conf) {\n        this._events = {};\n        this.newListener = false;\n        this.verboseMemoryLeak = false;\n        configure.call(this, conf);\n      }\n      EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n    \n      //\n      // Attention, function return type now is array, always !\n      // It has zero elements if no any matches found and one or more\n      // elements (leafs) if there are matches\n      //\n      function searchListenerTree(handlers, type, tree, i) {\n        if (!tree) {\n          return [];\n        }\n        var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\n            typeLength = type.length, currentType = type[i], nextType = type[i+1];\n        if (i === typeLength && tree._listeners) {\n          //\n          // If at the end of the event(s) list and the tree has listeners\n          // invoke those listeners.\n          //\n          if (typeof tree._listeners === 'function') {\n            handlers && handlers.push(tree._listeners);\n            return [tree];\n          } else {\n            for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n              handlers && handlers.push(tree._listeners[leaf]);\n            }\n            return [tree];\n          }\n        }\n    \n        if ((currentType === '*' || currentType === '**') || tree[currentType]) {\n          //\n          // If the event emitted is '*' at this part\n          // or there is a concrete match at this patch\n          //\n          if (currentType === '*') {\n            for (branch in tree) {\n              if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\n              }\n            }\n            return listeners;\n          } else if(currentType === '**') {\n            endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\n            if(endReached && tree._listeners) {\n              // The next element has a _listeners, add it to the handlers.\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n            }\n    \n            for (branch in tree) {\n              if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n                if(branch === '*' || branch === '**') {\n                  if(tree[branch]._listeners && !endReached) {\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                  }\n                  listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                } else if(branch === nextType) {\n                  listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\n                } else {\n                  // No match on this one, shift into the tree but not in the type array.\n                  listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                }\n              }\n            }\n            return listeners;\n          }\n    \n          listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\n        }\n    \n        xTree = tree['*'];\n        if (xTree) {\n          //\n          // If the listener tree will allow any match for this part,\n          // then recursively explore all branches of the tree\n          //\n          searchListenerTree(handlers, type, xTree, i+1);\n        }\n    \n        xxTree = tree['**'];\n        if(xxTree) {\n          if(i < typeLength) {\n            if(xxTree._listeners) {\n              // If we have a listener on a '**', it will catch all, so add its handler.\n              searchListenerTree(handlers, type, xxTree, typeLength);\n            }\n    \n            // Build arrays of matching next branches and others.\n            for(branch in xxTree) {\n              if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n                if(branch === nextType) {\n                  // We know the next element will match, so jump twice.\n                  searchListenerTree(handlers, type, xxTree[branch], i+2);\n                } else if(branch === currentType) {\n                  // Current node matches, move into the tree.\n                  searchListenerTree(handlers, type, xxTree[branch], i+1);\n                } else {\n                  isolatedBranch = {};\n                  isolatedBranch[branch] = xxTree[branch];\n                  searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\n                }\n              }\n            }\n          } else if(xxTree._listeners) {\n            // We have reached the end and still on a '**'\n            searchListenerTree(handlers, type, xxTree, typeLength);\n          } else if(xxTree['*'] && xxTree['*']._listeners) {\n            searchListenerTree(handlers, type, xxTree['*'], typeLength);\n          }\n        }\n    \n        return listeners;\n      }\n    \n      function growListenerTree(type, listener) {\n    \n        type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n    \n        //\n        // Looks for two consecutive '**', if so, don't add the event at all.\n        //\n        for(var i = 0, len = type.length; i+1 < len; i++) {\n          if(type[i] === '**' && type[i+1] === '**') {\n            return;\n          }\n        }\n    \n        var tree = this.listenerTree;\n        var name = type.shift();\n    \n        while (name !== undefined) {\n    \n          if (!tree[name]) {\n            tree[name] = {};\n          }\n    \n          tree = tree[name];\n    \n          if (type.length === 0) {\n    \n            if (!tree._listeners) {\n              tree._listeners = listener;\n            }\n            else {\n              if (typeof tree._listeners === 'function') {\n                tree._listeners = [tree._listeners];\n              }\n    \n              tree._listeners.push(listener);\n    \n              if (\n                !tree._listeners.warned &&\n                this._maxListeners > 0 &&\n                tree._listeners.length > this._maxListeners\n              ) {\n                tree._listeners.warned = true;\n                logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n              }\n            }\n            return true;\n          }\n          name = type.shift();\n        }\n        return true;\n      }\n    \n      // By default EventEmitters will print a warning if more than\n      // 10 listeners are added to it. This is a useful default which\n      // helps finding memory leaks.\n      //\n      // Obviously not all Emitters should be limited to 10. This function allows\n      // that to be increased. Set to zero for unlimited.\n    \n      EventEmitter.prototype.delimiter = '.';\n    \n      EventEmitter.prototype.setMaxListeners = function(n) {\n        if (n !== undefined) {\n          this._maxListeners = n;\n          if (!this._conf) this._conf = {};\n          this._conf.maxListeners = n;\n        }\n      };\n    \n      EventEmitter.prototype.event = '';\n    \n    \n      EventEmitter.prototype.once = function(event, fn) {\n        return this._once(event, fn, false);\n      };\n    \n      EventEmitter.prototype.prependOnceListener = function(event, fn) {\n        return this._once(event, fn, true);\n      };\n    \n      EventEmitter.prototype._once = function(event, fn, prepend) {\n        this._many(event, 1, fn, prepend);\n        return this;\n      };\n    \n      EventEmitter.prototype.many = function(event, ttl, fn) {\n        return this._many(event, ttl, fn, false);\n      }\n    \n      EventEmitter.prototype.prependMany = function(event, ttl, fn) {\n        return this._many(event, ttl, fn, true);\n      }\n    \n      EventEmitter.prototype._many = function(event, ttl, fn, prepend) {\n        var self = this;\n    \n        if (typeof fn !== 'function') {\n          throw new Error('many only accepts instances of Function');\n        }\n    \n        function listener() {\n          if (--ttl === 0) {\n            self.off(event, listener);\n          }\n          return fn.apply(this, arguments);\n        }\n    \n        listener._origin = fn;\n    \n        this._on(event, listener, prepend);\n    \n        return self;\n      };\n    \n      EventEmitter.prototype.emit = function() {\n    \n        this._events || init.call(this);\n    \n        var type = arguments[0];\n    \n        if (type === 'newListener' && !this.newListener) {\n          if (!this._events.newListener) {\n            return false;\n          }\n        }\n    \n        var al = arguments.length;\n        var args,l,i,j;\n        var handler;\n    \n        if (this._all && this._all.length) {\n          handler = this._all.slice();\n          if (al > 3) {\n            args = new Array(al);\n            for (j = 0; j < al; j++) args[j] = arguments[j];\n          }\n    \n          for (i = 0, l = handler.length; i < l; i++) {\n            this.event = type;\n            switch (al) {\n            case 1:\n              handler[i].call(this, type);\n              break;\n            case 2:\n              handler[i].call(this, type, arguments[1]);\n              break;\n            case 3:\n              handler[i].call(this, type, arguments[1], arguments[2]);\n              break;\n            default:\n              handler[i].apply(this, args);\n            }\n          }\n        }\n    \n        if (this.wildcard) {\n          handler = [];\n          var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n          searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n        } else {\n          handler = this._events[type];\n          if (typeof handler === 'function') {\n            this.event = type;\n            switch (al) {\n            case 1:\n              handler.call(this);\n              break;\n            case 2:\n              handler.call(this, arguments[1]);\n              break;\n            case 3:\n              handler.call(this, arguments[1], arguments[2]);\n              break;\n            default:\n              args = new Array(al - 1);\n              for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n              handler.apply(this, args);\n            }\n            return true;\n          } else if (handler) {\n            // need to make copy of handlers because list can change in the middle\n            // of emit call\n            handler = handler.slice();\n          }\n        }\n    \n        if (handler && handler.length) {\n          if (al > 3) {\n            args = new Array(al - 1);\n            for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n          }\n          for (i = 0, l = handler.length; i < l; i++) {\n            this.event = type;\n            switch (al) {\n            case 1:\n              handler[i].call(this);\n              break;\n            case 2:\n              handler[i].call(this, arguments[1]);\n              break;\n            case 3:\n              handler[i].call(this, arguments[1], arguments[2]);\n              break;\n            default:\n              handler[i].apply(this, args);\n            }\n          }\n          return true;\n        } else if (!this._all && type === 'error') {\n          if (arguments[1] instanceof Error) {\n            throw arguments[1]; // Unhandled 'error' event\n          } else {\n            throw new Error(\"Uncaught, unspecified 'error' event.\");\n          }\n          return false;\n        }\n    \n        return !!this._all;\n      };\n    \n      EventEmitter.prototype.emitAsync = function() {\n    \n        this._events || init.call(this);\n    \n        var type = arguments[0];\n    \n        if (type === 'newListener' && !this.newListener) {\n            if (!this._events.newListener) { return Promise.resolve([false]); }\n        }\n    \n        var promises= [];\n    \n        var al = arguments.length;\n        var args,l,i,j;\n        var handler;\n    \n        if (this._all) {\n          if (al > 3) {\n            args = new Array(al);\n            for (j = 1; j < al; j++) args[j] = arguments[j];\n          }\n          for (i = 0, l = this._all.length; i < l; i++) {\n            this.event = type;\n            switch (al) {\n            case 1:\n              promises.push(this._all[i].call(this, type));\n              break;\n            case 2:\n              promises.push(this._all[i].call(this, type, arguments[1]));\n              break;\n            case 3:\n              promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n              break;\n            default:\n              promises.push(this._all[i].apply(this, args));\n            }\n          }\n        }\n    \n        if (this.wildcard) {\n          handler = [];\n          var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n          searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n        } else {\n          handler = this._events[type];\n        }\n    \n        if (typeof handler === 'function') {\n          this.event = type;\n          switch (al) {\n          case 1:\n            promises.push(handler.call(this));\n            break;\n          case 2:\n            promises.push(handler.call(this, arguments[1]));\n            break;\n          case 3:\n            promises.push(handler.call(this, arguments[1], arguments[2]));\n            break;\n          default:\n            args = new Array(al - 1);\n            for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n            promises.push(handler.apply(this, args));\n          }\n        } else if (handler && handler.length) {\n          handler = handler.slice();\n          if (al > 3) {\n            args = new Array(al - 1);\n            for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n          }\n          for (i = 0, l = handler.length; i < l; i++) {\n            this.event = type;\n            switch (al) {\n            case 1:\n              promises.push(handler[i].call(this));\n              break;\n            case 2:\n              promises.push(handler[i].call(this, arguments[1]));\n              break;\n            case 3:\n              promises.push(handler[i].call(this, arguments[1], arguments[2]));\n              break;\n            default:\n              promises.push(handler[i].apply(this, args));\n            }\n          }\n        } else if (!this._all && type === 'error') {\n          if (arguments[1] instanceof Error) {\n            return Promise.reject(arguments[1]); // Unhandled 'error' event\n          } else {\n            return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n          }\n        }\n    \n        return Promise.all(promises);\n      };\n    \n      EventEmitter.prototype.on = function(type, listener) {\n        return this._on(type, listener, false);\n      };\n    \n      EventEmitter.prototype.prependListener = function(type, listener) {\n        return this._on(type, listener, true);\n      };\n    \n      EventEmitter.prototype.onAny = function(fn) {\n        return this._onAny(fn, false);\n      };\n    \n      EventEmitter.prototype.prependAny = function(fn) {\n        return this._onAny(fn, true);\n      };\n    \n      EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n    \n      EventEmitter.prototype._onAny = function(fn, prepend){\n        if (typeof fn !== 'function') {\n          throw new Error('onAny only accepts instances of Function');\n        }\n    \n        if (!this._all) {\n          this._all = [];\n        }\n    \n        // Add the function to the event listener collection.\n        if(prepend){\n          this._all.unshift(fn);\n        }else{\n          this._all.push(fn);\n        }\n    \n        return this;\n      }\n    \n      EventEmitter.prototype._on = function(type, listener, prepend) {\n        if (typeof type === 'function') {\n          this._onAny(type, listener);\n          return this;\n        }\n    \n        if (typeof listener !== 'function') {\n          throw new Error('on only accepts instances of Function');\n        }\n        this._events || init.call(this);\n    \n        // To avoid recursion in the case that type == \"newListeners\"! Before\n        // adding it to the listeners, first emit \"newListeners\".\n        this.emit('newListener', type, listener);\n    \n        if (this.wildcard) {\n          growListenerTree.call(this, type, listener);\n          return this;\n        }\n    \n        if (!this._events[type]) {\n          // Optimize the case of one listener. Don't need the extra array object.\n          this._events[type] = listener;\n        }\n        else {\n          if (typeof this._events[type] === 'function') {\n            // Change to array.\n            this._events[type] = [this._events[type]];\n          }\n    \n          // If we've already got an array, just add\n          if(prepend){\n            this._events[type].unshift(listener);\n          }else{\n            this._events[type].push(listener);\n          }\n    \n          // Check for listener leak\n          if (\n            !this._events[type].warned &&\n            this._maxListeners > 0 &&\n            this._events[type].length > this._maxListeners\n          ) {\n            this._events[type].warned = true;\n            logPossibleMemoryLeak.call(this, this._events[type].length, type);\n          }\n        }\n    \n        return this;\n      }\n    \n      EventEmitter.prototype.off = function(type, listener) {\n        if (typeof listener !== 'function') {\n          throw new Error('removeListener only takes instances of Function');\n        }\n    \n        var handlers,leafs=[];\n    \n        if(this.wildcard) {\n          var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n          leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n        }\n        else {\n          // does not use listeners(), so no side effect of creating _events[type]\n          if (!this._events[type]) return this;\n          handlers = this._events[type];\n          leafs.push({_listeners:handlers});\n        }\n    \n        for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n          var leaf = leafs[iLeaf];\n          handlers = leaf._listeners;\n          if (isArray(handlers)) {\n    \n            var position = -1;\n    \n            for (var i = 0, length = handlers.length; i < length; i++) {\n              if (handlers[i] === listener ||\n                (handlers[i].listener && handlers[i].listener === listener) ||\n                (handlers[i]._origin && handlers[i]._origin === listener)) {\n                position = i;\n                break;\n              }\n            }\n    \n            if (position < 0) {\n              continue;\n            }\n    \n            if(this.wildcard) {\n              leaf._listeners.splice(position, 1);\n            }\n            else {\n              this._events[type].splice(position, 1);\n            }\n    \n            if (handlers.length === 0) {\n              if(this.wildcard) {\n                delete leaf._listeners;\n              }\n              else {\n                delete this._events[type];\n              }\n            }\n    \n            this.emit(\"removeListener\", type, listener);\n    \n            return this;\n          }\n          else if (handlers === listener ||\n            (handlers.listener && handlers.listener === listener) ||\n            (handlers._origin && handlers._origin === listener)) {\n            if(this.wildcard) {\n              delete leaf._listeners;\n            }\n            else {\n              delete this._events[type];\n            }\n    \n            this.emit(\"removeListener\", type, listener);\n          }\n        }\n    \n        function recursivelyGarbageCollect(root) {\n          if (root === undefined) {\n            return;\n          }\n          var keys = Object.keys(root);\n          for (var i in keys) {\n            var key = keys[i];\n            var obj = root[key];\n            if ((obj instanceof Function) || (typeof obj !== \"object\") || (obj === null))\n              continue;\n            if (Object.keys(obj).length > 0) {\n              recursivelyGarbageCollect(root[key]);\n            }\n            if (Object.keys(obj).length === 0) {\n              delete root[key];\n            }\n          }\n        }\n        recursivelyGarbageCollect(this.listenerTree);\n    \n        return this;\n      };\n    \n      EventEmitter.prototype.offAny = function(fn) {\n        var i = 0, l = 0, fns;\n        if (fn && this._all && this._all.length > 0) {\n          fns = this._all;\n          for(i = 0, l = fns.length; i < l; i++) {\n            if(fn === fns[i]) {\n              fns.splice(i, 1);\n              this.emit(\"removeListenerAny\", fn);\n              return this;\n            }\n          }\n        } else {\n          fns = this._all;\n          for(i = 0, l = fns.length; i < l; i++)\n            this.emit(\"removeListenerAny\", fns[i]);\n          this._all = [];\n        }\n        return this;\n      };\n    \n      EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n    \n      EventEmitter.prototype.removeAllListeners = function(type) {\n        if (arguments.length === 0) {\n          !this._events || init.call(this);\n          return this;\n        }\n    \n        if (this.wildcard) {\n          var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n          var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n    \n          for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n            var leaf = leafs[iLeaf];\n            leaf._listeners = null;\n          }\n        }\n        else if (this._events) {\n          this._events[type] = null;\n        }\n        return this;\n      };\n    \n      EventEmitter.prototype.listeners = function(type) {\n        if (this.wildcard) {\n          var handlers = [];\n          var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n          searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n          return handlers;\n        }\n    \n        this._events || init.call(this);\n    \n        if (!this._events[type]) this._events[type] = [];\n        if (!isArray(this._events[type])) {\n          this._events[type] = [this._events[type]];\n        }\n        return this._events[type];\n      };\n    \n      EventEmitter.prototype.eventNames = function(){\n        return Object.keys(this._events);\n      }\n    \n      EventEmitter.prototype.listenerCount = function(type) {\n        return this.listeners(type).length;\n      };\n    \n      EventEmitter.prototype.listenersAny = function() {\n    \n        if(this._all) {\n          return this._all;\n        }\n        else {\n          return [];\n        }\n    \n      };\n    \n      if (typeof define === 'function' && define.amd) {\n         // AMD. Register as an anonymous module.\n        define(function() {\n          return EventEmitter;\n        });\n      } else if (typeof exports === 'object') {\n        // CommonJS\n        module.exports = EventEmitter;\n      }\n      else {\n        // Browser global.\n        window.EventEmitter2 = EventEmitter;\n      }\n    }();\n    \n    }).call(this,require('_process'))\n    },{\"_process\":4}],3:[function(require,module,exports){\n    /*\n    object-assign\n    (c) Sindre Sorhus\n    @license MIT\n    */\n    \n    'use strict';\n    /* eslint-disable no-unused-vars */\n    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n    \n    function toObject(val) {\n        if (val === null || val === undefined) {\n            throw new TypeError('Object.assign cannot be called with null or undefined');\n        }\n    \n        return Object(val);\n    }\n    \n    function shouldUseNative() {\n        try {\n            if (!Object.assign) {\n                return false;\n            }\n    \n            // Detect buggy property enumeration order in older V8 versions.\n    \n            // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n            var test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n            test1[5] = 'de';\n            if (Object.getOwnPropertyNames(test1)[0] === '5') {\n                return false;\n            }\n    \n            // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n            var test2 = {};\n            for (var i = 0; i < 10; i++) {\n                test2['_' + String.fromCharCode(i)] = i;\n            }\n            var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n                return test2[n];\n            });\n            if (order2.join('') !== '0123456789') {\n                return false;\n            }\n    \n            // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n            var test3 = {};\n            'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n                test3[letter] = letter;\n            });\n            if (Object.keys(Object.assign({}, test3)).join('') !==\n                    'abcdefghijklmnopqrst') {\n                return false;\n            }\n    \n            return true;\n        } catch (err) {\n            // We don't expect any of the above to throw, but better to be safe.\n            return false;\n        }\n    }\n    \n    module.exports = shouldUseNative() ? Object.assign : function (target, source) {\n        var from;\n        var to = toObject(target);\n        var symbols;\n    \n        for (var s = 1; s < arguments.length; s++) {\n            from = Object(arguments[s]);\n    \n            for (var key in from) {\n                if (hasOwnProperty.call(from, key)) {\n                    to[key] = from[key];\n                }\n            }\n    \n            if (getOwnPropertySymbols) {\n                symbols = getOwnPropertySymbols(from);\n                for (var i = 0; i < symbols.length; i++) {\n                    if (propIsEnumerable.call(from, symbols[i])) {\n                        to[symbols[i]] = from[symbols[i]];\n                    }\n                }\n            }\n        }\n    \n        return to;\n    };\n    \n    },{}],4:[function(require,module,exports){\n    // shim for using process in browser\n    var process = module.exports = {};\n    \n    // cached from whatever global is present so that test runners that stub it\n    // don't break things.  But we need to wrap it in a try catch in case it is\n    // wrapped in strict mode code which doesn't define any globals.  It's inside a\n    // function because try/catches deoptimize in certain engines.\n    \n    var cachedSetTimeout;\n    var cachedClearTimeout;\n    \n    function defaultSetTimout() {\n        throw new Error('setTimeout has not been defined');\n    }\n    function defaultClearTimeout () {\n        throw new Error('clearTimeout has not been defined');\n    }\n    (function () {\n        try {\n            if (typeof setTimeout === 'function') {\n                cachedSetTimeout = setTimeout;\n            } else {\n                cachedSetTimeout = defaultSetTimout;\n            }\n        } catch (e) {\n            cachedSetTimeout = defaultSetTimout;\n        }\n        try {\n            if (typeof clearTimeout === 'function') {\n                cachedClearTimeout = clearTimeout;\n            } else {\n                cachedClearTimeout = defaultClearTimeout;\n            }\n        } catch (e) {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } ())\n    function runTimeout(fun) {\n        if (cachedSetTimeout === setTimeout) {\n            //normal enviroments in sane situations\n            return setTimeout(fun, 0);\n        }\n        // if setTimeout wasn't available but was latter defined\n        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n            cachedSetTimeout = setTimeout;\n            return setTimeout(fun, 0);\n        }\n        try {\n            // when when somebody has screwed with setTimeout but no I.E. maddness\n            return cachedSetTimeout(fun, 0);\n        } catch(e){\n            try {\n                // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n                return cachedSetTimeout.call(null, fun, 0);\n            } catch(e){\n                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n                return cachedSetTimeout.call(this, fun, 0);\n            }\n        }\n    \n    \n    }\n    function runClearTimeout(marker) {\n        if (cachedClearTimeout === clearTimeout) {\n            //normal enviroments in sane situations\n            return clearTimeout(marker);\n        }\n        // if clearTimeout wasn't available but was latter defined\n        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n            cachedClearTimeout = clearTimeout;\n            return clearTimeout(marker);\n        }\n        try {\n            // when when somebody has screwed with setTimeout but no I.E. maddness\n            return cachedClearTimeout(marker);\n        } catch (e){\n            try {\n                // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n                return cachedClearTimeout.call(null, marker);\n            } catch (e){\n                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n                // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n                return cachedClearTimeout.call(this, marker);\n            }\n        }\n    \n    \n    \n    }\n    var queue = [];\n    var draining = false;\n    var currentQueue;\n    var queueIndex = -1;\n    \n    function cleanUpNextTick() {\n        if (!draining || !currentQueue) {\n            return;\n        }\n        draining = false;\n        if (currentQueue.length) {\n            queue = currentQueue.concat(queue);\n        } else {\n            queueIndex = -1;\n        }\n        if (queue.length) {\n            drainQueue();\n        }\n    }\n    \n    function drainQueue() {\n        if (draining) {\n            return;\n        }\n        var timeout = runTimeout(cleanUpNextTick);\n        draining = true;\n    \n        var len = queue.length;\n        while(len) {\n            currentQueue = queue;\n            queue = [];\n            while (++queueIndex < len) {\n                if (currentQueue) {\n                    currentQueue[queueIndex].run();\n                }\n            }\n            queueIndex = -1;\n            len = queue.length;\n        }\n        currentQueue = null;\n        draining = false;\n        runClearTimeout(timeout);\n    }\n    \n    process.nextTick = function (fun) {\n        var args = new Array(arguments.length - 1);\n        if (arguments.length > 1) {\n            for (var i = 1; i < arguments.length; i++) {\n                args[i - 1] = arguments[i];\n            }\n        }\n        queue.push(new Item(fun, args));\n        if (queue.length === 1 && !draining) {\n            runTimeout(drainQueue);\n        }\n    };\n    \n    // v8 likes predictible objects\n    function Item(fun, array) {\n        this.fun = fun;\n        this.array = array;\n    }\n    Item.prototype.run = function () {\n        this.fun.apply(null, this.array);\n    };\n    process.title = 'browser';\n    process.browser = true;\n    process.env = {};\n    process.argv = [];\n    process.version = ''; // empty string to avoid regexp issues\n    process.versions = {};\n    \n    function noop() {}\n    \n    process.on = noop;\n    process.addListener = noop;\n    process.once = noop;\n    process.off = noop;\n    process.removeListener = noop;\n    process.removeAllListeners = noop;\n    process.emit = noop;\n    process.prependListener = noop;\n    process.prependOnceListener = noop;\n    \n    process.listeners = function (name) { return [] }\n    \n    process.binding = function (name) {\n        throw new Error('process.binding is not supported');\n    };\n    \n    process.cwd = function () { return '/' };\n    process.chdir = function (dir) {\n        throw new Error('process.chdir is not supported');\n    };\n    process.umask = function() { return 0; };\n    \n    },{}],5:[function(require,module,exports){\n    var bundleFn = arguments[3];\n    var sources = arguments[4];\n    var cache = arguments[5];\n    \n    var stringify = JSON.stringify;\n    \n    module.exports = function (fn, options) {\n        var wkey;\n        var cacheKeys = Object.keys(cache);\n    \n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            var exp = cache[key].exports;\n            // Using babel as a transpiler to use esmodule, the export will always\n            // be an object with the default export as a property of it. To ensure\n            // the existing api and babel esmodule exports are both supported we\n            // check for both\n            if (exp === fn || exp && exp.default === fn) {\n                wkey = key;\n                break;\n            }\n        }\n    \n        if (!wkey) {\n            wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n            var wcache = {};\n            for (var i = 0, l = cacheKeys.length; i < l; i++) {\n                var key = cacheKeys[i];\n                wcache[key] = key;\n            }\n            sources[wkey] = [\n                'function(require,module,exports){' + fn + '(self); }',\n                wcache\n            ];\n        }\n        var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n    \n        var scache = {}; scache[wkey] = wkey;\n        sources[skey] = [\n            'function(require,module,exports){' +\n                // try to call default if defined to also support babel esmodule exports\n                'var f = require(' + stringify(wkey) + ');' +\n                '(f.default ? f.default : f)(self);' +\n            '}',\n            scache\n        ];\n    \n        var workerSources = {};\n        resolveSources(skey);\n    \n        function resolveSources(key) {\n            workerSources[key] = true;\n    \n            for (var depPath in sources[key][1]) {\n                var depKey = sources[key][1][depPath];\n                if (!workerSources[depKey]) {\n                    resolveSources(depKey);\n                }\n            }\n        }\n    \n        var src = '(' + bundleFn + ')({'\n            + Object.keys(workerSources).map(function (key) {\n                return stringify(key) + ':['\n                    + sources[key][0]\n                    + ',' + stringify(sources[key][1]) + ']'\n                ;\n            }).join(',')\n            + '},{},[' + stringify(skey) + '])'\n        ;\n    \n        var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n    \n        var blob = new Blob([src], { type: 'text/javascript' });\n        if (options && options.bare) { return blob; }\n        var workerUrl = URL.createObjectURL(blob);\n        var worker = new Worker(workerUrl);\n        worker.objectURL = workerUrl;\n        return worker;\n    };\n    \n    },{}],6:[function(require,module,exports){\n    /**\n     * @fileOverview\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    /**\n     * If you use roslib in a browser, all the classes will be exported to a global variable called ROSLIB.\n     *\n     * If you use nodejs, this is the variable you get when you require('roslib')\n     */\n    var ROSLIB = this.ROSLIB || {\n      REVISION : '1.1.0'\n    };\n    \n    var assign = require('object-assign');\n    \n    // Add core components\n    assign(ROSLIB, require('./core'));\n    \n    assign(ROSLIB, require('./actionlib'));\n    \n    assign(ROSLIB, require('./math'));\n    \n    assign(ROSLIB, require('./tf'));\n    \n    assign(ROSLIB, require('./urdf'));\n    \n    module.exports = ROSLIB;\n    \n    },{\"./actionlib\":12,\"./core\":21,\"./math\":26,\"./tf\":29,\"./urdf\":41,\"object-assign\":3}],7:[function(require,module,exports){\n    (function (global){\n    global.ROSLIB = require('./RosLib');\n    }).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n    },{\"./RosLib\":6}],8:[function(require,module,exports){\n    /**\n     * @fileOverview\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var Topic = require('../core/Topic');\n    var Message = require('../core/Message');\n    var EventEmitter2 = require('eventemitter2').EventEmitter2;\n    \n    /**\n     * An actionlib action client.\n     *\n     * Emits the following events:\n     *  * 'timeout' - if a timeout occurred while sending a goal\n     *  * 'status' - the status messages received from the action server\n     *  * 'feedback' -  the feedback messages received from the action server\n     *  * 'result' - the result returned from the action server\n     *\n     *  @constructor\n     *  @param options - object with following keys:\n     *   * ros - the ROSLIB.Ros connection handle\n     *   * serverName - the action server name, like /fibonacci\n     *   * actionName - the action message name, like 'actionlib_tutorials/FibonacciAction'\n     *   * timeout - the timeout length when connecting to the action server\n     */\n    function ActionClient(options) {\n      var that = this;\n      options = options || {};\n      this.ros = options.ros;\n      this.serverName = options.serverName;\n      this.actionName = options.actionName;\n      this.timeout = options.timeout;\n      this.omitFeedback = options.omitFeedback;\n      this.omitStatus = options.omitStatus;\n      this.omitResult = options.omitResult;\n      this.goals = {};\n    \n      // flag to check if a status has been received\n      var receivedStatus = false;\n    \n      // create the topics associated with actionlib\n      this.feedbackListener = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/feedback',\n        messageType : this.actionName + 'Feedback'\n      });\n    \n      this.statusListener = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/status',\n        messageType : 'actionlib_msgs/GoalStatusArray'\n      });\n    \n      this.resultListener = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/result',\n        messageType : this.actionName + 'Result'\n      });\n    \n      this.goalTopic = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/goal',\n        messageType : this.actionName + 'Goal'\n      });\n    \n      this.cancelTopic = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/cancel',\n        messageType : 'actionlib_msgs/GoalID'\n      });\n    \n      // advertise the goal and cancel topics\n      this.goalTopic.advertise();\n      this.cancelTopic.advertise();\n    \n      // subscribe to the status topic\n      if (!this.omitStatus) {\n        this.statusListener.subscribe(function(statusMessage) {\n          receivedStatus = true;\n          statusMessage.status_list.forEach(function(status) {\n            var goal = that.goals[status.goal_id.id];\n            if (goal) {\n              goal.emit('status', status);\n            }\n          });\n        });\n      }\n    \n      // subscribe the the feedback topic\n      if (!this.omitFeedback) {\n        this.feedbackListener.subscribe(function(feedbackMessage) {\n          var goal = that.goals[feedbackMessage.status.goal_id.id];\n          if (goal) {\n            goal.emit('status', feedbackMessage.status);\n            goal.emit('feedback', feedbackMessage.feedback);\n          }\n        });\n      }\n    \n      // subscribe to the result topic\n      if (!this.omitResult) {\n        this.resultListener.subscribe(function(resultMessage) {\n          var goal = that.goals[resultMessage.status.goal_id.id];\n    \n          if (goal) {\n            goal.emit('status', resultMessage.status);\n            goal.emit('result', resultMessage.result);\n          }\n        });\n      }\n    \n      // If timeout specified, emit a 'timeout' event if the action server does not respond\n      if (this.timeout) {\n        setTimeout(function() {\n          if (!receivedStatus) {\n            that.emit('timeout');\n          }\n        }, this.timeout);\n      }\n    }\n    \n    ActionClient.prototype.__proto__ = EventEmitter2.prototype;\n    \n    /**\n     * Cancel all goals associated with this ActionClient.\n     */\n    ActionClient.prototype.cancel = function() {\n      var cancelMessage = new Message();\n      this.cancelTopic.publish(cancelMessage);\n    };\n    \n    /**\n     * Unsubscribe and unadvertise all topics associated with this ActionClient.\n     */\n    ActionClient.prototype.dispose = function() {\n      this.goalTopic.unadvertise();\n      this.cancelTopic.unadvertise();\n      if (!this.omitStatus) {this.statusListener.unsubscribe();}\n      if (!this.omitFeedback) {this.feedbackListener.unsubscribe();}\n      if (!this.omitResult) {this.resultListener.unsubscribe();}\n    };\n    \n    module.exports = ActionClient;\n    \n    },{\"../core/Message\":13,\"../core/Topic\":20,\"eventemitter2\":2}],9:[function(require,module,exports){\n    /**\n     * @fileOverview\n     * @author Justin Young - justin@oodar.com.au\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var Topic = require('../core/Topic');\n    var Message = require('../core/Message');\n    var EventEmitter2 = require('eventemitter2').EventEmitter2;\n    \n    /**\n     * An actionlib action listener\n     *\n     * Emits the following events:\n     *  * 'status' - the status messages received from the action server\n     *  * 'feedback' -  the feedback messages received from the action server\n     *  * 'result' - the result returned from the action server\n     *\n     *  @constructor\n     *  @param options - object with following keys:\n     *   * ros - the ROSLIB.Ros connection handle\n     *   * serverName - the action server name, like /fibonacci\n     *   * actionName - the action message name, like 'actionlib_tutorials/FibonacciAction'\n     */\n    function ActionListener(options) {\n      var that = this;\n      options = options || {};\n      this.ros = options.ros;\n      this.serverName = options.serverName;\n      this.actionName = options.actionName;\n      this.timeout = options.timeout;\n      this.omitFeedback = options.omitFeedback;\n      this.omitStatus = options.omitStatus;\n      this.omitResult = options.omitResult;\n    \n    \n      // create the topics associated with actionlib\n      var goalListener = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/goal',\n        messageType : this.actionName + 'Goal'\n      });\n    \n      var feedbackListener = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/feedback',\n        messageType : this.actionName + 'Feedback'\n      });\n    \n      var statusListener = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/status',\n        messageType : 'actionlib_msgs/GoalStatusArray'\n      });\n    \n      var resultListener = new Topic({\n        ros : this.ros,\n        name : this.serverName + '/result',\n        messageType : this.actionName + 'Result'\n      });\n    \n      goalListener.subscribe(function(goalMessage) {\n          that.emit('goal', goalMessage);\n      });\n    \n      statusListener.subscribe(function(statusMessage) {\n          statusMessage.status_list.forEach(function(status) {\n              that.emit('status', status);\n          });\n      });\n    \n      feedbackListener.subscribe(function(feedbackMessage) {\n          that.emit('status', feedbackMessage.status);\n          that.emit('feedback', feedbackMessage.feedback);\n      });\n    \n      // subscribe to the result topic\n      resultListener.subscribe(function(resultMessage) {\n          that.emit('status', resultMessage.status);\n          that.emit('result', resultMessage.result);\n      });\n    \n    }\n    \n    ActionListener.prototype.__proto__ = EventEmitter2.prototype;\n    \n    module.exports = ActionListener;\n    \n    },{\"../core/Message\":13,\"../core/Topic\":20,\"eventemitter2\":2}],10:[function(require,module,exports){\n    /**\n     * @fileOverview\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var Message = require('../core/Message');\n    var EventEmitter2 = require('eventemitter2').EventEmitter2;\n    \n    /**\n     * An actionlib goal goal is associated with an action server.\n     *\n     * Emits the following events:\n     *  * 'timeout' - if a timeout occurred while sending a goal\n     *\n     *  @constructor\n     *  @param object with following keys:\n     *   * actionClient - the ROSLIB.ActionClient to use with this goal\n     *   * goalMessage - The JSON object containing the goal for the action server\n     */\n    function Goal(options) {\n      var that = this;\n      this.actionClient = options.actionClient;\n      this.goalMessage = options.goalMessage;\n      this.isFinished = false;\n    \n      // Used to create random IDs\n      var date = new Date();\n    \n      // Create a random ID\n      this.goalID = 'goal_' + Math.random() + '_' + date.getTime();\n      // Fill in the goal message\n      this.goalMessage = new Message({\n        goal_id : {\n          stamp : {\n            secs : 0,\n            nsecs : 0\n          },\n          id : this.goalID\n        },\n        goal : this.goalMessage\n      });\n    \n      this.on('status', function(status) {\n        that.status = status;\n      });\n    \n      this.on('result', function(result) {\n        that.isFinished = true;\n        that.result = result;\n      });\n    \n      this.on('feedback', function(feedback) {\n        that.feedback = feedback;\n      });\n    \n      // Add the goal\n      this.actionClient.goals[this.goalID] = this;\n    }\n    \n    Goal.prototype.__proto__ = EventEmitter2.prototype;\n    \n    /**\n     * Send the goal to the action server.\n     *\n     * @param timeout (optional) - a timeout length for the goal's result\n     */\n    Goal.prototype.send = function(timeout) {\n      var that = this;\n      that.actionClient.goalTopic.publish(that.goalMessage);\n      if (timeout) {\n        setTimeout(function() {\n          if (!that.isFinished) {\n            that.emit('timeout');\n          }\n        }, timeout);\n      }\n    };\n    \n    /**\n     * Cancel the current goal.\n     */\n    Goal.prototype.cancel = function() {\n      var cancelMessage = new Message({\n        id : this.goalID\n      });\n      this.actionClient.cancelTopic.publish(cancelMessage);\n    };\n    \n    module.exports = Goal;\n    },{\"../core/Message\":13,\"eventemitter2\":2}],11:[function(require,module,exports){\n    /**\n     * @fileOverview\n     * @author Laura Lindzey - lindzey@gmail.com\n     */\n    \n    var Topic = require('../core/Topic');\n    var Message = require('../core/Message');\n    var EventEmitter2 = require('eventemitter2').EventEmitter2;\n    \n    /**\n     * An actionlib action server client.\n     *\n     * Emits the following events:\n     *  * 'goal' - goal sent by action client\n     *  * 'cancel' - action client has canceled the request\n     *\n     *  @constructor\n     *  @param options - object with following keys:\n     *   * ros - the ROSLIB.Ros connection handle\n     *   * serverName - the action server name, like /fibonacci\n     *   * actionName - the action message name, like 'actionlib_tutorials/FibonacciAction'\n     */\n    \n    function SimpleActionServer(options) {\n        var that = this;\n        options = options || {};\n        this.ros = options.ros;\n        this.serverName = options.serverName;\n        this.actionName = options.actionName;\n    \n        // create and advertise publishers\n        this.feedbackPublisher = new Topic({\n            ros : this.ros,\n            name : this.serverName + '/feedback',\n            messageType : this.actionName + 'Feedback'\n        });\n        this.feedbackPublisher.advertise();\n    \n        var statusPublisher = new Topic({\n            ros : this.ros,\n            name : this.serverName + '/status',\n            messageType : 'actionlib_msgs/GoalStatusArray'\n        });\n        statusPublisher.advertise();\n    \n        this.resultPublisher = new Topic({\n            ros : this.ros,\n            name : this.serverName + '/result',\n            messageType : this.actionName + 'Result'\n        });\n        this.resultPublisher.advertise();\n    \n        // create and subscribe to listeners\n        var goalListener = new Topic({\n            ros : this.ros,\n            name : this.serverName + '/goal',\n            messageType : this.actionName + 'Goal'\n        });\n    \n        var cancelListener = new Topic({\n            ros : this.ros,\n            name : this.serverName + '/cancel',\n            messageType : 'actionlib_msgs/GoalID'\n        });\n    \n        // Track the goals and their status in order to publish status...\n        this.statusMessage = new Message({\n            header : {\n                stamp : {secs : 0, nsecs : 100},\n                frame_id : ''\n            },\n            status_list : []\n        });\n    \n        // needed for handling preemption prompted by a new goal being received\n        this.currentGoal = null; // currently tracked goal\n        this.nextGoal = null; // the one that'll be preempting\n    \n        goalListener.subscribe(function(goalMessage) {\n            \n        if(that.currentGoal) {\n                that.nextGoal = goalMessage;\n                // needs to happen AFTER rest is set up\n                that.emit('cancel');\n        } else {\n                that.statusMessage.status_list = [{goal_id : goalMessage.goal_id, status : 1}];\n                that.currentGoal = goalMessage;\n                that.emit('goal', goalMessage.goal);\n        }\n        });\n    \n        // helper function for determing ordering of timestamps\n        // returns t1 < t2\n        var isEarlier = function(t1, t2) {\n            if(t1.secs > t2.secs) {\n                return false;\n            } else if(t1.secs < t2.secs) {\n                return true;\n            } else if(t1.nsecs < t2.nsecs) {\n                return true;\n            } else {\n                return false;\n            }\n        };\n    \n        // TODO: this may be more complicated than necessary, since I'm\n        // not sure if the callbacks can ever wind up with a scenario\n        // where we've been preempted by a next goal, it hasn't finished\n        // processing, and then we get a cancel message\n        cancelListener.subscribe(function(cancelMessage) {\n    \n            // cancel ALL goals if both empty\n            if(cancelMessage.stamp.secs === 0 && cancelMessage.stamp.secs === 0 && cancelMessage.id === '') {\n                that.nextGoal = null;\n                if(that.currentGoal) {\n                    that.emit('cancel');\n                }\n            } else { // treat id and stamp independently\n                if(that.currentGoal && cancelMessage.id === that.currentGoal.goal_id.id) {\n                    that.emit('cancel');\n                } else if(that.nextGoal && cancelMessage.id === that.nextGoal.goal_id.id) {\n                    that.nextGoal = null;\n                }\n    \n                if(that.nextGoal && isEarlier(that.nextGoal.goal_id.stamp,\n                                              cancelMessage.stamp)) {\n                    that.nextGoal = null;\n                }\n                if(that.currentGoal && isEarlier(that.currentGoal.goal_id.stamp,\n                                                 cancelMessage.stamp)) {\n                    \n                    that.emit('cancel');\n                }\n            }\n        });\n    \n        // publish status at pseudo-fixed rate; required for clients to know they've connected\n        var statusInterval = setInterval( function() {\n            var currentTime = new Date();\n            var secs = Math.floor(currentTime.getTime()/1000);\n            var nsecs = Math.round(1000000000*(currentTime.getTime()/1000-secs));\n            that.statusMessage.header.stamp.secs = secs;\n            that.statusMessage.header.stamp.nsecs = nsecs;\n            statusPublisher.publish(that.statusMessage);\n        }, 500); // publish every 500ms\n    \n    }\n    \n    SimpleActionServer.prototype.__proto__ = EventEmitter2.prototype;\n    \n    /**\n    *  Set action state to succeeded and return to client\n    */\n    \n    SimpleActionServer.prototype.setSucceeded = function(result2) {\n        \n    \n        var resultMessage = new Message({\n            status : {goal_id : this.currentGoal.goal_id, status : 3},\n            result : result2\n        });\n        this.resultPublisher.publish(resultMessage);\n    \n        this.statusMessage.status_list = [];\n        if(this.nextGoal) {\n            this.currentGoal = this.nextGoal;\n            this.nextGoal = null;\n            this.emit('goal', this.currentGoal.goal);\n        } else {\n            this.currentGoal = null;\n        }\n    };\n    \n    /**\n    *  Function to send feedback\n    */\n    \n    SimpleActionServer.prototype.sendFeedback = function(feedback2) {\n    \n        var feedbackMessage = new Message({\n            status : {goal_id : this.currentGoal.goal_id, status : 1},\n            feedback : feedback2\n        });\n        this.feedbackPublisher.publish(feedbackMessage);\n    };\n    \n    /**\n    *  Handle case where client requests preemption\n    */\n    \n    SimpleActionServer.prototype.setPreempted = function() {\n    \n        this.statusMessage.status_list = [];\n        var resultMessage = new Message({\n            status : {goal_id : this.currentGoal.goal_id, status : 2},\n        });\n        this.resultPublisher.publish(resultMessage);\n    \n        if(this.nextGoal) {\n            this.currentGoal = this.nextGoal;\n            this.nextGoal = null;\n            this.emit('goal', this.currentGoal.goal);\n        } else {\n            this.currentGoal = null;\n        }\n    };\n    \n    module.exports = SimpleActionServer;\n    },{\"../core/Message\":13,\"../core/Topic\":20,\"eventemitter2\":2}],12:[function(require,module,exports){\n    var Ros = require('../core/Ros');\n    var mixin = require('../mixin');\n    \n    var action = module.exports = {\n        ActionClient: require('./ActionClient'),\n        ActionListener: require('./ActionListener'),\n        Goal: require('./Goal'),\n        SimpleActionServer: require('./SimpleActionServer')\n    };\n    \n    mixin(Ros, ['ActionClient', 'SimpleActionServer'], action);\n    \n    },{\"../core/Ros\":15,\"../mixin\":27,\"./ActionClient\":8,\"./ActionListener\":9,\"./Goal\":10,\"./SimpleActionServer\":11}],13:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author Brandon Alexander - baalexander@gmail.com\n     */\n    \n    var assign = require('object-assign');\n    \n    /**\n     * Message objects are used for publishing and subscribing to and from topics.\n     *\n     * @constructor\n     * @param values - object matching the fields defined in the .msg definition file\n     */\n    function Message(values) {\n      assign(this, values);\n    }\n    \n    module.exports = Message;\n    },{\"object-assign\":3}],14:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author Brandon Alexander - baalexander@gmail.com\n     */\n    \n    var Service = require('./Service');\n    var ServiceRequest = require('./ServiceRequest');\n    \n    /**\n     * A ROS parameter.\n     *\n     * @constructor\n     * @param options - possible keys include:\n     *   * ros - the ROSLIB.Ros connection handle\n     *   * name - the param name, like max_vel_x\n     */\n    function Param(options) {\n      options = options || {};\n      this.ros = options.ros;\n      this.name = options.name;\n    }\n    \n    /**\n     * Fetches the value of the param.\n     *\n     * @param callback - function with the following params:\n     *  * value - the value of the param from ROS.\n     */\n    Param.prototype.get = function(callback) {\n      var paramClient = new Service({\n        ros : this.ros,\n        name : '/rosapi/get_param',\n        serviceType : 'rosapi/GetParam'\n      });\n    \n      var request = new ServiceRequest({\n        name : this.name\n      });\n    \n      paramClient.callService(request, function(result) {\n        var value = JSON.parse(result.value);\n        callback(value);\n      });\n    };\n    \n    /**\n     * Sets the value of the param in ROS.\n     *\n     * @param value - value to set param to.\n     */\n    Param.prototype.set = function(value, callback) {\n      var paramClient = new Service({\n        ros : this.ros,\n        name : '/rosapi/set_param',\n        serviceType : 'rosapi/SetParam'\n      });\n    \n      var request = new ServiceRequest({\n        name : this.name,\n        value : JSON.stringify(value)\n      });\n    \n      paramClient.callService(request, callback);\n    };\n    \n    /**\n     * Delete this parameter on the ROS server.\n     */\n    Param.prototype.delete = function(callback) {\n      var paramClient = new Service({\n        ros : this.ros,\n        name : '/rosapi/delete_param',\n        serviceType : 'rosapi/DeleteParam'\n      });\n    \n      var request = new ServiceRequest({\n        name : this.name\n      });\n    \n      paramClient.callService(request, callback);\n    };\n    \n    module.exports = Param;\n    },{\"./Service\":16,\"./ServiceRequest\":17}],15:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author Brandon Alexander - baalexander@gmail.com\n     */\n    \n    var WebSocket = require('ws');\n    var WorkerSocket = require('../util/workerSocket');\n    var socketAdapter = require('./SocketAdapter.js');\n    \n    var Service = require('./Service');\n    var ServiceRequest = require('./ServiceRequest');\n    \n    var assign = require('object-assign');\n    var EventEmitter2 = require('eventemitter2').EventEmitter2;\n    \n    /**\n     * Manages connection to the server and all interactions with ROS.\n     *\n     * Emits the following events:\n     *  * 'error' - there was an error with ROS\n     *  * 'connection' - connected to the WebSocket server\n     *  * 'close' - disconnected to the WebSocket server\n     *  * <topicName> - a message came from rosbridge with the given topic name\n     *  * <serviceID> - a service response came from rosbridge with the given ID\n     *\n     * @constructor\n     * @param options - possible keys include: <br>\n     *   * url (optional) - (can be specified later with `connect`) the WebSocket URL for rosbridge or the node server url to connect using socket.io (if socket.io exists in the page) <br>\n     *   * groovyCompatibility - don't use interfaces that changed after the last groovy release or rosbridge_suite and related tools (defaults to true)\n     *   * transportLibrary (optional) - one of 'websocket', 'workersocket' (default), 'socket.io' or RTCPeerConnection instance controlling how the connection is created in `connect`.\n     *   * transportOptions (optional) - the options to use use when creating a connection. Currently only used if `transportLibrary` is RTCPeerConnection.\n     */\n    function Ros(options) {\n      options = options || {};\n      this.socket = null;\n      this.idCounter = 0;\n      this.isConnected = false;\n      this.transportLibrary = options.transportLibrary || 'websocket';\n      this.transportOptions = options.transportOptions || {};\n    \n      if (typeof options.groovyCompatibility === 'undefined') {\n        this.groovyCompatibility = true;\n      }\n      else {\n        this.groovyCompatibility = options.groovyCompatibility;\n      }\n    \n      // Sets unlimited event listeners.\n      this.setMaxListeners(0);\n    \n      // begin by checking if a URL was given\n      if (options.url) {\n        this.connect(options.url);\n      }\n    }\n    \n    Ros.prototype.__proto__ = EventEmitter2.prototype;\n    \n    /**\n     * Connect to the specified WebSocket.\n     *\n     * @param url - WebSocket URL or RTCDataChannel label for Rosbridge\n     */\n    Ros.prototype.connect = function(url) {\n      if (this.transportLibrary === 'socket.io') {\n        this.socket = assign(io(url, {'force new connection': true}), socketAdapter(this));\n        this.socket.on('connect', this.socket.onopen);\n        this.socket.on('data', this.socket.onmessage);\n        this.socket.on('close', this.socket.onclose);\n        this.socket.on('error', this.socket.onerror);\n      } else if (this.transportLibrary.constructor.name === 'RTCPeerConnection') {\n        this.socket = assign(this.transportLibrary.createDataChannel(url, this.transportOptions), socketAdapter(this));\n      } else if (this.transportLibrary === 'websocket') {\n        if (!this.socket || this.socket.readyState === WebSocket.CLOSED) {\n          var sock = new WebSocket(url);\n          sock.binaryType = 'arraybuffer';\n          this.socket = assign(sock, socketAdapter(this));\n        }\n      } else if (this.transportLibrary === 'workersocket') {\n        this.socket = assign(new WorkerSocket(url), socketAdapter(this));\n      } else {\n        throw 'Unknown transportLibrary: ' + this.transportLibrary.toString();\n      }\n    \n    };\n    \n    /**\n     * Disconnect from the WebSocket server.\n     */\n    Ros.prototype.close = function() {\n      if (this.socket) {\n        this.socket.close();\n      }\n    };\n    \n    /**\n     * Sends an authorization request to the server.\n     *\n     * @param mac - MAC (hash) string given by the trusted source.\n     * @param client - IP of the client.\n     * @param dest - IP of the destination.\n     * @param rand - Random string given by the trusted source.\n     * @param t - Time of the authorization request.\n     * @param level - User level as a string given by the client.\n     * @param end - End time of the client's session.\n     */\n    Ros.prototype.authenticate = function(mac, client, dest, rand, t, level, end) {\n      // create the request\n      var auth = {\n        op : 'auth',\n        mac : mac,\n        client : client,\n        dest : dest,\n        rand : rand,\n        t : t,\n        level : level,\n        end : end\n      };\n      // send the request\n      this.callOnConnection(auth);\n    };\n    \n    /**\n     * Sends the message over the WebSocket, but queues the message up if not yet\n     * connected.\n     */\n    Ros.prototype.callOnConnection = function(message) {\n      var that = this;\n      var messageJson = JSON.stringify(message);\n      var emitter = null;\n      if (this.transportLibrary === 'socket.io') {\n        emitter = function(msg){that.socket.emit('operation', msg);};\n      } else {\n        emitter = function(msg){that.socket.send(msg);};\n      }\n    \n      if (!this.isConnected) {\n        that.once('connection', function() {\n          emitter(messageJson);\n        });\n      } else {\n        emitter(messageJson);\n      }\n    };\n    \n    /**\n     * Sends a set_level request to the server\n     *\n     * @param level - Status level (none, error, warning, info)\n     * @param id - Optional: Operation ID to change status level on\n     */\n    Ros.prototype.setStatusLevel = function(level, id){\n      var levelMsg = {\n        op: 'set_level',\n        level: level,\n        id: id\n      };\n    \n      this.callOnConnection(levelMsg);\n    };\n    \n    /**\n     * Retrieves Action Servers in ROS as an array of string\n     *\n     * @param callback function with params:\n     *   * actionservers - Array of action server names\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getActionServers = function(callback, failedCallback) {\n      var getActionServers = new Service({\n        ros : this,\n        name : '/rosapi/action_servers',\n        serviceType : 'rosapi/GetActionServers'\n      });\n    \n      var request = new ServiceRequest({});\n      if (typeof failedCallback === 'function'){\n        getActionServers.callService(request,\n          function(result) {\n            callback(result.action_servers);\n          },\n          function(message){\n            failedCallback(message);\n          }\n        );\n      }else{\n        getActionServers.callService(request, function(result) {\n          callback(result.action_servers);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves list of topics in ROS as an array.\n     *\n     * @param callback function with params:\n     *   * topics - Array of topic names\n     *   * types - Array of message type names\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getTopics = function(callback, failedCallback) {\n      var topicsClient = new Service({\n        ros : this,\n        name : '/rosapi/topics',\n        serviceType : 'rosapi/Topics'\n      });\n    \n      var request = new ServiceRequest();\n      if (typeof failedCallback === 'function'){\n        topicsClient.callService(request,\n          function(result) {\n            callback(result);\n          },\n          function(message){\n            failedCallback(message);\n          }\n        );\n      }else{\n        topicsClient.callService(request, function(result) {\n          callback(result);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves Topics in ROS as an array as specific type\n     *\n     * @param topicType topic type to find\n     * @param callback function with params:\n     *   * topics - Array of topic names\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getTopicsForType = function(topicType, callback, failedCallback) {\n      var topicsForTypeClient = new Service({\n        ros : this,\n        name : '/rosapi/topics_for_type',\n        serviceType : 'rosapi/TopicsForType'\n      });\n    \n      var request = new ServiceRequest({\n        type: topicType\n      });\n      if (typeof failedCallback === 'function'){\n        topicsForTypeClient.callService(request,\n          function(result) {\n            callback(result.topics);\n          },\n          function(message){\n            failedCallback(message);\n          }\n        );\n      }else{\n        topicsForTypeClient.callService(request, function(result) {\n          callback(result.topics);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves list of active service names in ROS.\n     *\n     * @param callback - function with the following params:\n     *   * services - array of service names\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getServices = function(callback, failedCallback) {\n      var servicesClient = new Service({\n        ros : this,\n        name : '/rosapi/services',\n        serviceType : 'rosapi/Services'\n      });\n    \n      var request = new ServiceRequest();\n      if (typeof failedCallback === 'function'){\n        servicesClient.callService(request,\n          function(result) {\n            callback(result.services);\n          },\n          function(message) {\n            failedCallback(message);\n          }\n        );\n      }else{\n        servicesClient.callService(request, function(result) {\n          callback(result.services);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves list of services in ROS as an array as specific type\n     *\n     * @param serviceType service type to find\n     * @param callback function with params:\n     *   * topics - Array of service names\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getServicesForType = function(serviceType, callback, failedCallback) {\n      var servicesForTypeClient = new Service({\n        ros : this,\n        name : '/rosapi/services_for_type',\n        serviceType : 'rosapi/ServicesForType'\n      });\n    \n      var request = new ServiceRequest({\n        type: serviceType\n      });\n      if (typeof failedCallback === 'function'){\n        servicesForTypeClient.callService(request,\n          function(result) {\n            callback(result.services);\n          },\n          function(message) {\n            failedCallback(message);\n          }\n        );\n      }else{\n        servicesForTypeClient.callService(request, function(result) {\n          callback(result.services);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves a detail of ROS service request.\n     *\n     * @param service name of service:\n     * @param callback - function with params:\n     *   * type - String of the service type\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getServiceRequestDetails = function(type, callback, failedCallback) {\n      var serviceTypeClient = new Service({\n        ros : this,\n        name : '/rosapi/service_request_details',\n        serviceType : 'rosapi/ServiceRequestDetails'\n      });\n      var request = new ServiceRequest({\n        type: type\n      });\n    \n      if (typeof failedCallback === 'function'){\n        serviceTypeClient.callService(request,\n          function(result) {\n            callback(result);\n          },\n          function(message){\n            failedCallback(message);\n          }\n        );\n      }else{\n        serviceTypeClient.callService(request, function(result) {\n          callback(result);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves a detail of ROS service request.\n     *\n     * @param service name of service\n     * @param callback - function with params:\n     *   * type - String of the service type\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getServiceResponseDetails = function(type, callback, failedCallback) {\n      var serviceTypeClient = new Service({\n        ros : this,\n        name : '/rosapi/service_response_details',\n        serviceType : 'rosapi/ServiceResponseDetails'\n      });\n      var request = new ServiceRequest({\n        type: type\n      });\n    \n      if (typeof failedCallback === 'function'){\n        serviceTypeClient.callService(request,\n          function(result) {\n            callback(result);\n          },\n          function(message){\n            failedCallback(message);\n          }\n        );\n      }else{\n        serviceTypeClient.callService(request, function(result) {\n          callback(result);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves list of active node names in ROS.\n     *\n     * @param callback - function with the following params:\n     *   * nodes - array of node names\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getNodes = function(callback, failedCallback) {\n      var nodesClient = new Service({\n        ros : this,\n        name : '/rosapi/nodes',\n        serviceType : 'rosapi/Nodes'\n      });\n    \n      var request = new ServiceRequest();\n      if (typeof failedCallback === 'function'){\n        nodesClient.callService(request,\n          function(result) {\n            callback(result.nodes);\n          },\n          function(message) {\n            failedCallback(message);\n          }\n        );\n      }else{\n        nodesClient.callService(request, function(result) {\n          callback(result.nodes);\n        });\n      }\n    };\n    \n    /**\n      * Retrieves list subscribed topics, publishing topics and services of a specific node\n      *\n      * @param node name of the node:\n      * @param callback - function with params:\n      *   * publications - array of published topic names\n      *   * subscriptions - array of subscribed topic names\n      *   * services - array of service names hosted\n      * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n      */\n    Ros.prototype.getNodeDetails = function(node, callback, failedCallback) {\n      var nodesClient = new Service({\n        ros : this,\n        name : '/rosapi/node_details',\n        serviceType : 'rosapi/NodeDetails'\n      });\n    \n      var request = new ServiceRequest({\n        node: node\n      });\n      if (typeof failedCallback === 'function'){\n        nodesClient.callService(request,\n          function(result) {\n            callback(result.subscribing, result.publishing, result.services);\n          },\n          function(message) {\n            failedCallback(message);\n          }\n        );\n      } else {\n        nodesClient.callService(request, function(result) {\n          callback(result);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves list of param names from the ROS Parameter Server.\n     *\n     * @param callback function with params:\n     *  * params - array of param names.\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getParams = function(callback, failedCallback) {\n      var paramsClient = new Service({\n        ros : this,\n        name : '/rosapi/get_param_names',\n        serviceType : 'rosapi/GetParamNames'\n      });\n      var request = new ServiceRequest();\n      if (typeof failedCallback === 'function'){\n        paramsClient.callService(request,\n          function(result) {\n            callback(result.names);\n          },\n          function(message){\n            failedCallback(message);\n          }\n        );\n      }else{\n        paramsClient.callService(request, function(result) {\n          callback(result.names);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves a type of ROS topic.\n     *\n     * @param topic name of the topic:\n     * @param callback - function with params:\n     *   * type - String of the topic type\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getTopicType = function(topic, callback, failedCallback) {\n      var topicTypeClient = new Service({\n        ros : this,\n        name : '/rosapi/topic_type',\n        serviceType : 'rosapi/TopicType'\n      });\n      var request = new ServiceRequest({\n        topic: topic\n      });\n    \n      if (typeof failedCallback === 'function'){\n        topicTypeClient.callService(request,\n          function(result) {\n            callback(result.type);\n          },\n          function(message){\n            failedCallback(message);\n          }\n        );\n      }else{\n        topicTypeClient.callService(request, function(result) {\n          callback(result.type);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves a type of ROS service.\n     *\n     * @param service name of service:\n     * @param callback - function with params:\n     *   * type - String of the service type\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getServiceType = function(service, callback, failedCallback) {\n      var serviceTypeClient = new Service({\n        ros : this,\n        name : '/rosapi/service_type',\n        serviceType : 'rosapi/ServiceType'\n      });\n      var request = new ServiceRequest({\n        service: service\n      });\n    \n      if (typeof failedCallback === 'function'){\n        serviceTypeClient.callService(request,\n          function(result) {\n            callback(result.type);\n          },\n          function(message){\n            failedCallback(message);\n          }\n        );\n      }else{\n        serviceTypeClient.callService(request, function(result) {\n          callback(result.type);\n        });\n      }\n    };\n    \n    /**\n     * Retrieves a detail of ROS message.\n     *\n     * @param message - String of a topic type\n     * @param callback - function with params:\n     *   * details - Array of the message detail\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Ros.prototype.getMessageDetails = function(message, callback, failedCallback) {\n      var messageDetailClient = new Service({\n        ros : this,\n        name : '/rosapi/message_details',\n        serviceType : 'rosapi/MessageDetails'\n      });\n      var request = new ServiceRequest({\n        type: message\n      });\n    \n      if (typeof failedCallback === 'function'){\n        messageDetailClient.callService(request,\n          function(result) {\n            callback(result.typedefs);\n          },\n          function(message){\n            failedCallback(message);\n          }\n        );\n      }else{\n        messageDetailClient.callService(request, function(result) {\n          callback(result.typedefs);\n        });\n      }\n    };\n    \n    /**\n     * Decode a typedefs into a dictionary like `rosmsg show foo/bar`\n     *\n     * @param defs - array of type_def dictionary\n     */\n    Ros.prototype.decodeTypeDefs = function(defs) {\n      var that = this;\n    \n      // calls itself recursively to resolve type definition using hints.\n      var decodeTypeDefsRec = function(theType, hints) {\n        var typeDefDict = {};\n        for (var i = 0; i < theType.fieldnames.length; i++) {\n          var arrayLen = theType.fieldarraylen[i];\n          var fieldName = theType.fieldnames[i];\n          var fieldType = theType.fieldtypes[i];\n          if (fieldType.indexOf('/') === -1) { // check the fieldType includes '/' or not\n            if (arrayLen === -1) {\n              typeDefDict[fieldName] = fieldType;\n            }\n            else {\n              typeDefDict[fieldName] = [fieldType];\n            }\n          }\n          else {\n            // lookup the name\n            var sub = false;\n            for (var j = 0; j < hints.length; j++) {\n              if (hints[j].type.toString() === fieldType.toString()) {\n                sub = hints[j];\n                break;\n              }\n            }\n            if (sub) {\n              var subResult = decodeTypeDefsRec(sub, hints);\n              if (arrayLen === -1) {\n              }\n              else {\n                typeDefDict[fieldName] = [subResult];\n              }\n            }\n            else {\n              that.emit('error', 'Cannot find ' + fieldType + ' in decodeTypeDefs');\n            }\n          }\n        }\n        return typeDefDict;\n      };\n    \n      return decodeTypeDefsRec(defs[0], defs);\n    };\n    \n    /**\n     * Retrieves list of topics and their associated type definitions.\n     *\n     * @param callback function with params:\n     *   * topics - Array of topic names\n     *   * types - Array of message type names\n     *   * typedefs_full_text - Array of full definitions of message types, similar to `gendeps --cat`\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     *\n     */\n    Ros.prototype.getTopicsAndRawTypes = function(callback, failedCallback) {\n      var topicsAndRawTypesClient = new Service({\n        ros : this,\n        name : '/rosapi/topics_and_raw_types',\n        serviceType : 'rosapi/TopicsAndRawTypes'\n      });\n    \n      var request = new ServiceRequest();\n      if (typeof failedCallback === 'function'){\n        topicsAndRawTypesClient.callService(request,\n          function(result) {\n            callback(result);\n          },\n          function(message){\n            failedCallback(message);\n          }\n        );\n      }else{\n        topicsAndRawTypesClient.callService(request, function(result) {\n          callback(result);\n        });\n      }\n    };\n    \n    \n    module.exports = Ros;\n    \n    },{\"../util/workerSocket\":47,\"./Service\":16,\"./ServiceRequest\":17,\"./SocketAdapter.js\":19,\"eventemitter2\":2,\"object-assign\":3,\"ws\":43}],16:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author Brandon Alexander - baalexander@gmail.com\n     */\n    \n    var ServiceResponse = require('./ServiceResponse');\n    var ServiceRequest = require('./ServiceRequest');\n    var EventEmitter2 = require('eventemitter2').EventEmitter2;\n    \n    /**\n     * A ROS service client.\n     *\n     * @constructor\n     * @params options - possible keys include:\n     *   * ros - the ROSLIB.Ros connection handle\n     *   * name - the service name, like /add_two_ints\n     *   * serviceType - the service type, like 'rospy_tutorials/AddTwoInts'\n     */\n    function Service(options) {\n      options = options || {};\n      this.ros = options.ros;\n      this.name = options.name;\n      this.serviceType = options.serviceType;\n      this.isAdvertised = false;\n    \n      this._serviceCallback = null;\n    }\n    Service.prototype.__proto__ = EventEmitter2.prototype;\n    /**\n     * Calls the service. Returns the service response in the\n     * callback. Does nothing if this service is currently advertised.\n     *\n     * @param request - the ROSLIB.ServiceRequest to send\n     * @param callback - function with params:\n     *   * response - the response from the service request\n     * @param failedCallback - the callback function when the service call failed (optional). Params:\n     *   * error - the error message reported by ROS\n     */\n    Service.prototype.callService = function(request, callback, failedCallback) {\n      if (this.isAdvertised) {\n        return;\n      }\n    \n      var serviceCallId = 'call_service:' + this.name + ':' + (++this.ros.idCounter);\n    \n      if (callback || failedCallback) {\n        this.ros.once(serviceCallId, function(message) {\n          if (message.result !== undefined && message.result === false) {\n            if (typeof failedCallback === 'function') {\n              failedCallback(message.values);\n            }\n          } else if (typeof callback === 'function') {\n            callback(new ServiceResponse(message.values));\n          }\n        });\n      }\n    \n      var call = {\n        op : 'call_service',\n        id : serviceCallId,\n        service : this.name,\n        type: this.serviceType,\n        args : request\n      };\n      this.ros.callOnConnection(call);\n    };\n    \n    /**\n     * Advertise the service. This turns the Service object from a client\n     * into a server. The callback will be called with every request\n     * that's made on this service.\n     *\n     * @param callback - This works similarly to the callback for a C++ service and should take the following params:\n     *   * request - the service request\n     *   * response - an empty dictionary. Take care not to overwrite this. Instead, only modify the values within.\n     *   It should return true if the service has finished successfully,\n     *   i.e. without any fatal errors.\n     */\n    Service.prototype.advertise = function(callback) {\n      if (this.isAdvertised || typeof callback !== 'function') {\n        return;\n      }\n    \n      this._serviceCallback = callback;\n      this.ros.on(this.name, this._serviceResponse.bind(this));\n      this.ros.callOnConnection({\n        op: 'advertise_service',\n        type: this.serviceType,\n        service: this.name\n      });\n      this.isAdvertised = true;\n    };\n    \n    Service.prototype.unadvertise = function() {\n      if (!this.isAdvertised) {\n        return;\n      }\n      this.ros.callOnConnection({\n        op: 'unadvertise_service',\n        service: this.name\n      });\n      this.isAdvertised = false;\n    };\n    \n    Service.prototype._serviceResponse = function(rosbridgeRequest) {\n      var response = {};\n      var success = this._serviceCallback(rosbridgeRequest.args, response);\n    \n      var call = {\n        op: 'service_response',\n        service: this.name,\n        values: new ServiceResponse(response),\n        result: success\n      };\n    \n      if (rosbridgeRequest.id) {\n        call.id = rosbridgeRequest.id;\n      }\n    \n      this.ros.callOnConnection(call);\n    };\n    \n    module.exports = Service;\n    \n    },{\"./ServiceRequest\":17,\"./ServiceResponse\":18,\"eventemitter2\":2}],17:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author Brandon Alexander - balexander@willowgarage.com\n     */\n    \n    var assign = require('object-assign');\n    \n    /**\n     * A ServiceRequest is passed into the service call.\n     *\n     * @constructor\n     * @param values - object matching the fields defined in the .srv definition file\n     */\n    function ServiceRequest(values) {\n      assign(this, values);\n    }\n    \n    module.exports = ServiceRequest;\n    },{\"object-assign\":3}],18:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author Brandon Alexander - balexander@willowgarage.com\n     */\n    \n    var assign = require('object-assign');\n    \n    /**\n     * A ServiceResponse is returned from the service call.\n     *\n     * @constructor\n     * @param values - object matching the fields defined in the .srv definition file\n     */\n    function ServiceResponse(values) {\n      assign(this, values);\n    }\n    \n    module.exports = ServiceResponse;\n    },{\"object-assign\":3}],19:[function(require,module,exports){\n    /**\n     * Socket event handling utilities for handling events on either\n     * WebSocket and TCP sockets\n     *\n     * Note to anyone reviewing this code: these functions are called\n     * in the context of their parent object, unless bound\n     * @fileOverview\n     */\n    'use strict';\n    \n    var decompressPng = require('../util/decompressPng');\n    var CBOR = require('cbor-js');\n    var typedArrayTagger = require('../util/cborTypedArrayTags');\n    var BSON = null;\n    if(typeof bson !== 'undefined'){\n        BSON = bson().BSON;\n    }\n    \n    /**\n     * Events listeners for a WebSocket or TCP socket to a JavaScript\n     * ROS Client. Sets up Messages for a given topic to trigger an\n     * event on the ROS client.\n     *\n     * @namespace SocketAdapter\n     * @private\n     */\n    function SocketAdapter(client) {\n      function handleMessage(message) {\n        if (message.op === 'publish') {\n          client.emit(message.topic, message.msg);\n        } else if (message.op === 'service_response') {\n          client.emit(message.id, message);\n        } else if (message.op === 'call_service') {\n          client.emit(message.service, message);\n        } else if(message.op === 'status'){\n          if(message.id){\n            client.emit('status:'+message.id, message);\n          } else {\n            client.emit('status', message);\n          }\n        }\n      }\n    \n      function handlePng(message, callback) {\n        if (message.op === 'png') {\n          decompressPng(message.data, callback);\n        } else {\n          callback(message);\n        }\n      }\n    \n      function decodeBSON(data, callback) {\n        if (!BSON) {\n          throw 'Cannot process BSON encoded message without BSON header.';\n        }\n        var reader = new FileReader();\n        reader.onload  = function() {\n          var uint8Array = new Uint8Array(this.result);\n          var msg = BSON.deserialize(uint8Array);\n          callback(msg);\n        };\n        reader.readAsArrayBuffer(data);\n      }\n    \n      return {\n        /**\n         * Emits a 'connection' event on WebSocket connection.\n         *\n         * @param event - the argument to emit with the event.\n         * @memberof SocketAdapter\n         */\n        onopen: function onOpen(event) {\n          client.isConnected = true;\n          client.emit('connection', event);\n        },\n    \n        /**\n         * Emits a 'close' event on WebSocket disconnection.\n         *\n         * @param event - the argument to emit with the event.\n         * @memberof SocketAdapter\n         */\n        onclose: function onClose(event) {\n          client.isConnected = false;\n          client.emit('close', event);\n        },\n    \n        /**\n         * Emits an 'error' event whenever there was an error.\n         *\n         * @param event - the argument to emit with the event.\n         * @memberof SocketAdapter\n         */\n        onerror: function onError(event) {\n          client.emit('error', event);\n        },\n    \n        /**\n         * Parses message responses from rosbridge and sends to the appropriate\n         * topic, service, or param.\n         *\n         * @param message - the raw JSON message from rosbridge.\n         * @memberof SocketAdapter\n         */\n        onmessage: function onMessage(data) {\n          if (typeof Blob !== 'undefined' && data.data instanceof Blob) {\n            decodeBSON(data.data, function (message) {\n              handlePng(message, handleMessage);\n            });\n          } else if (data.data instanceof ArrayBuffer) {\n            var decoded = CBOR.decode(data.data, typedArrayTagger);\n            handleMessage(decoded);\n          } else {\n            var message = JSON.parse(typeof data === 'string' ? data : data.data);\n            handlePng(message, handleMessage);\n          }\n        }\n      };\n    }\n    \n    module.exports = SocketAdapter;\n    \n    },{\"../util/cborTypedArrayTags\":42,\"../util/decompressPng\":45,\"cbor-js\":1}],20:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author Brandon Alexander - baalexander@gmail.com\n     */\n    \n    var EventEmitter2 = require('eventemitter2').EventEmitter2;\n    var Message = require('./Message');\n    \n    /**\n     * Publish and/or subscribe to a topic in ROS.\n     *\n     * Emits the following events:\n     *  * 'warning' - if there are any warning during the Topic creation\n     *  * 'message' - the message data from rosbridge\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *   * ros - the ROSLIB.Ros connection handle\n     *   * name - the topic name, like /cmd_vel\n     *   * messageType - the message type, like 'std_msgs/String'\n     *   * compression - the type of compression to use, like 'png', 'cbor', or 'cbor-raw'\n     *   * throttle_rate - the rate (in ms in between messages) at which to throttle the topics\n     *   * queue_size - the queue created at bridge side for re-publishing webtopics (defaults to 100)\n     *   * latch - latch the topic when publishing\n     *   * queue_length - the queue length at bridge side used when subscribing (defaults to 0, no queueing).\n     *   * reconnect_on_close - the flag to enable resubscription and readvertisement on close event(defaults to true).\n     */\n    function Topic(options) {\n      options = options || {};\n      this.ros = options.ros;\n      this.name = options.name;\n      this.messageType = options.messageType;\n      this.isAdvertised = false;\n      this.compression = options.compression || 'none';\n      this.throttle_rate = options.throttle_rate || 0;\n      this.latch = options.latch || false;\n      this.queue_size = options.queue_size || 100;\n      this.queue_length = options.queue_length || 0;\n      this.reconnect_on_close = options.reconnect_on_close !== undefined ? options.reconnect_on_close : true;\n    \n      // Check for valid compression types\n      if (this.compression && this.compression !== 'png' &&\n        this.compression !== 'cbor' && this.compression !== 'cbor-raw' &&\n        this.compression !== 'none') {\n        this.emit('warning', this.compression +\n          ' compression is not supported. No compression will be used.');\n        this.compression = 'none';\n      }\n    \n      // Check if throttle rate is negative\n      if (this.throttle_rate < 0) {\n        this.emit('warning', this.throttle_rate + ' is not allowed. Set to 0');\n        this.throttle_rate = 0;\n      }\n    \n      var that = this;\n      if (this.reconnect_on_close) {\n        this.callForSubscribeAndAdvertise = function(message) {\n          that.ros.callOnConnection(message);\n    \n          that.waitForReconnect = false;\n          that.reconnectFunc = function() {\n            if(!that.waitForReconnect) {\n              that.waitForReconnect = true;\n              that.ros.callOnConnection(message);\n              that.ros.once('connection', function() {\n                that.waitForReconnect = false;\n              });\n            }\n          };\n          that.ros.on('close', that.reconnectFunc);\n        };\n      }\n      else {\n        this.callForSubscribeAndAdvertise = this.ros.callOnConnection;\n      }\n    \n      this._messageCallback = function(data) {\n        that.emit('message', new Message(data));\n      };\n    }\n    Topic.prototype.__proto__ = EventEmitter2.prototype;\n    \n    /**\n     * Every time a message is published for the given topic, the callback\n     * will be called with the message object.\n     *\n     * @param callback - function with the following params:\n     *   * message - the published message\n     */\n    Topic.prototype.subscribe = function(callback) {\n      if (typeof callback === 'function') {\n        this.on('message', callback);\n      }\n    \n      if (this.subscribeId) { return; }\n      this.ros.on(this.name, this._messageCallback);\n      this.subscribeId = 'subscribe:' + this.name + ':' + (++this.ros.idCounter);\n    \n      this.callForSubscribeAndAdvertise({\n        op: 'subscribe',\n        id: this.subscribeId,\n        type: this.messageType,\n        topic: this.name,\n        compression: this.compression,\n        throttle_rate: this.throttle_rate,\n        queue_length: this.queue_length\n      });\n    };\n    \n    /**\n     * Unregisters as a subscriber for the topic. Unsubscribing stop remove\n     * all subscribe callbacks. To remove a call back, you must explicitly\n     * pass the callback function in.\n     *\n     * @param callback - the optional callback to unregister, if\n     *     * provided and other listeners are registered the topic won't\n     *     * unsubscribe, just stop emitting to the passed listener\n     */\n    Topic.prototype.unsubscribe = function(callback) {\n      if (callback) {\n        this.off('message', callback);\n        // If there is any other callbacks still subscribed don't unsubscribe\n        if (this.listeners('message').length) { return; }\n      }\n      if (!this.subscribeId) { return; }\n      // Note: Don't call this.removeAllListeners, allow client to handle that themselves\n      this.ros.off(this.name, this._messageCallback);\n      if(this.reconnect_on_close) {\n        this.ros.off('close', this.reconnectFunc);\n      }\n      this.emit('unsubscribe');\n      this.ros.callOnConnection({\n        op: 'unsubscribe',\n        id: this.subscribeId,\n        topic: this.name\n      });\n      this.subscribeId = null;\n    };\n    \n    \n    /**\n     * Registers as a publisher for the topic.\n     */\n    Topic.prototype.advertise = function() {\n      if (this.isAdvertised) {\n        return;\n      }\n      this.advertiseId = 'advertise:' + this.name + ':' + (++this.ros.idCounter);\n      this.callForSubscribeAndAdvertise({\n        op: 'advertise',\n        id: this.advertiseId,\n        type: this.messageType,\n        topic: this.name,\n        latch: this.latch,\n        queue_size: this.queue_size\n      });\n      this.isAdvertised = true;\n    \n      if(!this.reconnect_on_close) {\n        var that = this;\n        this.ros.on('close', function() {\n          that.isAdvertised = false;\n        });\n      }\n    };\n    \n    /**\n     * Unregisters as a publisher for the topic.\n     */\n    Topic.prototype.unadvertise = function() {\n      if (!this.isAdvertised) {\n        return;\n      }\n      if(this.reconnect_on_close) {\n        this.ros.off('close', this.reconnectFunc);\n      }\n      this.emit('unadvertise');\n      this.ros.callOnConnection({\n        op: 'unadvertise',\n        id: this.advertiseId,\n        topic: this.name\n      });\n      this.isAdvertised = false;\n    };\n    \n    /**\n     * Publish the message.\n     *\n     * @param message - A ROSLIB.Message object.\n     */\n    Topic.prototype.publish = function(message) {\n      if (!this.isAdvertised) {\n        this.advertise();\n      }\n    \n      this.ros.idCounter++;\n      var call = {\n        op: 'publish',\n        id: 'publish:' + this.name + ':' + this.ros.idCounter,\n        topic: this.name,\n        msg: message,\n        latch: this.latch\n      };\n      this.ros.callOnConnection(call);\n    };\n    \n    module.exports = Topic;\n    \n    },{\"./Message\":13,\"eventemitter2\":2}],21:[function(require,module,exports){\n    var mixin = require('../mixin');\n    \n    var core = module.exports = {\n        Ros: require('./Ros'),\n        Topic: require('./Topic'),\n        Message: require('./Message'),\n        Param: require('./Param'),\n        Service: require('./Service'),\n        ServiceRequest: require('./ServiceRequest'),\n        ServiceResponse: require('./ServiceResponse')\n    };\n    \n    mixin(core.Ros, ['Param', 'Service', 'Topic'], core);\n    \n    },{\"../mixin\":27,\"./Message\":13,\"./Param\":14,\"./Ros\":15,\"./Service\":16,\"./ServiceRequest\":17,\"./ServiceResponse\":18,\"./Topic\":20}],22:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author David Gossow - dgossow@willowgarage.com\n     */\n    \n    var Vector3 = require('./Vector3');\n    var Quaternion = require('./Quaternion');\n    \n    /**\n     * A Pose in 3D space. Values are copied into this object.\n     *\n     *  @constructor\n     *  @param options - object with following keys:\n     *   * position - the Vector3 describing the position\n     *   * orientation - the ROSLIB.Quaternion describing the orientation\n     */\n    function Pose(options) {\n      options = options || {};\n      // copy the values into this object if they exist\n      this.position = new Vector3(options.position);\n      this.orientation = new Quaternion(options.orientation);\n    }\n    \n    /**\n     * Apply a transform against this pose.\n     *\n     * @param tf the transform\n     */\n    Pose.prototype.applyTransform = function(tf) {\n      this.position.multiplyQuaternion(tf.rotation);\n      this.position.add(tf.translation);\n      var tmp = tf.rotation.clone();\n      tmp.multiply(this.orientation);\n      this.orientation = tmp;\n    };\n    \n    /**\n     * Clone a copy of this pose.\n     *\n     * @returns the cloned pose\n     */\n    Pose.prototype.clone = function() {\n      return new Pose(this);\n    };\n    \n    /**\n     * Multiplies this pose with another pose without altering this pose.\n     *\n     * @returns Result of multiplication.\n     */\n    Pose.prototype.multiply = function(pose) {\n      var p = pose.clone();\n      p.applyTransform({ rotation: this.orientation, translation: this.position });\n      return p;\n    };\n    \n    /**\n     * Computes the inverse of this pose.\n     *\n     * @returns Inverse of pose.\n     */\n    Pose.prototype.getInverse = function() {\n      var inverse = this.clone();\n      inverse.orientation.invert();\n      inverse.position.multiplyQuaternion(inverse.orientation);\n      inverse.position.x *= -1;\n      inverse.position.y *= -1;\n      inverse.position.z *= -1;\n      return inverse;\n    };\n    \n    module.exports = Pose;\n    },{\"./Quaternion\":23,\"./Vector3\":25}],23:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author David Gossow - dgossow@willowgarage.com\n     */\n    \n    /**\n     * A Quaternion.\n     *\n     *  @constructor\n     *  @param options - object with following keys:\n     *   * x - the x value\n     *   * y - the y value\n     *   * z - the z value\n     *   * w - the w value\n     */\n    function Quaternion(options) {\n      options = options || {};\n      this.x = options.x || 0;\n      this.y = options.y || 0;\n      this.z = options.z || 0;\n      this.w = (typeof options.w === 'number') ? options.w : 1;\n    }\n    \n    /**\n     * Perform a conjugation on this quaternion.\n     */\n    Quaternion.prototype.conjugate = function() {\n      this.x *= -1;\n      this.y *= -1;\n      this.z *= -1;\n    };\n    \n    /**\n     * Return the norm of this quaternion.\n     */\n    Quaternion.prototype.norm = function() {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    };\n    \n    /**\n     * Perform a normalization on this quaternion.\n     */\n    Quaternion.prototype.normalize = function() {\n      var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n      if (l === 0) {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 1;\n      } else {\n        l = 1 / l;\n        this.x = this.x * l;\n        this.y = this.y * l;\n        this.z = this.z * l;\n        this.w = this.w * l;\n      }\n    };\n    \n    /**\n     * Convert this quaternion into its inverse.\n     */\n    Quaternion.prototype.invert = function() {\n      this.conjugate();\n      this.normalize();\n    };\n    \n    /**\n     * Set the values of this quaternion to the product of itself and the given quaternion.\n     *\n     * @param q the quaternion to multiply with\n     */\n    Quaternion.prototype.multiply = function(q) {\n      var newX = this.x * q.w + this.y * q.z - this.z * q.y + this.w * q.x;\n      var newY = -this.x * q.z + this.y * q.w + this.z * q.x + this.w * q.y;\n      var newZ = this.x * q.y - this.y * q.x + this.z * q.w + this.w * q.z;\n      var newW = -this.x * q.x - this.y * q.y - this.z * q.z + this.w * q.w;\n      this.x = newX;\n      this.y = newY;\n      this.z = newZ;\n      this.w = newW;\n    };\n    \n    /**\n     * Clone a copy of this quaternion.\n     *\n     * @returns the cloned quaternion\n     */\n    Quaternion.prototype.clone = function() {\n      return new Quaternion(this);\n    };\n    \n    module.exports = Quaternion;\n    \n    },{}],24:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author David Gossow - dgossow@willowgarage.com\n     */\n    \n    var Vector3 = require('./Vector3');\n    var Quaternion = require('./Quaternion');\n    \n    /**\n     * A Transform in 3-space. Values are copied into this object.\n     *\n     *  @constructor\n     *  @param options - object with following keys:\n     *   * translation - the Vector3 describing the translation\n     *   * rotation - the ROSLIB.Quaternion describing the rotation\n     */\n    function Transform(options) {\n      options = options || {};\n      // Copy the values into this object if they exist\n      this.translation = new Vector3(options.translation);\n      this.rotation = new Quaternion(options.rotation);\n    }\n    \n    /**\n     * Clone a copy of this transform.\n     *\n     * @returns the cloned transform\n     */\n    Transform.prototype.clone = function() {\n      return new Transform(this);\n    };\n    \n    module.exports = Transform;\n    },{\"./Quaternion\":23,\"./Vector3\":25}],25:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author David Gossow - dgossow@willowgarage.com\n     */\n    \n    /**\n     * A 3D vector.\n     *\n     *  @constructor\n     *  @param options - object with following keys:\n     *   * x - the x value\n     *   * y - the y value\n     *   * z - the z value\n     */\n    function Vector3(options) {\n      options = options || {};\n      this.x = options.x || 0;\n      this.y = options.y || 0;\n      this.z = options.z || 0;\n    }\n    \n    /**\n     * Set the values of this vector to the sum of itself and the given vector.\n     *\n     * @param v the vector to add with\n     */\n    Vector3.prototype.add = function(v) {\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n    };\n    \n    /**\n     * Set the values of this vector to the difference of itself and the given vector.\n     *\n     * @param v the vector to subtract with\n     */\n    Vector3.prototype.subtract = function(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n    };\n    \n    /**\n     * Multiply the given Quaternion with this vector.\n     *\n     * @param q - the quaternion to multiply with\n     */\n    Vector3.prototype.multiplyQuaternion = function(q) {\n      var ix = q.w * this.x + q.y * this.z - q.z * this.y;\n      var iy = q.w * this.y + q.z * this.x - q.x * this.z;\n      var iz = q.w * this.z + q.x * this.y - q.y * this.x;\n      var iw = -q.x * this.x - q.y * this.y - q.z * this.z;\n      this.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n      this.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n      this.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n    };\n    \n    /**\n     * Clone a copy of this vector.\n     *\n     * @returns the cloned vector\n     */\n    Vector3.prototype.clone = function() {\n      return new Vector3(this);\n    };\n    \n    module.exports = Vector3;\n    },{}],26:[function(require,module,exports){\n    module.exports = {\n        Pose: require('./Pose'),\n        Quaternion: require('./Quaternion'),\n        Transform: require('./Transform'),\n        Vector3: require('./Vector3')\n    };\n    \n    },{\"./Pose\":22,\"./Quaternion\":23,\"./Transform\":24,\"./Vector3\":25}],27:[function(require,module,exports){\n    /**\n     * Mixin a feature to the core/Ros prototype.\n     * For example, mixin(Ros, ['Topic'], {Topic: <Topic>})\n     * will add a topic bound to any Ros instances so a user\n     * can call `var topic = ros.Topic({name: '/foo'});`\n     *\n     * @author Graeme Yeates - github.com/megawac\n     */\n    module.exports = function(Ros, classes, features) {\n        classes.forEach(function(className) {\n            var Class = features[className];\n            Ros.prototype[className] = function(options) {\n                options.ros = this;\n                return new Class(options);\n            };\n        });\n    };\n    \n    },{}],28:[function(require,module,exports){\n    /**\n     * @fileoverview\n     * @author David Gossow - dgossow@willowgarage.com\n     */\n    \n    var ActionClient = require('../actionlib/ActionClient');\n    var Goal = require('../actionlib/Goal');\n    \n    var Service = require('../core/Service.js');\n    var ServiceRequest = require('../core/ServiceRequest.js');\n    var Topic = require('../core/Topic.js');\n    \n    var Transform = require('../math/Transform');\n    \n    /**\n     * A TF Client that listens to TFs from tf2_web_republisher.\n     *\n     *  @constructor\n     *  @param options - object with following keys:\n     *   * ros - the ROSLIB.Ros connection handle\n     *   * fixedFrame - the fixed frame, like /base_link\n     *   * angularThres - the angular threshold for the TF republisher\n     *   * transThres - the translation threshold for the TF republisher\n     *   * rate - the rate for the TF republisher\n     *   * updateDelay - the time (in ms) to wait after a new subscription\n     *                   to update the TF republisher's list of TFs\n     *   * topicTimeout - the timeout parameter for the TF republisher\n     *   * serverName (optional) - the name of the tf2_web_republisher server\n     *   * repubServiceName (optional) - the name of the republish_tfs service (non groovy compatibility mode only)\n     *   \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t default: '/republish_tfs'\n     */\n    function TFClient(options) {\n      options = options || {};\n      this.ros = options.ros;\n      this.fixedFrame = options.fixedFrame || '/base_link';\n      this.angularThres = options.angularThres || 2.0;\n      this.transThres = options.transThres || 0.01;\n      this.rate = options.rate || 10.0;\n      this.updateDelay = options.updateDelay || 50;\n      var seconds = options.topicTimeout || 2.0;\n      var secs = Math.floor(seconds);\n      var nsecs = Math.floor((seconds - secs) * 1000000000);\n      this.topicTimeout = {\n        secs: secs,\n        nsecs: nsecs\n      };\n      this.serverName = options.serverName || '/tf2_web_republisher';\n      this.repubServiceName = options.repubServiceName || '/republish_tfs';\n    \n      this.currentGoal = false;\n      this.currentTopic = false;\n      this.frameInfos = {};\n      this.republisherUpdateRequested = false;\n    \n      // Create an Action client\n      this.actionClient = new ActionClient({\n        ros : options.ros,\n        serverName : this.serverName,\n        actionName : 'tf2_web_republisher/TFSubscriptionAction',\n        omitStatus : true,\n        omitResult : true\n      });\n    \n      // Create a Service client\n      this.serviceClient = new Service({\n        ros: options.ros,\n        name: this.repubServiceName,\n        serviceType: 'tf2_web_republisher/RepublishTFs'\n      });\n    }\n    \n    /**\n     * Process the incoming TF message and send them out using the callback\n     * functions.\n     *\n     * @param tf - the TF message from the server\n     */\n    TFClient.prototype.processTFArray = function(tf) {\n      var that = this;\n      tf.transforms.forEach(function(transform) {\n        var frameID = transform.child_frame_id;\n        if (frameID[0] === '/')\n        {\n          frameID = frameID.substring(1);\n        }\n        var info = this.frameInfos[frameID];\n        if (info) {\n          info.transform = new Transform({\n            translation : transform.transform.translation,\n            rotation : transform.transform.rotation\n          });\n          info.cbs.forEach(function(cb) {\n            cb(info.transform);\n          });\n        }\n      }, this);\n    };\n    \n    /**\n     * Create and send a new goal (or service request) to the tf2_web_republisher\n     * based on the current list of TFs.\n     */\n    TFClient.prototype.updateGoal = function() {\n      var goalMessage = {\n        source_frames : Object.keys(this.frameInfos),\n        target_frame : this.fixedFrame,\n        angular_thres : this.angularThres,\n        trans_thres : this.transThres,\n        rate : this.rate\n      };\n    \n      // if we're running in groovy compatibility mode (the default)\n      // then use the action interface to tf2_web_republisher\n      if(this.ros.groovyCompatibility) {\n        if (this.currentGoal) {\n          this.currentGoal.cancel();\n        }\n        this.currentGoal = new Goal({\n          actionClient : this.actionClient,\n          goalMessage : goalMessage\n        });\n    \n        this.currentGoal.on('feedback', this.processTFArray.bind(this));\n        this.currentGoal.send();\n      }\n      else {\n        // otherwise, use the service interface\n        // The service interface has the same parameters as the action,\n        // plus the timeout\n        goalMessage.timeout = this.topicTimeout;\n        var request = new ServiceRequest(goalMessage);\n    \n        this.serviceClient.callService(request, this.processResponse.bind(this));\n      }\n    \n      this.republisherUpdateRequested = false;\n    };\n    \n    /**\n     * Process the service response and subscribe to the tf republisher\n     * topic\n     *\n     * @param response the service response containing the topic name\n     */\n    TFClient.prototype.processResponse = function(response) {\n      // if we subscribed to a topic before, unsubscribe so\n      // the republisher stops publishing it\n      if (this.currentTopic) {\n        this.currentTopic.unsubscribe();\n      }\n    \n      this.currentTopic = new Topic({\n        ros: this.ros,\n        name: response.topic_name,\n        messageType: 'tf2_web_republisher/TFArray'\n      });\n      this.currentTopic.subscribe(this.processTFArray.bind(this));\n    };\n    \n    /**\n     * Subscribe to the given TF frame.\n     *\n     * @param frameID - the TF frame to subscribe to\n     * @param callback - function with params:\n     *   * transform - the transform data\n     */\n    TFClient.prototype.subscribe = function(frameID, callback) {\n      // remove leading slash, if it's there\n      if (frameID[0] === '/')\n      {\n        frameID = frameID.substring(1);\n      }\n      // if there is no callback registered for the given frame, create emtpy callback list\n      if (!this.frameInfos[frameID]) {\n        this.frameInfos[frameID] = {\n          cbs: []\n        };\n        if (!this.republisherUpdateRequested) {\n          setTimeout(this.updateGoal.bind(this), this.updateDelay);\n          this.republisherUpdateRequested = true;\n        }\n      }\n      // if we already have a transform, call back immediately\n      else if (this.frameInfos[frameID].transform) {\n        callback(this.frameInfos[frameID].transform);\n      }\n      this.frameInfos[frameID].cbs.push(callback);\n    };\n    \n    /**\n     * Unsubscribe from the given TF frame.\n     *\n     * @param frameID - the TF frame to unsubscribe from\n     * @param callback - the callback function to remove\n     */\n    TFClient.prototype.unsubscribe = function(frameID, callback) {\n      // remove leading slash, if it's there\n      if (frameID[0] === '/')\n      {\n        frameID = frameID.substring(1);\n      }\n      var info = this.frameInfos[frameID];\n      for (var cbs = info && info.cbs || [], idx = cbs.length; idx--;) {\n        if (cbs[idx] === callback) {\n          cbs.splice(idx, 1);\n        }\n      }\n      if (!callback || cbs.length === 0) {\n        delete this.frameInfos[frameID];\n      }\n    };\n    \n    /**\n     * Unsubscribe and unadvertise all topics associated with this TFClient.\n     */\n    TFClient.prototype.dispose = function() {\n      this.actionClient.dispose();\n      if (this.currentTopic) {\n        this.currentTopic.unsubscribe();\n      }\n    };\n    \n    module.exports = TFClient;\n    \n    },{\"../actionlib/ActionClient\":8,\"../actionlib/Goal\":10,\"../core/Service.js\":16,\"../core/ServiceRequest.js\":17,\"../core/Topic.js\":20,\"../math/Transform\":24}],29:[function(require,module,exports){\n    var Ros = require('../core/Ros');\n    var mixin = require('../mixin');\n    \n    var tf = module.exports = {\n        TFClient: require('./TFClient')\n    };\n    \n    mixin(Ros, ['TFClient'], tf);\n    },{\"../core/Ros\":15,\"../mixin\":27,\"./TFClient\":28}],30:[function(require,module,exports){\n    /**\n     * @fileOverview \n     * @author Benjamin Pitzer - ben.pitzer@gmail.com\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var Vector3 = require('../math/Vector3');\n    var UrdfTypes = require('./UrdfTypes');\n    \n    /**\n     * A Box element in a URDF.\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *  * xml - the XML element to parse\n     */\n    function UrdfBox(options) {\n      this.dimension = null;\n      this.type = UrdfTypes.URDF_BOX;\n    \n      // Parse the xml string\n      var xyz = options.xml.getAttribute('size').split(' ');\n      this.dimension = new Vector3({\n        x : parseFloat(xyz[0]),\n        y : parseFloat(xyz[1]),\n        z : parseFloat(xyz[2])\n      });\n    }\n    \n    module.exports = UrdfBox;\n    },{\"../math/Vector3\":25,\"./UrdfTypes\":39}],31:[function(require,module,exports){\n    /**\n     * @fileOverview \n     * @author Benjamin Pitzer - ben.pitzer@gmail.com\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    /**\n     * A Color element in a URDF.\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *  * xml - the XML element to parse\n     */\n    function UrdfColor(options) {\n      // Parse the xml string\n      var rgba = options.xml.getAttribute('rgba').split(' ');\n      this.r = parseFloat(rgba[0]);\n      this.g = parseFloat(rgba[1]);\n      this.b = parseFloat(rgba[2]);\n      this.a = parseFloat(rgba[3]);\n    }\n    \n    module.exports = UrdfColor;\n    },{}],32:[function(require,module,exports){\n    /**\n     * @fileOverview \n     * @author Benjamin Pitzer - ben.pitzer@gmail.com\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var UrdfTypes = require('./UrdfTypes');\n    \n    /**\n     * A Cylinder element in a URDF.\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *  * xml - the XML element to parse\n     */\n    function UrdfCylinder(options) {\n      this.type = UrdfTypes.URDF_CYLINDER;\n      this.length = parseFloat(options.xml.getAttribute('length'));\n      this.radius = parseFloat(options.xml.getAttribute('radius'));\n    }\n    \n    module.exports = UrdfCylinder;\n    },{\"./UrdfTypes\":39}],33:[function(require,module,exports){\n    /**\n     * @fileOverview\n     * @author David V. Lu!!  davidvlu@gmail.com\n     */\n    \n    var Pose = require('../math/Pose');\n    var Vector3 = require('../math/Vector3');\n    var Quaternion = require('../math/Quaternion');\n    \n    /**\n     * A Joint element in a URDF.\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *  * xml - the XML element to parse\n     */\n    function UrdfJoint(options) {\n      this.name = options.xml.getAttribute('name');\n      this.type = options.xml.getAttribute('type');\n    \n      var parents = options.xml.getElementsByTagName('parent');\n      if(parents.length > 0) {\n        this.parent = parents[0].getAttribute('link');\n      }\n    \n      var children = options.xml.getElementsByTagName('child');\n      if(children.length > 0) {\n        this.child = children[0].getAttribute('link');\n      }\n    \n      var limits = options.xml.getElementsByTagName('limit');\n      if (limits.length > 0) {\n        this.minval = parseFloat( limits[0].getAttribute('lower') );\n        this.maxval = parseFloat( limits[0].getAttribute('upper') );\n      }\n    \n      // Origin\n      var origins = options.xml.getElementsByTagName('origin');\n      if (origins.length === 0) {\n        // use the identity as the default\n        this.origin = new Pose();\n      } else {\n        // Check the XYZ\n        var xyz = origins[0].getAttribute('xyz');\n        var position = new Vector3();\n        if (xyz) {\n          xyz = xyz.split(' ');\n          position = new Vector3({\n            x : parseFloat(xyz[0]),\n            y : parseFloat(xyz[1]),\n            z : parseFloat(xyz[2])\n          });\n        }\n    \n        // Check the RPY\n        var rpy = origins[0].getAttribute('rpy');\n        var orientation = new Quaternion();\n        if (rpy) {\n          rpy = rpy.split(' ');\n          // Convert from RPY\n          var roll = parseFloat(rpy[0]);\n          var pitch = parseFloat(rpy[1]);\n          var yaw = parseFloat(rpy[2]);\n          var phi = roll / 2.0;\n          var the = pitch / 2.0;\n          var psi = yaw / 2.0;\n          var x = Math.sin(phi) * Math.cos(the) * Math.cos(psi) - Math.cos(phi) * Math.sin(the)\n              * Math.sin(psi);\n          var y = Math.cos(phi) * Math.sin(the) * Math.cos(psi) + Math.sin(phi) * Math.cos(the)\n              * Math.sin(psi);\n          var z = Math.cos(phi) * Math.cos(the) * Math.sin(psi) - Math.sin(phi) * Math.sin(the)\n              * Math.cos(psi);\n          var w = Math.cos(phi) * Math.cos(the) * Math.cos(psi) + Math.sin(phi) * Math.sin(the)\n              * Math.sin(psi);\n    \n          orientation = new Quaternion({\n            x : x,\n            y : y,\n            z : z,\n            w : w\n          });\n          orientation.normalize();\n        }\n        this.origin = new Pose({\n          position : position,\n          orientation : orientation\n        });\n      }\n    }\n    \n    module.exports = UrdfJoint;\n    \n    },{\"../math/Pose\":22,\"../math/Quaternion\":23,\"../math/Vector3\":25}],34:[function(require,module,exports){\n    /**\n     * @fileOverview \n     * @author Benjamin Pitzer - ben.pitzer@gmail.com\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var UrdfVisual = require('./UrdfVisual');\n    \n    /**\n     * A Link element in a URDF.\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *  * xml - the XML element to parse\n     */\n    function UrdfLink(options) {\n      this.name = options.xml.getAttribute('name');\n      this.visuals = [];\n      var visuals = options.xml.getElementsByTagName('visual');\n    \n      for( var i=0; i<visuals.length; i++ ) {\n        this.visuals.push( new UrdfVisual({\n          xml : visuals[i]\n        }) );\n      }\n    }\n    \n    module.exports = UrdfLink;\n    },{\"./UrdfVisual\":40}],35:[function(require,module,exports){\n    /**\n     * @fileOverview \n     * @author Benjamin Pitzer - ben.pitzer@gmail.com\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var UrdfColor = require('./UrdfColor');\n    \n    /**\n     * A Material element in a URDF.\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *  * xml - the XML element to parse\n     */\n    function UrdfMaterial(options) {\n      this.textureFilename = null;\n      this.color = null;\n    \n      this.name = options.xml.getAttribute('name');\n    \n      // Texture\n      var textures = options.xml.getElementsByTagName('texture');\n      if (textures.length > 0) {\n        this.textureFilename = textures[0].getAttribute('filename');\n      }\n    \n      // Color\n      var colors = options.xml.getElementsByTagName('color');\n      if (colors.length > 0) {\n        // Parse the RBGA string\n        this.color = new UrdfColor({\n          xml : colors[0]\n        });\n      }\n    }\n    \n    UrdfMaterial.prototype.isLink = function() {\n      return this.color === null && this.textureFilename === null;\n    };\n    \n    var assign = require('object-assign');\n    \n    UrdfMaterial.prototype.assign = function(obj) {\n        return assign(this, obj);\n    };\n    \n    module.exports = UrdfMaterial;\n    \n    },{\"./UrdfColor\":31,\"object-assign\":3}],36:[function(require,module,exports){\n    /**\n     * @fileOverview \n     * @author Benjamin Pitzer - ben.pitzer@gmail.com\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var Vector3 = require('../math/Vector3');\n    var UrdfTypes = require('./UrdfTypes');\n    \n    /**\n     * A Mesh element in a URDF.\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *  * xml - the XML element to parse\n     */\n    function UrdfMesh(options) {\n      this.scale = null;\n    \n      this.type = UrdfTypes.URDF_MESH;\n      this.filename = options.xml.getAttribute('filename');\n    \n      // Check for a scale\n      var scale = options.xml.getAttribute('scale');\n      if (scale) {\n        // Get the XYZ\n        var xyz = scale.split(' ');\n        this.scale = new Vector3({\n          x : parseFloat(xyz[0]),\n          y : parseFloat(xyz[1]),\n          z : parseFloat(xyz[2])\n        });\n      }\n    }\n    \n    module.exports = UrdfMesh;\n    },{\"../math/Vector3\":25,\"./UrdfTypes\":39}],37:[function(require,module,exports){\n    /**\n     * @fileOverview \n     * @author Benjamin Pitzer - ben.pitzer@gmail.com\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var UrdfMaterial = require('./UrdfMaterial');\n    var UrdfLink = require('./UrdfLink');\n    var UrdfJoint = require('./UrdfJoint');\n    var DOMParser = require('xmldom').DOMParser;\n    \n    // See https://developer.mozilla.org/docs/XPathResult#Constants\n    var XPATH_FIRST_ORDERED_NODE_TYPE = 9;\n    \n    /**\n     * A URDF Model can be used to parse a given URDF into the appropriate elements.\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *  * xml - the XML element to parse\n     *  * string - the XML element to parse as a string\n     */\n    function UrdfModel(options) {\n      options = options || {};\n      var xmlDoc = options.xml;\n      var string = options.string;\n      this.materials = {};\n      this.links = {};\n      this.joints = {};\n    \n      // Check if we are using a string or an XML element\n      if (string) {\n        // Parse the string\n        var parser = new DOMParser();\n        xmlDoc = parser.parseFromString(string, 'text/xml');\n      }\n    \n      // Initialize the model with the given XML node.\n      // Get the robot tag\n      var robotXml = xmlDoc.documentElement;\n    \n      // Get the robot name\n      this.name = robotXml.getAttribute('name');\n    \n      // Parse all the visual elements we need\n      for (var nodes = robotXml.childNodes, i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        if (node.tagName === 'material') {\n          var material = new UrdfMaterial({\n            xml : node\n          });\n          // Make sure this is unique\n          if (this.materials[material.name] !== void 0) {\n            if( this.materials[material.name].isLink() ) {\n              this.materials[material.name].assign( material );\n            } else {\n              console.warn('Material ' + material.name + 'is not unique.');\n            }\n          } else {\n            this.materials[material.name] = material;\n          }\n        } else if (node.tagName === 'link') {\n          var link = new UrdfLink({\n            xml : node\n          });\n          // Make sure this is unique\n          if (this.links[link.name] !== void 0) {\n            console.warn('Link ' + link.name + ' is not unique.');\n          } else {\n            // Check for a material\n            for( var j=0; j<link.visuals.length; j++ )\n            {\n              var mat = link.visuals[j].material; \n              if ( mat !== null ) {\n                if (this.materials[mat.name] !== void 0) {\n                  link.visuals[j].material = this.materials[mat.name];\n                } else {\n                  this.materials[mat.name] = mat;\n                }\n              }\n            }\n    \n            // Add the link\n            this.links[link.name] = link;\n          }\n        } else if (node.tagName === 'joint') {\n          var joint = new UrdfJoint({\n            xml : node\n          });\n          this.joints[joint.name] = joint;\n        }\n      }\n    }\n    \n    module.exports = UrdfModel;\n    \n    },{\"./UrdfJoint\":33,\"./UrdfLink\":34,\"./UrdfMaterial\":35,\"xmldom\":46}],38:[function(require,module,exports){\n    /**\n     * @fileOverview \n     * @author Benjamin Pitzer - ben.pitzer@gmail.com\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var UrdfTypes = require('./UrdfTypes');\n    \n    /**\n     * A Sphere element in a URDF.\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *  * xml - the XML element to parse\n     */\n    function UrdfSphere(options) {\n      this.type = UrdfTypes.URDF_SPHERE;\n      this.radius = parseFloat(options.xml.getAttribute('radius'));\n    }\n    \n    module.exports = UrdfSphere;\n    },{\"./UrdfTypes\":39}],39:[function(require,module,exports){\n    module.exports = {\n        URDF_SPHERE : 0,\n        URDF_BOX : 1,\n        URDF_CYLINDER : 2,\n        URDF_MESH : 3\n    };\n    \n    },{}],40:[function(require,module,exports){\n    /**\n     * @fileOverview \n     * @author Benjamin Pitzer - ben.pitzer@gmail.com\n     * @author Russell Toris - rctoris@wpi.edu\n     */\n    \n    var Pose = require('../math/Pose');\n    var Vector3 = require('../math/Vector3');\n    var Quaternion = require('../math/Quaternion');\n    \n    var UrdfCylinder = require('./UrdfCylinder');\n    var UrdfBox = require('./UrdfBox');\n    var UrdfMaterial = require('./UrdfMaterial');\n    var UrdfMesh = require('./UrdfMesh');\n    var UrdfSphere = require('./UrdfSphere');\n    \n    /**\n     * A Visual element in a URDF.\n     *\n     * @constructor\n     * @param options - object with following keys:\n     *  * xml - the XML element to parse\n     */\n    function UrdfVisual(options) {\n      var xml = options.xml;\n      this.origin = null;\n      this.geometry = null;\n      this.material = null;\n    \n      this.name = options.xml.getAttribute('name');\n    \n      // Origin\n      var origins = xml.getElementsByTagName('origin');\n      if (origins.length === 0) {\n        // use the identity as the default\n        this.origin = new Pose();\n      } else {\n        // Check the XYZ\n        var xyz = origins[0].getAttribute('xyz');\n        var position = new Vector3();\n        if (xyz) {\n          xyz = xyz.split(' ');\n          position = new Vector3({\n            x : parseFloat(xyz[0]),\n            y : parseFloat(xyz[1]),\n            z : parseFloat(xyz[2])\n          });\n        }\n    \n        // Check the RPY\n        var rpy = origins[0].getAttribute('rpy');\n        var orientation = new Quaternion();\n        if (rpy) {\n          rpy = rpy.split(' ');\n          // Convert from RPY\n          var roll = parseFloat(rpy[0]);\n          var pitch = parseFloat(rpy[1]);\n          var yaw = parseFloat(rpy[2]);\n          var phi = roll / 2.0;\n          var the = pitch / 2.0;\n          var psi = yaw / 2.0;\n          var x = Math.sin(phi) * Math.cos(the) * Math.cos(psi) - Math.cos(phi) * Math.sin(the)\n              * Math.sin(psi);\n          var y = Math.cos(phi) * Math.sin(the) * Math.cos(psi) + Math.sin(phi) * Math.cos(the)\n              * Math.sin(psi);\n          var z = Math.cos(phi) * Math.cos(the) * Math.sin(psi) - Math.sin(phi) * Math.sin(the)\n              * Math.cos(psi);\n          var w = Math.cos(phi) * Math.cos(the) * Math.cos(psi) + Math.sin(phi) * Math.sin(the)\n              * Math.sin(psi);\n    \n          orientation = new Quaternion({\n            x : x,\n            y : y,\n            z : z,\n            w : w\n          });\n          orientation.normalize();\n        }\n        this.origin = new Pose({\n          position : position,\n          orientation : orientation\n        });\n      }\n    \n      // Geometry\n      var geoms = xml.getElementsByTagName('geometry');\n      if (geoms.length > 0) {\n        var geom = geoms[0];\n        var shape = null;\n        // Check for the shape\n        for (var i = 0; i < geom.childNodes.length; i++) {\n          var node = geom.childNodes[i];\n          if (node.nodeType === 1) {\n            shape = node;\n            break;\n          }\n        }\n        // Check the type\n        var type = shape.nodeName;\n        if (type === 'sphere') {\n          this.geometry = new UrdfSphere({\n            xml : shape\n          });\n        } else if (type === 'box') {\n          this.geometry = new UrdfBox({\n            xml : shape\n          });\n        } else if (type === 'cylinder') {\n          this.geometry = new UrdfCylinder({\n            xml : shape\n          });\n        } else if (type === 'mesh') {\n          this.geometry = new UrdfMesh({\n            xml : shape\n          });\n        } else {\n          console.warn('Unknown geometry type ' + type);\n        }\n      }\n    \n      // Material\n      var materials = xml.getElementsByTagName('material');\n      if (materials.length > 0) {\n        this.material = new UrdfMaterial({\n          xml : materials[0]\n        });\n      }\n    }\n    \n    module.exports = UrdfVisual;\n    },{\"../math/Pose\":22,\"../math/Quaternion\":23,\"../math/Vector3\":25,\"./UrdfBox\":30,\"./UrdfCylinder\":32,\"./UrdfMaterial\":35,\"./UrdfMesh\":36,\"./UrdfSphere\":38}],41:[function(require,module,exports){\n    module.exports = require('object-assign')({\n        UrdfBox: require('./UrdfBox'),\n        UrdfColor: require('./UrdfColor'),\n        UrdfCylinder: require('./UrdfCylinder'),\n        UrdfLink: require('./UrdfLink'),\n        UrdfMaterial: require('./UrdfMaterial'),\n        UrdfMesh: require('./UrdfMesh'),\n        UrdfModel: require('./UrdfModel'),\n        UrdfSphere: require('./UrdfSphere'),\n        UrdfVisual: require('./UrdfVisual')\n    }, require('./UrdfTypes'));\n    \n    },{\"./UrdfBox\":30,\"./UrdfColor\":31,\"./UrdfCylinder\":32,\"./UrdfLink\":34,\"./UrdfMaterial\":35,\"./UrdfMesh\":36,\"./UrdfModel\":37,\"./UrdfSphere\":38,\"./UrdfTypes\":39,\"./UrdfVisual\":40,\"object-assign\":3}],42:[function(require,module,exports){\n    'use strict';\n    \n    var UPPER32 = Math.pow(2, 32);\n    \n    var warnedPrecision = false;\n    function warnPrecision() {\n      if (!warnedPrecision) {\n        warnedPrecision = true;\n        console.warn('CBOR 64-bit integer array values may lose precision. No further warnings.');\n      }\n    }\n    \n    /**\n     * Unpacks 64-bit unsigned integer from byte array.\n     * @param {Uint8Array} bytes\n    */\n    function decodeUint64LE(bytes) {\n      warnPrecision();\n    \n      var byteLen = bytes.byteLength;\n      var offset = bytes.byteOffset;\n      var arrLen = byteLen / 8;\n    \n      var buffer = bytes.buffer.slice(offset, offset + byteLen);\n      var uint32View = new Uint32Array(buffer);\n    \n      var arr = new Array(arrLen);\n      for (var i = 0; i < arrLen; i++) {\n        var si = i * 2;\n        var lo = uint32View[si];\n        var hi = uint32View[si+1];\n        arr[i] = lo + UPPER32 * hi;\n      }\n    \n      return arr;\n    }\n    \n    /**\n     * Unpacks 64-bit signed integer from byte array.\n     * @param {Uint8Array} bytes\n    */\n    function decodeInt64LE(bytes) {\n      warnPrecision();\n    \n      var byteLen = bytes.byteLength;\n      var offset = bytes.byteOffset;\n      var arrLen = byteLen / 8;\n    \n      var buffer = bytes.buffer.slice(offset, offset + byteLen);\n      var uint32View = new Uint32Array(buffer);\n      var int32View = new Int32Array(buffer);\n    \n      var arr = new Array(arrLen);\n      for (var i = 0; i < arrLen; i++) {\n        var si = i * 2;\n        var lo = uint32View[si];\n        var hi = int32View[si+1];\n        arr[i] = lo + UPPER32 * hi;\n      }\n    \n      return arr;\n    }\n    \n    /**\n     * Unpacks typed array from byte array.\n     * @param {Uint8Array} bytes\n     * @param {type} ArrayType - desired output array type\n    */\n    function decodeNativeArray(bytes, ArrayType) {\n      var byteLen = bytes.byteLength;\n      var offset = bytes.byteOffset;\n      var buffer = bytes.buffer.slice(offset, offset + byteLen);\n      return new ArrayType(buffer);\n    }\n    \n    /**\n     * Support a subset of draft CBOR typed array tags:\n     *   <https://tools.ietf.org/html/draft-ietf-cbor-array-tags-00>\n     * Only support little-endian tags for now.\n     */\n    var nativeArrayTypes = {\n      64: Uint8Array,\n      69: Uint16Array,\n      70: Uint32Array,\n      72: Int8Array,\n      77: Int16Array,\n      78: Int32Array,\n      85: Float32Array,\n      86: Float64Array\n    };\n    \n    /**\n     * We can also decode 64-bit integer arrays, since ROS has these types.\n     */\n    var conversionArrayTypes = {\n      71: decodeUint64LE,\n      79: decodeInt64LE\n    };\n    \n    /**\n     * Handles CBOR typed array tags during decoding.\n     * @param {Uint8Array} data\n     * @param {Number} tag\n     */\n    function cborTypedArrayTagger(data, tag) {\n      if (tag in nativeArrayTypes) {\n        var arrayType = nativeArrayTypes[tag];\n        return decodeNativeArray(data, arrayType);\n      }\n      if (tag in conversionArrayTypes) {\n        return conversionArrayTypes[tag](data);\n      }\n      return data;\n    }\n    \n    if (typeof module !== 'undefined' && module.exports) {\n      module.exports = cborTypedArrayTagger;\n    }\n    \n    },{}],43:[function(require,module,exports){\n    module.exports = typeof window !== 'undefined' ? window.WebSocket : WebSocket;\n    \n    },{}],44:[function(require,module,exports){\n    /* global document */\n    module.exports = function Canvas() {\n        return document.createElement('canvas');\n    };\n    },{}],45:[function(require,module,exports){\n    /**\n     * @fileOverview\n     * @author Graeme Yeates - github.com/megawac\n     */\n    \n    'use strict';\n    \n    var Canvas = require('canvas');\n    var Image = Canvas.Image || window.Image;\n    \n    /**\n     * If a message was compressed as a PNG image (a compression hack since\n     * gzipping over WebSockets * is not supported yet), this function places the\n     * \"image\" in a canvas element then decodes the * \"image\" as a Base64 string.\n     *\n     * @private\n     * @param data - object containing the PNG data.\n     * @param callback - function with params:\n     *   * data - the uncompressed data\n     */\n    function decompressPng(data, callback) {\n      // Uncompresses the data before sending it through (use image/canvas to do so).\n      var image = new Image();\n      // When the image loads, extracts the raw data (JSON message).\n      image.onload = function() {\n        // Creates a local canvas to draw on.\n        var canvas = new Canvas();\n        var context = canvas.getContext('2d');\n    \n        // Sets width and height.\n        canvas.width = image.width;\n        canvas.height = image.height;\n    \n        // Prevents anti-aliasing and loosing data\n        context.imageSmoothingEnabled = false;\n        context.webkitImageSmoothingEnabled = false;\n        context.mozImageSmoothingEnabled = false;\n    \n        // Puts the data into the image.\n        context.drawImage(image, 0, 0);\n        // Grabs the raw, uncompressed data.\n        var imageData = context.getImageData(0, 0, image.width, image.height).data;\n    \n        // Constructs the JSON.\n        var jsonData = '';\n        for (var i = 0; i < imageData.length; i += 4) {\n          // RGB\n          jsonData += String.fromCharCode(imageData[i], imageData[i + 1], imageData[i + 2]);\n        }\n        callback(JSON.parse(jsonData));\n      };\n      // Sends the image data to load.\n      image.src = 'data:image/png;base64,' + data;\n    }\n    \n    module.exports = decompressPng;\n    \n    },{\"canvas\":44}],46:[function(require,module,exports){\n    exports.DOMImplementation = window.DOMImplementation;\n    exports.XMLSerializer = window.XMLSerializer;\n    exports.DOMParser = window.DOMParser;\n    \n    },{}],47:[function(require,module,exports){\n    var work = require('webworkify');\n    var workerSocketImpl = require('./workerSocketImpl');\n    \n    function WorkerSocket(uri) {\n      this.socket_ = work(workerSocketImpl);\n    \n      this.socket_.addEventListener('message', this.handleWorkerMessage_.bind(this));\n    \n      this.socket_.postMessage({\n        uri: uri,\n      });\n    }\n    \n    WorkerSocket.prototype.handleWorkerMessage_ = function(ev) {\n      var data = ev.data;\n      if (data instanceof ArrayBuffer || typeof data === 'string') {\n        // binary or JSON message from rosbridge\n        this.onmessage(ev);\n      } else {\n        // control message from the wrapped WebSocket\n        var type = data.type;\n        if (type === 'close') {\n          this.onclose(null);\n        } else if (type === 'open') {\n          this.onopen(null);\n        } else if (type === 'error') {\n          this.onerror(null);\n        } else {\n          throw 'Unknown message from workersocket';\n        }\n      }\n    };\n    \n    WorkerSocket.prototype.send = function(data) {\n      this.socket_.postMessage(data);\n    };\n    \n    WorkerSocket.prototype.close = function() {\n      this.socket_.postMessage({\n        close: true\n      });\n    };\n    \n    module.exports = WorkerSocket;\n    \n    },{\"./workerSocketImpl\":48,\"webworkify\":5}],48:[function(require,module,exports){\n    var WebSocket = WebSocket || require('ws');\n    \n    module.exports = function(self) {\n      var socket = null;\n    \n      function handleSocketMessage(ev) {\n        var data = ev.data;\n    \n        if (data instanceof ArrayBuffer) {\n          // binary message, transfer for speed\n          self.postMessage(data, [data]);\n        } else {\n          // JSON message, copy string\n          self.postMessage(data);\n        }\n      }\n    \n      function handleSocketControl(ev) {\n        self.postMessage({type: ev.type});\n      }\n    \n      self.addEventListener('message', function(ev) {\n        var data = ev.data;\n    \n        if (typeof data === 'string') {\n          // JSON message from ROSLIB\n          socket.send(data);\n        } else {\n          // control message\n          if (data.hasOwnProperty('close')) {\n            socket.close();\n            socket = null;\n          } else if (data.hasOwnProperty('uri')) {\n            var uri = data.uri;\n    \n            socket = new WebSocket(uri);\n            socket.binaryType = 'arraybuffer';\n    \n            socket.onmessage = handleSocketMessage;\n            socket.onclose = handleSocketControl;\n            socket.onopen = handleSocketControl;\n            socket.onerror = handleSocketControl;\n          } else {\n            throw 'Unknown message to WorkerSocket';\n          }\n        }\n      });\n    };\n    \n    },{\"ws\":43}]},{},[7]);\n    "]}]}